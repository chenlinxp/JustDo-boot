package ${package}.${classnametolower}.service.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.Map;

import ${package}.${classnametolower}.dao.${className}Dao;
import ${package}.${classnametolower}.domain.${className}DO;
import ${package}.${classnametolower}.service.${className}Service;



@SuppressWarnings("AlibabaRemoveCommentedCode")
@Service
@Transactional(readOnly = true,rollbackFor = Exception.class)
public class ${className}ServiceImpl implements ${className}Service {
	@Autowired
	private ${className}Dao ${classname}Dao;
	
	@Override
	public ${className}DO get(${pk.attrType} ${pk.attrname}){
		return ${classname}Dao.get(${pk.attrname});
	}
	
	@Override
	public List<${className}DO> list(Map<String, Object> map){
		return ${classname}Dao.list(map);
	}
	
	@Override
	public int count(Map<String, Object> map){
		return ${classname}Dao.count(map);
	}
	
	@Override
	@Transactional(readOnly = false,rollbackFor = Exception.class)
	public int save(${className}DO ${classname}){
		return ${classname}Dao.save(${classname});
	}
	
	@Override
	@Transactional(readOnly = false,rollbackFor = Exception.class)
	public int update(${className}DO ${classname}){
		return ${classname}Dao.update(${classname});
	}
	
	@Override
	@Transactional(readOnly = false,rollbackFor = Exception.class)
	public int del(${pk.attrType} ${pk.attrname}){
		return ${classname}Dao.del(${pk.attrname});
	}
	
	@Override
	@Transactional(readOnly = false,rollbackFor = Exception.class)
	public int batchDel(${pk.attrType}[] ${pk.attrname}s){
		return ${classname}Dao.batchDel(${pk.attrname}s);
	}
	
}
