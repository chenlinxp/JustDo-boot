<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.justdo.system.notice.dao.NoticeRecordDao">

	<select id="get" resultType="com.justdo.system.notice.domain.NoticeRecordDO">
		select  `NOTICE_RECORD_ID`, `NOTICE_ID`,`EMPLOYEE_ID`,`IS_READ`,`READ_DATE` from SYS_NOTICE_RECORD where NOTICE_RECORD_ID = #{value}
	</select>

	<select id="list" resultType="com.justdo.system.notice.domain.NoticeRecordDO">
		select  `NOTICE_RECORD_ID`, `NOTICE_ID`,`EMPLOYEE_ID`,`IS_READ`,`READ_DATE` from SYS_NOTICE_RECORD
		<where>
			<if test="noticeRecordId != null and noticeRecordId != ''"> and NOTICE_RECORD_ID != #{noticeRecordId} </if>
			<if test="noticeId != null and noticeId != ''"> and NOTICE_ID = #{noticeId} </if>
			<if test="employeeId != null and employeeId != ''"> and EMPLOYEE_ID = #{employeeId} </if>
			<if test="isRead != null and isRead != ''"> and IS_READ = #{isRead} </if>
			<if test="readDate != null and readDate != ''"> and READ_DATE = #{readDate} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by NOTICE_RECORD_ID desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from SYS_NOTICE_RECORD
		<where>
			<if test="noticeId != null and noticeId != ''"> and NOTICE_ID = #{noticeId} </if>
			<if test="employeeId != null and employeeId != ''"> and EMPLOYEE_ID = #{employeeId} </if>
			<if test="isRead != null and isRead != ''"> and IS_READ = #{isRead} </if>
			<if test="readDate != null and readDate != ''"> and READ_DATE = #{readDate} </if>
		</where>
	</select>

	<insert id="save" parameterType="com.justdo.system.notice.domain.NoticeRecordDO">
		<selectKey keyProperty="noticeRecordId" resultType="string" order="BEFORE">
			select replace(uuid(), '-', '') as noticeRecordId from dual
		</selectKey>
		insert into SYS_NOTICE_RECORD
		(
		`NOTICE_RECORD_ID`,
		`NOTICE_ID`,
		`EMPLOYEE_ID`,
		`IS_READ`,
		`READ_DATE`
		)
		values
		(
		#{noticeRecordId},
		#{noticeId},
		#{employeeId},
		#{isRead},
		#{readDate}
		)
	</insert>

	<update id="update" parameterType="com.justdo.system.notice.domain.NoticeRecordDO">
		update SYS_NOTICE_RECORD
		<set>
			<if test="noticeId != null">`NOTICE_ID` = #{noticeId}, </if>
			<if test="employeeId != null">`EMPLOYEE_ID` = #{employeeId}, </if>
			<if test="isRead != null">`IS_READ` = #{isRead}, </if>
			<if test="readDate != null">`READ_DATE` = #{readDate}</if>
		</set>
		where NOTICE_RECORD_ID = #{noticeRecordId}
	</update>

	<delete id="del">
		delete from SYS_NOTICE_RECORD where NOTICE_RECORD_ID = #{value}
	</delete>

	<delete id="batchDel">
		delete from SYS_NOTICE_RECORD where NOTICE_RECORD_ID in
		<foreach item="noticeRecordIds" collection="array" open="(" separator="," close=")">
			#{noticeRecordIds}
		</foreach>
	</delete>


	<insert id="batchSave" parameterType="java.util.ArrayList">
		insert into SYS_NOTICE_RECORD
		(
		`NOTICE_RECORD_ID`,
		`NOTICE_ID`,
		`EMPLOYEE_ID`,
		`IS_READ`,
		`READ_DATE`
		)
		values
		<foreach item="item" index="index" collection="list" separator=",">
			(
			#{item.noticeRecordId},
			#{item.noticeId},
			#{item.employeeId},
			#{item.isRead},
			#{item.readDate}
			)
		</foreach>
	</insert>
	<select id="listNoticeIds" resultType="String">
		select distinct NOTICE_ID from SYS_NOTICE_RECORD
		<where>
			<if test="noticeRecordId != null and noticeRecordId != ''"> and NOTICE_RECORD_ID = #{noticeRecordId} </if>
			<if test="noticeId != null and noticeId != ''"> and NOTICE_ID = #{noticeId} </if>
			<if test="employeeId != null and employeeId != ''"> and EMPLOYEE_ID = #{employeeId} </if>
			<if test="isRead != null and isRead != ''"> and IS_READ = #{isRead} </if>
			<if test="readDate != null and readDate != ''"> and READ_DATE = #{readDate} </if>
		</where>
	</select>

	<delete id="delByNoticebyId">
		delete from SYS_NOTICE_RECORD where NOTICE_ID = #{value}
	</delete>

	<delete id="batchDelByNoticebyId">
		delete from SYS_NOTICE_RECORD where NOTICE_ID in
		<foreach item="noticeId" collection="array" open="(" separator=","
				 close=")">
			#{noticeId}
		</foreach>
	</delete>

	<update id="changeRead" parameterType="com.justdo.system.notice.domain.NoticeRecordDO">
		update SYS_NOTICE_RECORD
		<set>
			<if test="isRead != null">`IS_READ` = #{isRead}, </if>
			<if test="readDate != null">`READ_DATE` = #{readDate}</if>
		</set>
		where NOTICE_ID = #{noticeId} and EMPLOYEE_ID = #{employeeId}
	</update>

</mapper>