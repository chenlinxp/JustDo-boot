2018-07-12 15:40:25 -Starting JustdoApplication on localhost with PID 1030 (/Users/chenlin/Documents/GitHub/JustDo-boot/target/classes started by chenlin in /Users/chenlin/Documents/GitHub/JustDo-boot)
2018-07-12 15:40:25 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-07-12 15:40:25 -The following profiles are active: dev
2018-07-12 15:40:25 -HV000001: Hibernate Validator 5.3.6.Final
2018-07-12 15:40:25 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:40:25 CST 2018]; root of context hierarchy
2018-07-12 15:40:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-12 15:40:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4b24509c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:40:27 -Bean 'shiroConfig' of type [com.justdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$177feb7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:40:27 -Bean 'userRealm' of type [com.justdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:40:27 -Bean 'redisManager' of type [com.justdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:40:27 -获取名称为: com.justdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-07-12 15:40:27 -Bean 'redisSessionDAO' of type [com.justdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:40:27 -Bean 'sessionDAO' of type [com.justdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:40:27 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:40:27 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:40:27 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:40:28 -Tomcat initialized with port(s): 8088 (http)
2018-07-12 15:40:28 -Starting service [Tomcat]
2018-07-12 15:40:28 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-07-12 15:40:28 -Initializing Spring embedded WebApplicationContext
2018-07-12 15:40:28 -Root WebApplicationContext: initialization completed in 2502 ms
2018-07-12 15:40:28 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-12 15:40:28 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-12 15:40:28 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-12 15:40:28 -Mapping filter: 'requestContextFilter' to: [/*]
2018-07-12 15:40:28 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-12 15:40:28 -Filter xssFilter was not registered (disabled)
2018-07-12 15:40:28 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-07-12 15:40:28 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-07-12 15:40:28 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-07-12 15:40:28 -Mapping servlet: 'dispatcherServlet' to [/]
2018-07-12 15:40:29 -{dataSource-1} inited
2018-07-12 15:40:30 -ProcessEngine default created
2018-07-12 15:40:31 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:40:25 CST 2018]; root of context hierarchy
2018-07-12 15:40:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-07-12 15:40:31 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-07-12 15:40:31 -Using default implementation for ThreadExecutor
2018-07-12 15:40:31 -Job execution threads will use class loader of thread: main
2018-07-12 15:40:31 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-12 15:40:31 -Quartz Scheduler v.2.2.1 created.
2018-07-12 15:40:31 -RAMJobStore initialized.
2018-07-12 15:40:31 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-07-12 15:40:31 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-07-12 15:40:31 -Quartz scheduler version: 2.2.1
2018-07-12 15:40:31 -JobFactory set to: com.justdo.common.quartz.factory.JobFactory@6694fb1b
2018-07-12 15:40:33 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.remove(java.lang.String)
2018-07-12 15:40:33 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.ModelController.list(int,int)
2018-07-12 15:40:33 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-07-12 15:40:33 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ModelController.model()
2018-07-12 15:40:33 -Mapped "{[/activiti/model/add]}" onto public void com.justdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-07-12 15:40:33 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.justdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-12 15:40:33 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-07-12 15:40:33 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.justdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-07-12 15:40:33 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.justdo.activiti.controller.ModelController.getStencilset()
2018-07-12 15:40:33 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.justdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-12 15:40:33 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.justdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-07-12 15:40:33 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ProcessController.add()
2018-07-12 15:40:33 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-07-12 15:40:33 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.ProcessController.list(int,int)
2018-07-12 15:40:33 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-07-12 15:40:33 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ProcessController.process()
2018-07-12 15:40:33 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-07-12 15:40:33 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-07-12 15:40:33 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.justdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-12 15:40:33 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.add()
2018-07-12 15:40:33 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-07-12 15:40:33 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-07-12 15:40:33 -Mapped "{[/act/salary/update]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.update(com.justdo.activiti.domain.SalaryDO)
2018-07-12 15:40:33 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:40:33 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.Salary()
2018-07-12 15:40:33 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.saveOrUpdate(com.justdo.activiti.domain.SalaryDO)
2018-07-12 15:40:33 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.justdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-12 15:40:33 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.TaskController.list(int,int)
2018-07-12 15:40:33 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.TaskController.gotoTask()
2018-07-12 15:40:33 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.justdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-12 15:40:33 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.TaskController.todo()
2018-07-12 15:40:33 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.justdo.activiti.vo.TaskVO> com.justdo.activiti.controller.TaskController.todoList()
2018-07-12 15:40:33 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.justdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-12 15:40:33 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:40:33 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.blog()
2018-07-12 15:40:33 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.add()
2018-07-12 15:40:33 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.remove(java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-07-12 15:40:33 -Mapped "{[/blog/bContent/update]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.update(com.justdo.blog.domain.ContentDO)
2018-07-12 15:40:33 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:40:33 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.save(com.justdo.blog.domain.ContentDO)
2018-07-12 15:40:33 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.bContent()
2018-07-12 15:40:33 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.common.exception.HandleErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-12 15:40:33 -Mapped "{[/error]}" onto public com.justdo.common.utils.R com.justdo.common.exception.HandleErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-12 15:40:33 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-07-12 15:40:33 -Mapped "{[/system/dept/update]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.update(com.justdo.system.dept.domain.DeptDO)
2018-07-12 15:40:33 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.justdo.system.dept.domain.DeptDO> com.justdo.system.dept.controller.DeptController.list()
2018-07-12 15:40:33 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.save(com.justdo.system.dept.domain.DeptDO)
2018-07-12 15:40:33 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.justdo.common.domain.Tree<com.justdo.system.dept.domain.DeptDO> com.justdo.system.dept.controller.DeptController.tree()
2018-07-12 15:40:33 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.dept()
2018-07-12 15:40:33 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.treeView()
2018-07-12 15:40:33 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.add()
2018-07-12 15:40:33 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-07-12 15:40:33 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/system/dict/update]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.update(com.justdo.system.dict.domain.DictDO)
2018-07-12 15:40:33 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:40:33 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.save(com.justdo.system.dict.domain.DictDO)
2018-07-12 15:40:33 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.justdo.system.dict.domain.DictDO> com.justdo.system.dict.controller.DictController.listType()
2018-07-12 15:40:33 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.dict(org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-07-12 15:40:33 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.justdo.system.dict.domain.DictDO> com.justdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-07-12 15:40:33 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.justdo.system.dicttype.domain.DictTypeDO> com.justdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-07-12 15:40:33 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.adddict()
2018-07-12 15:40:33 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.savetype(com.justdo.system.dicttype.domain.DictTypeDO)
2018-07-12 15:40:33 -Mapped "{[/system/dict/view/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.view(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.add()
2018-07-12 15:40:33 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-07-12 15:40:33 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-07-12 15:40:33 -Mapped "{[/system/file/update]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.update(com.justdo.system.file.domain.FileDO)
2018-07-12 15:40:33 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:40:33 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.save(com.justdo.system.file.domain.FileDO)
2018-07-12 15:40:33 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-07-12 15:40:33 -Mapped "{[/system/file/info/{id}]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.info(java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:40:33 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.justdo.system.generator.controller.GeneratorController.list()
2018-07-12 15:40:33 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.justdo.system.generator.controller.GeneratorController.generator()
2018-07-12 15:40:33 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.justdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-07-12 15:40:33 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.justdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/generator/batchCode]}" onto public void com.justdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-07-12 15:40:33 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.log.controller.LogController.remove(java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.justdo.system.log.controller.LogController.log()
2018-07-12 15:40:33 -Mapped "{[/system/log/list],methods=[GET]}" onto com.justdo.common.domain.PageDO<com.justdo.system.log.domain.LogDO> com.justdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:40:33 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-07-12 15:40:33 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.update(com.justdo.system.menu.domain.MenuDO)
2018-07-12 15:40:33 -Mapped "{[/system/menu/list]}" onto java.util.List<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:40:33 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.save(com.justdo.system.menu.domain.MenuDO)
2018-07-12 15:40:33 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.justdo.common.domain.Tree<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.justdo.common.domain.Tree<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.tree()
2018-07-12 15:40:33 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/notice/add],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.add()
2018-07-12 15:40:33 -Mapped "{[/system/notice/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.remove(java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/system/notice/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.remove(java.lang.Long[])
2018-07-12 15:40:33 -Mapped "{[/system/notice/update]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.update(com.justdo.system.notice.domain.NoticeDO)
2018-07-12 15:40:33 -Mapped "{[/system/notice/read/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.read(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/notice/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:40:33 -Mapped "{[/system/notice/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.save(com.justdo.system.notice.domain.NoticeDO)
2018-07-12 15:40:33 -Mapped "{[/system/notice/message],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.message()
2018-07-12 15:40:33 -Mapped "{[/system/notice/selflist],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:40:33 -Mapped "{[/system/notice/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/notice],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.Notice()
2018-07-12 15:40:33 -Mapped "{[/system/notice/selfnotice],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.selefNotice()
2018-07-12 15:40:33 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.add()
2018-07-12 15:40:33 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-07-12 15:40:33 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.update(com.justdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-07-12 15:40:33 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:40:33 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.save(com.justdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-07-12 15:40:33 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-07-12 15:40:33 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-07-12 15:40:33 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.add()
2018-07-12 15:40:33 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-07-12 15:40:33 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-07-12 15:40:33 -Mapped "{[/system/regexp/update]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.update(com.justdo.system.regexp.domain.RegexpDO)
2018-07-12 15:40:33 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:40:33 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.save(com.justdo.system.regexp.domain.RegexpDO)
2018-07-12 15:40:33 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.Regexp()
2018-07-12 15:40:33 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.add()
2018-07-12 15:40:33 -Mapped "{[/system/role/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.update(com.justdo.system.role.domain.RoleDO)
2018-07-12 15:40:33 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.justdo.system.role.domain.RoleDO> com.justdo.system.role.controller.RoleController.list()
2018-07-12 15:40:33 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.save(java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/system/role/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.save(com.justdo.system.role.domain.RoleDO)
2018-07-12 15:40:33 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-07-12 15:40:33 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.role()
2018-07-12 15:40:33 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.main()
2018-07-12 15:40:33 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.login(org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.logout()
2018-07-12 15:40:33 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/login],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-07-12 15:40:33 -Mapped "{[/system/online/list]}" onto public java.util.List<com.justdo.system.user.domain.UserOnline> com.justdo.system.user.controller.SessionController.list()
2018-07-12 15:40:33 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.justdo.system.user.controller.SessionController.online()
2018-07-12 15:40:33 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.justdo.common.utils.R com.justdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-07-12 15:40:33 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.justdo.system.user.controller.SessionController.sessionList()
2018-07-12 15:40:33 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.justdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:40:33 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.remove(java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/system/user/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.update(com.justdo.system.user.domain.UserDO)
2018-07-12 15:40:33 -Mapped "{[/system/user/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:40:33 -Mapped "{[/system/user/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.save(com.justdo.system.user.domain.UserDO)
2018-07-12 15:40:33 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-07-12 15:40:33 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.justdo.common.domain.Tree<com.justdo.system.dept.domain.DeptDO> com.justdo.system.user.controller.UserController.tree()
2018-07-12 15:40:33 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-07-12 15:40:33 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.treeView()
2018-07-12 15:40:33 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.resetPwd(com.justdo.system.user.domain.UserVO)
2018-07-12 15:40:33 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:40:33 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.updatePeronal(com.justdo.system.user.domain.UserDO)
2018-07-12 15:40:33 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.adminResetPwd(com.justdo.system.user.domain.UserVO)
2018-07-12 15:40:33 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-07-12 15:40:33 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-07-12 15:40:33 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-07-12 15:40:33 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-07-12 15:40:33 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-07-12 15:40:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-07-12 15:40:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-07-12 15:40:33 -Initializing ExecutorService  'brokerChannelExecutor'
2018-07-12 15:40:34 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:40:25 CST 2018]; root of context hierarchy
2018-07-12 15:40:34 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 15:40:34 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 15:40:34 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 15:40:34 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-07-12 15:40:34 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 15:40:35 -

Using default security password: 7a00e0f6-fbca-4c6e-8e37-1074d19ca74e

2018-07-12 15:40:35 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-07-12 15:40:35 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@3fed0c04, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@563bd6a4, org.springframework.security.web.context.SecurityContextPersistenceFilter@4b2af0eb, org.springframework.security.web.header.HeaderWriterFilter@63e40188, org.springframework.security.web.csrf.CsrfFilter@7ec75228, org.springframework.security.web.authentication.logout.LogoutFilter@3cc548f6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6d387e9b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@71c69628, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3549c070, org.springframework.security.web.session.SessionManagementFilter@3497ecea, org.springframework.security.web.access.ExceptionTranslationFilter@5f1a3c4]
2018-07-12 15:40:36 -Registering beans for JMX exposure on startup
2018-07-12 15:40:36 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-12 15:40:36 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-12 15:40:36 -Starting beans in phase 2147483647
2018-07-12 15:40:36 -Context refreshed
2018-07-12 15:40:36 -Found 1 custom documentation plugin(s)
2018-07-12 15:40:36 -Scanning for api listing references
2018-07-12 15:40:36 -Generating unique operation named: removeUsingPOST_1
2018-07-12 15:40:36 -Generating unique operation named: addUsingGET_1
2018-07-12 15:40:36 -Generating unique operation named: editUsingGET_1
2018-07-12 15:40:36 -Generating unique operation named: listUsingGET_1
2018-07-12 15:40:36 -Generating unique operation named: removeUsingPOST_2
2018-07-12 15:40:36 -Generating unique operation named: removeUsingPOST_3
2018-07-12 15:40:36 -Generating unique operation named: saveUsingPOST_1
2018-07-12 15:40:36 -Generating unique operation named: updateUsingGET_1
2018-07-12 15:40:36 -Generating unique operation named: updateUsingHEAD_1
2018-07-12 15:40:36 -Generating unique operation named: updateUsingPOST_1
2018-07-12 15:40:36 -Generating unique operation named: updateUsingPUT_1
2018-07-12 15:40:36 -Generating unique operation named: updateUsingPATCH_1
2018-07-12 15:40:36 -Generating unique operation named: updateUsingDELETE_1
2018-07-12 15:40:36 -Generating unique operation named: updateUsingOPTIONS_1
2018-07-12 15:40:36 -Generating unique operation named: updateUsingTRACE_1
2018-07-12 15:40:36 -Generating unique operation named: addUsingGET_2
2018-07-12 15:40:36 -Generating unique operation named: editUsingGET_2
2018-07-12 15:40:36 -Generating unique operation named: listUsingGET_2
2018-07-12 15:40:36 -Generating unique operation named: removeUsingPOST_4
2018-07-12 15:40:37 -Generating unique operation named: removeUsingPOST_5
2018-07-12 15:40:37 -Generating unique operation named: saveUsingPOST_2
2018-07-12 15:40:37 -Generating unique operation named: updateUsingGET_2
2018-07-12 15:40:37 -Generating unique operation named: updateUsingHEAD_2
2018-07-12 15:40:37 -Generating unique operation named: updateUsingPOST_2
2018-07-12 15:40:37 -Generating unique operation named: updateUsingPUT_2
2018-07-12 15:40:37 -Generating unique operation named: updateUsingPATCH_2
2018-07-12 15:40:37 -Generating unique operation named: updateUsingDELETE_2
2018-07-12 15:40:37 -Generating unique operation named: updateUsingOPTIONS_2
2018-07-12 15:40:37 -Generating unique operation named: updateUsingTRACE_2
2018-07-12 15:40:37 -Generating unique operation named: addUsingGET_3
2018-07-12 15:40:37 -Generating unique operation named: editUsingGET_3
2018-07-12 15:40:37 -Generating unique operation named: listUsingGET_3
2018-07-12 15:40:37 -Generating unique operation named: removeUsingPOST_6
2018-07-12 15:40:37 -Generating unique operation named: removeUsingPOST_7
2018-07-12 15:40:37 -Generating unique operation named: saveUsingPOST_3
2018-07-12 15:40:37 -Generating unique operation named: updateUsingGET_3
2018-07-12 15:40:37 -Generating unique operation named: updateUsingHEAD_3
2018-07-12 15:40:37 -Generating unique operation named: updateUsingPOST_3
2018-07-12 15:40:37 -Generating unique operation named: updateUsingPUT_3
2018-07-12 15:40:37 -Generating unique operation named: updateUsingPATCH_3
2018-07-12 15:40:37 -Generating unique operation named: updateUsingDELETE_3
2018-07-12 15:40:37 -Generating unique operation named: updateUsingOPTIONS_3
2018-07-12 15:40:37 -Generating unique operation named: updateUsingTRACE_3
2018-07-12 15:40:37 -Generating unique operation named: editUsingGET_4
2018-07-12 15:40:37 -Generating unique operation named: listUsingGET_4
2018-07-12 15:40:37 -Generating unique operation named: updateUsingPOST_4
2018-07-12 15:40:37 -Generating unique operation named: listUsingGET_5
2018-07-12 15:40:37 -Generating unique operation named: removeUsingPOST_8
2018-07-12 15:40:37 -Generating unique operation named: welcomeUsingGET_1
2018-07-12 15:40:37 -Generating unique operation named: addUsingGET_4
2018-07-12 15:40:37 -Generating unique operation named: editUsingGET_5
2018-07-12 15:40:37 -Generating unique operation named: listUsingGET_6
2018-07-12 15:40:37 -Generating unique operation named: removeUsingPOST_9
2018-07-12 15:40:37 -Generating unique operation named: saveUsingPOST_4
2018-07-12 15:40:37 -Generating unique operation named: treeUsingGET_1
2018-07-12 15:40:37 -Generating unique operation named: treeUsingGET_2
2018-07-12 15:40:37 -Generating unique operation named: updateUsingPOST_5
2018-07-12 15:40:37 -Generating unique operation named: batchRemoveUsingPOST_1
2018-07-12 15:40:37 -Generating unique operation named: editUsingGET_6
2018-07-12 15:40:37 -Generating unique operation named: listUsingGET_7
2018-07-12 15:40:37 -Generating unique operation named: addUsingGET_5
2018-07-12 15:40:37 -Generating unique operation named: editUsingGET_7
2018-07-12 15:40:37 -Generating unique operation named: listUsingGET_8
2018-07-12 15:40:37 -Generating unique operation named: removeUsingPOST_10
2018-07-12 15:40:37 -Generating unique operation named: removeUsingPOST_11
2018-07-12 15:40:37 -Generating unique operation named: saveUsingPOST_5
2018-07-12 15:40:37 -Generating unique operation named: updateUsingGET_4
2018-07-12 15:40:37 -Generating unique operation named: updateUsingHEAD_4
2018-07-12 15:40:37 -Generating unique operation named: updateUsingPOST_6
2018-07-12 15:40:37 -Generating unique operation named: updateUsingPUT_4
2018-07-12 15:40:37 -Generating unique operation named: updateUsingPATCH_4
2018-07-12 15:40:37 -Generating unique operation named: updateUsingDELETE_4
2018-07-12 15:40:37 -Generating unique operation named: updateUsingOPTIONS_4
2018-07-12 15:40:37 -Generating unique operation named: updateUsingTRACE_4
2018-07-12 15:40:37 -Generating unique operation named: addUsingGET_6
2018-07-12 15:40:37 -Generating unique operation named: batchRemoveUsingPOST_2
2018-07-12 15:40:37 -Generating unique operation named: deployUsingPOST_1
2018-07-12 15:40:37 -Generating unique operation named: listUsingGET_9
2018-07-12 15:40:37 -Generating unique operation named: removeUsingPOST_12
2018-07-12 15:40:37 -Generating unique operation named: addUsingGET_7
2018-07-12 15:40:37 -Generating unique operation named: editUsingGET_8
2018-07-12 15:40:37 -Generating unique operation named: infoUsingGET_1
2018-07-12 15:40:37 -Generating unique operation named: infoUsingHEAD_1
2018-07-12 15:40:37 -Generating unique operation named: infoUsingPOST_1
2018-07-12 15:40:37 -Generating unique operation named: infoUsingPUT_1
2018-07-12 15:40:37 -Generating unique operation named: infoUsingPATCH_1
2018-07-12 15:40:37 -Generating unique operation named: infoUsingDELETE_1
2018-07-12 15:40:37 -Generating unique operation named: infoUsingOPTIONS_1
2018-07-12 15:40:37 -Generating unique operation named: infoUsingTRACE_1
2018-07-12 15:40:37 -Generating unique operation named: listUsingGET_10
2018-07-12 15:40:37 -Generating unique operation named: removeUsingPOST_13
2018-07-12 15:40:37 -Generating unique operation named: removeUsingPOST_14
2018-07-12 15:40:37 -Generating unique operation named: saveUsingPOST_6
2018-07-12 15:40:37 -Generating unique operation named: updateUsingPOST_7
2018-07-12 15:40:37 -Generating unique operation named: addUsingGET_8
2018-07-12 15:40:37 -Generating unique operation named: editUsingGET_9
2018-07-12 15:40:37 -Generating unique operation named: listUsingGET_11
2018-07-12 15:40:37 -Generating unique operation named: removeUsingPOST_15
2018-07-12 15:40:37 -Generating unique operation named: removeUsingPOST_16
2018-07-12 15:40:37 -Generating unique operation named: saveUsingPOST_7
2018-07-12 15:40:37 -Generating unique operation named: updateUsingGET_5
2018-07-12 15:40:38 -Generating unique operation named: updateUsingHEAD_5
2018-07-12 15:40:38 -Generating unique operation named: updateUsingPOST_8
2018-07-12 15:40:38 -Generating unique operation named: updateUsingPUT_5
2018-07-12 15:40:38 -Generating unique operation named: updateUsingPATCH_5
2018-07-12 15:40:38 -Generating unique operation named: updateUsingDELETE_5
2018-07-12 15:40:38 -Generating unique operation named: updateUsingOPTIONS_5
2018-07-12 15:40:38 -Generating unique operation named: updateUsingTRACE_5
2018-07-12 15:40:38 -Generating unique operation named: addUsingGET_9
2018-07-12 15:40:38 -Generating unique operation named: batchRemoveUsingPOST_3
2018-07-12 15:40:38 -Generating unique operation named: editUsingGET_10
2018-07-12 15:40:38 -Generating unique operation named: listUsingGET_12
2018-07-12 15:40:38 -Generating unique operation named: saveUsingPOST_8
2018-07-12 15:40:38 -Generating unique operation named: saveUsingPOST_9
2018-07-12 15:40:38 -Generating unique operation named: updateUsingPOST_9
2018-07-12 15:40:38 -Generating unique operation named: addUsingGET_10
2018-07-12 15:40:38 -Generating unique operation named: editUsingGET_11
2018-07-12 15:40:38 -Generating unique operation named: listUsingGET_13
2018-07-12 15:40:38 -Generating unique operation named: removeUsingPOST_17
2018-07-12 15:40:38 -Generating unique operation named: removeUsingPOST_18
2018-07-12 15:40:38 -Generating unique operation named: updateUsingGET_6
2018-07-12 15:40:38 -Generating unique operation named: updateUsingHEAD_6
2018-07-12 15:40:38 -Generating unique operation named: updateUsingPOST_10
2018-07-12 15:40:38 -Generating unique operation named: updateUsingPUT_6
2018-07-12 15:40:38 -Generating unique operation named: updateUsingPATCH_6
2018-07-12 15:40:38 -Generating unique operation named: updateUsingDELETE_6
2018-07-12 15:40:38 -Generating unique operation named: updateUsingOPTIONS_6
2018-07-12 15:40:38 -Generating unique operation named: updateUsingTRACE_6
2018-07-12 15:40:38 -Generating unique operation named: listUsingGET_14
2018-07-12 15:40:38 -Generating unique operation named: listUsingHEAD_1
2018-07-12 15:40:38 -Generating unique operation named: listUsingPOST_1
2018-07-12 15:40:38 -Generating unique operation named: listUsingPUT_1
2018-07-12 15:40:38 -Generating unique operation named: listUsingPATCH_1
2018-07-12 15:40:38 -Generating unique operation named: listUsingDELETE_1
2018-07-12 15:40:38 -Generating unique operation named: listUsingOPTIONS_1
2018-07-12 15:40:38 -Generating unique operation named: listUsingTRACE_1
2018-07-12 15:40:38 -Generating unique operation named: listUsingGET_15
2018-07-12 15:40:38 -Generating unique operation named: addUsingGET_11
2018-07-12 15:40:38 -Generating unique operation named: batchRemoveUsingPOST_4
2018-07-12 15:40:38 -Generating unique operation named: editUsingGET_12
2018-07-12 15:40:38 -Generating unique operation named: listUsingGET_16
2018-07-12 15:40:38 -Generating unique operation named: removeUsingPOST_19
2018-07-12 15:40:38 -Generating unique operation named: saveUsingPOST_10
2018-07-12 15:40:38 -Generating unique operation named: treeUsingGET_3
2018-07-12 15:40:38 -Generating unique operation named: treeViewUsingGET_1
2018-07-12 15:40:38 -Generating unique operation named: updateUsingPOST_11
2018-07-12 15:40:38 -Starting Quartz Scheduler now
2018-07-12 15:40:38 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-07-12 15:40:38 -Starting...
2018-07-12 15:40:38 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-07-12 15:40:38 -Started.
2018-07-12 15:40:38 -Initializing ProtocolHandler ["http-nio-8088"]
2018-07-12 15:40:38 -Starting ProtocolHandler ["http-nio-8088"]
2018-07-12 15:40:38 -Using a shared selector for servlet write/read
2018-07-12 15:40:38 -Tomcat started on port(s): 8088 (http)
2018-07-12 15:40:38 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-07-12 15:40:38 -==> Parameters: 
2018-07-12 15:40:38 -<==      Total: 1
2018-07-12 15:40:38 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-07-12 15:40:38 -Started JustdoApplication in 13.673 seconds (JVM running for 14.219)
2018-07-12 15:41:33 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2018-07-12 15:52:08 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-12 15:52:08 -FrameworkServlet 'dispatcherServlet': initialization started
2018-07-12 15:52:09 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2018-07-12 15:52:09 -Enabling session validation scheduler...
2018-07-12 15:52:09 -请求地址 : http://127.0.0.1:8088/index
2018-07-12 15:52:09 -HTTP METHOD : GET
2018-07-12 15:52:09 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.index
2018-07-12 15:52:09 -参数 : [{}]
2018-07-12 15:52:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-07-12 15:52:09 -==> Parameters: 1(Long)
2018-07-12 15:52:09 -<==      Total: 30
2018-07-12 15:52:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-07-12 15:52:09 -==> Parameters: 150(Long)
2018-07-12 15:52:09 -<==      Total: 0
2018-07-12 15:52:09 -耗时 : 35
2018-07-12 15:52:09 -返回值 : index
2018-07-12 15:52:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 15:52:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.justdo.system.user.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p(String), 127.0.0.1(String), 2018-07-12 15:52:09.187(Timestamp)
2018-07-12 15:52:09 -<==    Updates: 1
2018-07-12 15:52:09 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-12 15:52:09 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-12 15:52:09 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-12 15:52:09 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-12 15:52:09 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-12 15:52:09 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-12 15:52:09 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-12 15:52:09 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 15:52:09 -HTTP METHOD : GET
2018-07-12 15:52:09 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 15:52:09 -参数 : []
2018-07-12 15:52:09 -耗时 : 0
2018-07-12 15:52:09 -返回值 : main
2018-07-12 15:52:09 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 15:52:09 -HTTP METHOD : GET
2018-07-12 15:52:09 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 15:52:09 -参数 : []
2018-07-12 15:52:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 15:52:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 15:52:09 -<==      Total: 0
2018-07-12 15:52:09 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 15:52:09 -==> Parameters: 1(Long), 0(String)
2018-07-12 15:52:09 -<==      Total: 1
2018-07-12 15:52:09 -耗时 : 12
2018-07-12 15:52:09 -返回值 : com.justdo.common.utils.PageUtils@73bc4dd7
2018-07-12 15:52:09 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 15:52:09 -HTTP METHOD : GET
2018-07-12 15:52:09 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 15:52:09 -参数 : []
2018-07-12 15:52:09 -耗时 : 1
2018-07-12 15:52:09 -返回值 : main
2018-07-12 15:52:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:11 -请求地址 : http://127.0.0.1:8088/system/dict
2018-07-12 15:52:11 -HTTP METHOD : GET
2018-07-12 15:52:11 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.dict
2018-07-12 15:52:11 -参数 : [{}]
2018-07-12 15:52:11 -耗时 : 0
2018-07-12 15:52:11 -返回值 : system/dict/dict
2018-07-12 15:52:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:11 -请求地址 : http://127.0.0.1:8088/system/dict/type
2018-07-12 15:52:11 -HTTP METHOD : GET
2018-07-12 15:52:11 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.listType
2018-07-12 15:52:11 -参数 : []
2018-07-12 15:52:11 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-07-12 15:52:11 -==> Parameters: 
2018-07-12 15:52:11 -<==      Total: 31
2018-07-12 15:52:11 -耗时 : 9
2018-07-12 15:52:11 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-07-12 15:52:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:11 -请求地址 : http://127.0.0.1:8088/system/dict/list
2018-07-12 15:52:11 -HTTP METHOD : GET
2018-07-12 15:52:11 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.list
2018-07-12 15:52:11 -参数 : [{limit=10, offset=0}]
2018-07-12 15:52:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-07-12 15:52:11 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 15:52:11 -<==      Total: 10
2018-07-12 15:52:11 -==>  Preparing: select count(*) from sys_dict3 
2018-07-12 15:52:11 -==> Parameters: 
2018-07-12 15:52:11 -<==      Total: 1
2018-07-12 15:52:11 -耗时 : 10
2018-07-12 15:52:11 -返回值 : com.justdo.common.utils.PageUtils@34f8b781
2018-07-12 15:52:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:12 -请求地址 : http://127.0.0.1:8088/system/regexp
2018-07-12 15:52:12 -HTTP METHOD : GET
2018-07-12 15:52:12 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.Regexp
2018-07-12 15:52:12 -参数 : []
2018-07-12 15:52:12 -耗时 : 0
2018-07-12 15:52:12 -返回值 : system/regexp/regexp
2018-07-12 15:52:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:12 -请求地址 : http://127.0.0.1:8088/system/regexp/list
2018-07-12 15:52:12 -HTTP METHOD : GET
2018-07-12 15:52:12 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.list
2018-07-12 15:52:12 -参数 : [{limit=10, offset=0, rname=}]
2018-07-12 15:52:12 -==>  Preparing: select RID,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from SYS_REGEXP order by RID desc 
2018-07-12 15:52:12 -==> Parameters: 
2018-07-12 15:52:12 -<==      Total: 9
2018-07-12 15:52:12 -==>  Preparing: select count(*) from sys_regexp 
2018-07-12 15:52:12 -==> Parameters: 
2018-07-12 15:52:12 -<==      Total: 1
2018-07-12 15:52:12 -耗时 : 10
2018-07-12 15:52:12 -返回值 : com.justdo.common.utils.PageUtils@3ffaa71a
2018-07-12 15:52:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:13 -请求地址 : http://127.0.0.1:8088/system/file
2018-07-12 15:52:13 -HTTP METHOD : GET
2018-07-12 15:52:13 -CLASS_METHOD : com.justdo.system.file.controller.FileController.sysFile
2018-07-12 15:52:13 -参数 : [{}]
2018-07-12 15:52:13 -耗时 : 1
2018-07-12 15:52:13 -返回值 : system/file/file
2018-07-12 15:52:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:52:13 -请求地址 : http://127.0.0.1:8088/system/file/list
2018-07-12 15:52:13 -HTTP METHOD : GET
2018-07-12 15:52:13 -CLASS_METHOD : com.justdo.system.file.controller.FileController.list
2018-07-12 15:52:13 -参数 : [{limit=12, offset=0, type=}]
2018-07-12 15:52:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-07-12 15:52:13 -==> Parameters: 0(Integer), 12(Integer)
2018-07-12 15:52:13 -<==      Total: 10
2018-07-12 15:52:13 -==>  Preparing: select count(*) from sys_file 
2018-07-12 15:52:13 -==> Parameters: 
2018-07-12 15:52:13 -<==      Total: 1
2018-07-12 15:52:13 -耗时 : 12
2018-07-12 15:52:13 -返回值 : com.justdo.common.utils.PageUtils@459f1d69
2018-07-12 15:54:43 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:40:25 CST 2018]; root of context hierarchy
2018-07-12 15:54:43 -Stopping beans in phase 2147483647
2018-07-12 15:54:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-07-12 15:54:43 -Stopping...
2018-07-12 15:54:43 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-07-12 15:54:43 -Stopped.
2018-07-12 15:54:43 -Unregistering JMX-exposed beans on shutdown
2018-07-12 15:54:43 -Unregistering JMX-exposed beans
2018-07-12 15:54:43 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-07-12 15:54:43 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-07-12 15:54:43 -清除SpringContextHolder中的ApplicationContext:org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:40:25 CST 2018]; root of context hierarchy
2018-07-12 15:54:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-07-12 15:54:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-07-12 15:54:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-07-12 15:54:43 -Shutting down Quartz Scheduler
2018-07-12 15:54:43 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-07-12 15:54:43 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-07-12 15:54:43 -{dataSource-1} closed
2018-07-12 15:54:43 -Disabled session validation scheduler.
2018-07-12 15:54:54 -Starting JustdoApplication on localhost with PID 1066 (/Users/chenlin/Documents/GitHub/JustDo-boot/target/classes started by chenlin in /Users/chenlin/Documents/GitHub/JustDo-boot)
2018-07-12 15:54:54 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-07-12 15:54:54 -The following profiles are active: dev
2018-07-12 15:54:54 -HV000001: Hibernate Validator 5.3.6.Final
2018-07-12 15:54:54 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:54:54 CST 2018]; root of context hierarchy
2018-07-12 15:54:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-12 15:54:56 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a48720f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:54:56 -Bean 'shiroConfig' of type [com.justdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$70e2bbd5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:54:56 -Bean 'userRealm' of type [com.justdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:54:56 -Bean 'redisManager' of type [com.justdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:54:56 -获取名称为: com.justdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-07-12 15:54:57 -Bean 'redisSessionDAO' of type [com.justdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:54:57 -Bean 'sessionDAO' of type [com.justdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:54:57 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:54:57 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:54:57 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:54:57 -Tomcat initialized with port(s): 8088 (http)
2018-07-12 15:54:57 -Starting service [Tomcat]
2018-07-12 15:54:57 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-07-12 15:54:57 -Initializing Spring embedded WebApplicationContext
2018-07-12 15:54:57 -Root WebApplicationContext: initialization completed in 2772 ms
2018-07-12 15:54:58 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-12 15:54:58 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-12 15:54:58 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-12 15:54:58 -Mapping filter: 'requestContextFilter' to: [/*]
2018-07-12 15:54:58 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-12 15:54:58 -Filter xssFilter was not registered (disabled)
2018-07-12 15:54:58 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-07-12 15:54:58 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-07-12 15:54:58 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-07-12 15:54:58 -Mapping servlet: 'dispatcherServlet' to [/]
2018-07-12 15:54:58 -{dataSource-1} inited
2018-07-12 15:55:00 -ProcessEngine default created
2018-07-12 15:55:01 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:54:54 CST 2018]; root of context hierarchy
2018-07-12 15:55:01 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-07-12 15:55:01 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-07-12 15:55:01 -Using default implementation for ThreadExecutor
2018-07-12 15:55:01 -Job execution threads will use class loader of thread: main
2018-07-12 15:55:01 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-12 15:55:01 -Quartz Scheduler v.2.2.1 created.
2018-07-12 15:55:01 -RAMJobStore initialized.
2018-07-12 15:55:01 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-07-12 15:55:01 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-07-12 15:55:01 -Quartz scheduler version: 2.2.1
2018-07-12 15:55:01 -JobFactory set to: com.justdo.common.quartz.factory.JobFactory@446a692f
2018-07-12 15:55:02 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.remove(java.lang.String)
2018-07-12 15:55:02 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.ModelController.list(int,int)
2018-07-12 15:55:02 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-07-12 15:55:02 -Mapped "{[/activiti/model/add]}" onto public void com.justdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-07-12 15:55:02 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.justdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-07-12 15:55:02 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.justdo.activiti.controller.ModelController.getStencilset()
2018-07-12 15:55:02 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.justdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-12 15:55:02 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-07-12 15:55:02 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.justdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-12 15:55:02 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.justdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-07-12 15:55:02 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ModelController.model()
2018-07-12 15:55:02 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ProcessController.add()
2018-07-12 15:55:02 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-07-12 15:55:02 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.ProcessController.list(int,int)
2018-07-12 15:55:02 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-07-12 15:55:02 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-07-12 15:55:02 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-07-12 15:55:02 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.justdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-12 15:55:02 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ProcessController.process()
2018-07-12 15:55:02 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.add()
2018-07-12 15:55:02 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-07-12 15:55:02 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-07-12 15:55:02 -Mapped "{[/act/salary/update]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.update(com.justdo.activiti.domain.SalaryDO)
2018-07-12 15:55:02 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.Salary()
2018-07-12 15:55:02 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.saveOrUpdate(com.justdo.activiti.domain.SalaryDO)
2018-07-12 15:55:02 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.justdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-12 15:55:02 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.TaskController.list(int,int)
2018-07-12 15:55:02 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.TaskController.gotoTask()
2018-07-12 15:55:02 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.justdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-12 15:55:02 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.TaskController.todo()
2018-07-12 15:55:02 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.justdo.activiti.vo.TaskVO> com.justdo.activiti.controller.TaskController.todoList()
2018-07-12 15:55:02 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.justdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-12 15:55:02 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.blog()
2018-07-12 15:55:02 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.add()
2018-07-12 15:55:02 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.remove(java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-07-12 15:55:02 -Mapped "{[/blog/bContent/update]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.update(com.justdo.blog.domain.ContentDO)
2018-07-12 15:55:02 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.save(com.justdo.blog.domain.ContentDO)
2018-07-12 15:55:02 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.bContent()
2018-07-12 15:55:02 -Mapped "{[/error]}" onto public com.justdo.common.utils.R com.justdo.common.exception.HandleErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-12 15:55:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.common.exception.HandleErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-12 15:55:02 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-07-12 15:55:02 -Mapped "{[/system/dept/update]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.update(com.justdo.system.dept.domain.DeptDO)
2018-07-12 15:55:02 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.justdo.system.dept.domain.DeptDO> com.justdo.system.dept.controller.DeptController.list()
2018-07-12 15:55:02 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.save(com.justdo.system.dept.domain.DeptDO)
2018-07-12 15:55:02 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.justdo.common.domain.Tree<com.justdo.system.dept.domain.DeptDO> com.justdo.system.dept.controller.DeptController.tree()
2018-07-12 15:55:02 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.dept()
2018-07-12 15:55:02 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.treeView()
2018-07-12 15:55:02 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.add()
2018-07-12 15:55:02 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-07-12 15:55:02 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/system/dict/update]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.update(com.justdo.system.dict.domain.DictDO)
2018-07-12 15:55:02 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.save(com.justdo.system.dict.domain.DictDO)
2018-07-12 15:55:02 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-07-12 15:55:02 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.justdo.system.dict.domain.DictDO> com.justdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-07-12 15:55:02 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.justdo.system.dict.domain.DictDO> com.justdo.system.dict.controller.DictController.listType()
2018-07-12 15:55:02 -Mapped "{[/system/dict/view/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.view(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.savetype(com.justdo.system.dicttype.domain.DictTypeDO)
2018-07-12 15:55:02 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.justdo.system.dicttype.domain.DictTypeDO> com.justdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-07-12 15:55:02 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.adddict()
2018-07-12 15:55:02 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.dict(org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.add()
2018-07-12 15:55:02 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-07-12 15:55:02 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-07-12 15:55:02 -Mapped "{[/system/file/update]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.update(com.justdo.system.file.domain.FileDO)
2018-07-12 15:55:02 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.save(com.justdo.system.file.domain.FileDO)
2018-07-12 15:55:02 -Mapped "{[/system/file/info/{id}]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.info(java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-07-12 15:55:02 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.justdo.system.generator.controller.GeneratorController.list()
2018-07-12 15:55:02 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.justdo.system.generator.controller.GeneratorController.generator()
2018-07-12 15:55:02 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.justdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.justdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-07-12 15:55:02 -Mapped "{[/system/generator/batchCode]}" onto public void com.justdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-07-12 15:55:02 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.log.controller.LogController.remove(java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.justdo.system.log.controller.LogController.log()
2018-07-12 15:55:02 -Mapped "{[/system/log/list],methods=[GET]}" onto com.justdo.common.domain.PageDO<com.justdo.system.log.domain.LogDO> com.justdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-07-12 15:55:02 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.update(com.justdo.system.menu.domain.MenuDO)
2018-07-12 15:55:02 -Mapped "{[/system/menu/list]}" onto java.util.List<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.save(com.justdo.system.menu.domain.MenuDO)
2018-07-12 15:55:02 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.justdo.common.domain.Tree<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.justdo.common.domain.Tree<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.tree()
2018-07-12 15:55:02 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/notice/add],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.add()
2018-07-12 15:55:02 -Mapped "{[/system/notice/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.remove(java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/system/notice/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.remove(java.lang.Long[])
2018-07-12 15:55:02 -Mapped "{[/system/notice/update]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.update(com.justdo.system.notice.domain.NoticeDO)
2018-07-12 15:55:02 -Mapped "{[/system/notice/read/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.read(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/notice/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/system/notice/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.save(com.justdo.system.notice.domain.NoticeDO)
2018-07-12 15:55:02 -Mapped "{[/system/notice/message],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.message()
2018-07-12 15:55:02 -Mapped "{[/system/notice/selflist],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/system/notice/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/notice],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.Notice()
2018-07-12 15:55:02 -Mapped "{[/system/notice/selfnotice],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.selefNotice()
2018-07-12 15:55:02 -Mapped "{[/system/organ/add],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.add()
2018-07-12 15:55:02 -Mapped "{[/system/organ/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.remove(java.lang.String)
2018-07-12 15:55:02 -Mapped "{[/system/organ/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.remove(java.lang.String[])
2018-07-12 15:55:02 -Mapped "{[/system/organ/update]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.update(com.justdo.system.organ.domain.OrganDO)
2018-07-12 15:55:02 -Mapped "{[/system/organ/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.organ.controller.OrganController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/system/organ/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.save(com.justdo.system.organ.domain.OrganDO)
2018-07-12 15:55:02 -Mapped "{[/system/organ/edit/{organid}],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/organ],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.Organ()
2018-07-12 15:55:02 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.add()
2018-07-12 15:55:02 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-07-12 15:55:02 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.update(com.justdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-07-12 15:55:02 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.save(com.justdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-07-12 15:55:02 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-07-12 15:55:02 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-07-12 15:55:02 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.add()
2018-07-12 15:55:02 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-07-12 15:55:02 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-07-12 15:55:02 -Mapped "{[/system/regexp/update]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.update(com.justdo.system.regexp.domain.RegexpDO)
2018-07-12 15:55:02 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.save(com.justdo.system.regexp.domain.RegexpDO)
2018-07-12 15:55:02 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.Regexp()
2018-07-12 15:55:02 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.add()
2018-07-12 15:55:02 -Mapped "{[/system/role/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.update(com.justdo.system.role.domain.RoleDO)
2018-07-12 15:55:02 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.justdo.system.role.domain.RoleDO> com.justdo.system.role.controller.RoleController.list()
2018-07-12 15:55:02 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.save(java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/system/role/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.save(com.justdo.system.role.domain.RoleDO)
2018-07-12 15:55:02 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-07-12 15:55:02 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.role()
2018-07-12 15:55:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.main()
2018-07-12 15:55:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.logout()
2018-07-12 15:55:02 -Mapped "{[/login],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-07-12 15:55:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.login(org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/online/list]}" onto public java.util.List<com.justdo.system.user.domain.UserOnline> com.justdo.system.user.controller.SessionController.list()
2018-07-12 15:55:02 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.justdo.common.utils.R com.justdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-07-12 15:55:02 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.justdo.system.user.controller.SessionController.online()
2018-07-12 15:55:02 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.justdo.system.user.controller.SessionController.sessionList()
2018-07-12 15:55:02 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.justdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.remove(java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/system/user/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.update(com.justdo.system.user.domain.UserDO)
2018-07-12 15:55:02 -Mapped "{[/system/user/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 15:55:02 -Mapped "{[/system/user/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.save(com.justdo.system.user.domain.UserDO)
2018-07-12 15:55:02 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-07-12 15:55:02 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.justdo.common.domain.Tree<com.justdo.system.dept.domain.DeptDO> com.justdo.system.user.controller.UserController.tree()
2018-07-12 15:55:02 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.resetPwd(com.justdo.system.user.domain.UserVO)
2018-07-12 15:55:02 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.updatePeronal(com.justdo.system.user.domain.UserDO)
2018-07-12 15:55:02 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.adminResetPwd(com.justdo.system.user.domain.UserVO)
2018-07-12 15:55:02 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-07-12 15:55:02 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-07-12 15:55:02 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.treeView()
2018-07-12 15:55:02 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-07-12 15:55:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-07-12 15:55:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-07-12 15:55:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-07-12 15:55:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-07-12 15:55:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-07-12 15:55:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-07-12 15:55:03 -Initializing ExecutorService  'brokerChannelExecutor'
2018-07-12 15:55:03 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:54:54 CST 2018]; root of context hierarchy
2018-07-12 15:55:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 15:55:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 15:55:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 15:55:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-07-12 15:55:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 15:55:05 -

Using default security password: 1f4acc9a-c97d-46dd-9739-d3637dfe9ea1

2018-07-12 15:55:05 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-07-12 15:55:05 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@74ed7111, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@74691677, org.springframework.security.web.context.SecurityContextPersistenceFilter@7cc7e441, org.springframework.security.web.header.HeaderWriterFilter@5b6ec94a, org.springframework.security.web.csrf.CsrfFilter@2148849f, org.springframework.security.web.authentication.logout.LogoutFilter@7d6a9d5e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@64245ca9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a482b3a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3314f179, org.springframework.security.web.session.SessionManagementFilter@73839f22, org.springframework.security.web.access.ExceptionTranslationFilter@630bd5e7]
2018-07-12 15:55:06 -Registering beans for JMX exposure on startup
2018-07-12 15:55:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-12 15:55:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-12 15:55:06 -Starting beans in phase 2147483647
2018-07-12 15:55:06 -Context refreshed
2018-07-12 15:55:06 -Found 1 custom documentation plugin(s)
2018-07-12 15:55:06 -Scanning for api listing references
2018-07-12 15:55:06 -Generating unique operation named: removeUsingPOST_1
2018-07-12 15:55:06 -Generating unique operation named: addUsingGET_1
2018-07-12 15:55:06 -Generating unique operation named: editUsingGET_1
2018-07-12 15:55:06 -Generating unique operation named: listUsingGET_1
2018-07-12 15:55:06 -Generating unique operation named: removeUsingPOST_2
2018-07-12 15:55:06 -Generating unique operation named: removeUsingPOST_3
2018-07-12 15:55:06 -Generating unique operation named: saveUsingPOST_1
2018-07-12 15:55:06 -Generating unique operation named: updateUsingGET_1
2018-07-12 15:55:06 -Generating unique operation named: updateUsingHEAD_1
2018-07-12 15:55:06 -Generating unique operation named: updateUsingPOST_1
2018-07-12 15:55:06 -Generating unique operation named: updateUsingPUT_1
2018-07-12 15:55:06 -Generating unique operation named: updateUsingPATCH_1
2018-07-12 15:55:06 -Generating unique operation named: updateUsingDELETE_1
2018-07-12 15:55:06 -Generating unique operation named: updateUsingOPTIONS_1
2018-07-12 15:55:06 -Generating unique operation named: updateUsingTRACE_1
2018-07-12 15:55:06 -Generating unique operation named: addUsingGET_2
2018-07-12 15:55:06 -Generating unique operation named: editUsingGET_2
2018-07-12 15:55:06 -Generating unique operation named: listUsingGET_2
2018-07-12 15:55:06 -Generating unique operation named: removeUsingPOST_4
2018-07-12 15:55:06 -Generating unique operation named: removeUsingPOST_5
2018-07-12 15:55:06 -Generating unique operation named: saveUsingPOST_2
2018-07-12 15:55:06 -Generating unique operation named: updateUsingGET_2
2018-07-12 15:55:06 -Generating unique operation named: updateUsingHEAD_2
2018-07-12 15:55:06 -Generating unique operation named: updateUsingPOST_2
2018-07-12 15:55:06 -Generating unique operation named: updateUsingPUT_2
2018-07-12 15:55:06 -Generating unique operation named: updateUsingPATCH_2
2018-07-12 15:55:06 -Generating unique operation named: updateUsingDELETE_2
2018-07-12 15:55:06 -Generating unique operation named: updateUsingOPTIONS_2
2018-07-12 15:55:06 -Generating unique operation named: updateUsingTRACE_2
2018-07-12 15:55:06 -Generating unique operation named: addUsingGET_3
2018-07-12 15:55:06 -Generating unique operation named: editUsingGET_3
2018-07-12 15:55:06 -Generating unique operation named: listUsingGET_3
2018-07-12 15:55:06 -Generating unique operation named: removeUsingPOST_6
2018-07-12 15:55:06 -Generating unique operation named: removeUsingPOST_7
2018-07-12 15:55:06 -Generating unique operation named: saveUsingPOST_3
2018-07-12 15:55:06 -Generating unique operation named: updateUsingGET_3
2018-07-12 15:55:06 -Generating unique operation named: updateUsingHEAD_3
2018-07-12 15:55:06 -Generating unique operation named: updateUsingPOST_3
2018-07-12 15:55:06 -Generating unique operation named: updateUsingPUT_3
2018-07-12 15:55:06 -Generating unique operation named: updateUsingPATCH_3
2018-07-12 15:55:06 -Generating unique operation named: updateUsingDELETE_3
2018-07-12 15:55:06 -Generating unique operation named: updateUsingOPTIONS_3
2018-07-12 15:55:06 -Generating unique operation named: updateUsingTRACE_3
2018-07-12 15:55:06 -Generating unique operation named: editUsingGET_4
2018-07-12 15:55:06 -Generating unique operation named: listUsingGET_4
2018-07-12 15:55:06 -Generating unique operation named: updateUsingPOST_4
2018-07-12 15:55:07 -Generating unique operation named: listUsingGET_5
2018-07-12 15:55:07 -Generating unique operation named: removeUsingPOST_8
2018-07-12 15:55:07 -Generating unique operation named: welcomeUsingGET_1
2018-07-12 15:55:07 -Generating unique operation named: addUsingGET_4
2018-07-12 15:55:07 -Generating unique operation named: editUsingGET_5
2018-07-12 15:55:07 -Generating unique operation named: listUsingGET_6
2018-07-12 15:55:07 -Generating unique operation named: removeUsingPOST_9
2018-07-12 15:55:07 -Generating unique operation named: saveUsingPOST_4
2018-07-12 15:55:07 -Generating unique operation named: treeUsingGET_1
2018-07-12 15:55:07 -Generating unique operation named: treeUsingGET_2
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPOST_5
2018-07-12 15:55:07 -Generating unique operation named: batchRemoveUsingPOST_1
2018-07-12 15:55:07 -Generating unique operation named: editUsingGET_6
2018-07-12 15:55:07 -Generating unique operation named: listUsingGET_7
2018-07-12 15:55:07 -Generating unique operation named: addUsingGET_5
2018-07-12 15:55:07 -Generating unique operation named: editUsingGET_7
2018-07-12 15:55:07 -Generating unique operation named: listUsingGET_8
2018-07-12 15:55:07 -Generating unique operation named: removeUsingPOST_10
2018-07-12 15:55:07 -Generating unique operation named: removeUsingPOST_11
2018-07-12 15:55:07 -Generating unique operation named: saveUsingPOST_5
2018-07-12 15:55:07 -Generating unique operation named: updateUsingGET_4
2018-07-12 15:55:07 -Generating unique operation named: updateUsingHEAD_4
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPOST_6
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPUT_4
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPATCH_4
2018-07-12 15:55:07 -Generating unique operation named: updateUsingDELETE_4
2018-07-12 15:55:07 -Generating unique operation named: updateUsingOPTIONS_4
2018-07-12 15:55:07 -Generating unique operation named: updateUsingTRACE_4
2018-07-12 15:55:07 -Generating unique operation named: addUsingGET_6
2018-07-12 15:55:07 -Generating unique operation named: editUsingGET_8
2018-07-12 15:55:07 -Generating unique operation named: listUsingGET_9
2018-07-12 15:55:07 -Generating unique operation named: removeUsingPOST_12
2018-07-12 15:55:07 -Generating unique operation named: removeUsingPOST_13
2018-07-12 15:55:07 -Generating unique operation named: saveUsingPOST_6
2018-07-12 15:55:07 -Generating unique operation named: updateUsingGET_5
2018-07-12 15:55:07 -Generating unique operation named: updateUsingHEAD_5
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPOST_7
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPUT_5
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPATCH_5
2018-07-12 15:55:07 -Generating unique operation named: updateUsingDELETE_5
2018-07-12 15:55:07 -Generating unique operation named: updateUsingOPTIONS_5
2018-07-12 15:55:07 -Generating unique operation named: updateUsingTRACE_5
2018-07-12 15:55:07 -Generating unique operation named: addUsingGET_7
2018-07-12 15:55:07 -Generating unique operation named: batchRemoveUsingPOST_2
2018-07-12 15:55:07 -Generating unique operation named: deployUsingPOST_1
2018-07-12 15:55:07 -Generating unique operation named: listUsingGET_10
2018-07-12 15:55:07 -Generating unique operation named: removeUsingPOST_14
2018-07-12 15:55:07 -Generating unique operation named: addUsingGET_8
2018-07-12 15:55:07 -Generating unique operation named: editUsingGET_9
2018-07-12 15:55:07 -Generating unique operation named: infoUsingGET_1
2018-07-12 15:55:07 -Generating unique operation named: infoUsingHEAD_1
2018-07-12 15:55:07 -Generating unique operation named: infoUsingPOST_1
2018-07-12 15:55:07 -Generating unique operation named: infoUsingPUT_1
2018-07-12 15:55:07 -Generating unique operation named: infoUsingPATCH_1
2018-07-12 15:55:07 -Generating unique operation named: infoUsingDELETE_1
2018-07-12 15:55:07 -Generating unique operation named: infoUsingOPTIONS_1
2018-07-12 15:55:07 -Generating unique operation named: infoUsingTRACE_1
2018-07-12 15:55:07 -Generating unique operation named: listUsingGET_11
2018-07-12 15:55:07 -Generating unique operation named: removeUsingPOST_15
2018-07-12 15:55:07 -Generating unique operation named: removeUsingPOST_16
2018-07-12 15:55:07 -Generating unique operation named: saveUsingPOST_7
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPOST_8
2018-07-12 15:55:07 -Generating unique operation named: addUsingGET_9
2018-07-12 15:55:07 -Generating unique operation named: editUsingGET_10
2018-07-12 15:55:07 -Generating unique operation named: listUsingGET_12
2018-07-12 15:55:07 -Generating unique operation named: removeUsingPOST_17
2018-07-12 15:55:07 -Generating unique operation named: removeUsingPOST_18
2018-07-12 15:55:07 -Generating unique operation named: saveUsingPOST_8
2018-07-12 15:55:07 -Generating unique operation named: updateUsingGET_6
2018-07-12 15:55:07 -Generating unique operation named: updateUsingHEAD_6
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPOST_9
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPUT_6
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPATCH_6
2018-07-12 15:55:07 -Generating unique operation named: updateUsingDELETE_6
2018-07-12 15:55:07 -Generating unique operation named: updateUsingOPTIONS_6
2018-07-12 15:55:07 -Generating unique operation named: updateUsingTRACE_6
2018-07-12 15:55:07 -Generating unique operation named: addUsingGET_10
2018-07-12 15:55:07 -Generating unique operation named: batchRemoveUsingPOST_3
2018-07-12 15:55:07 -Generating unique operation named: editUsingGET_11
2018-07-12 15:55:07 -Generating unique operation named: listUsingGET_13
2018-07-12 15:55:07 -Generating unique operation named: saveUsingPOST_9
2018-07-12 15:55:07 -Generating unique operation named: saveUsingPOST_10
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPOST_10
2018-07-12 15:55:07 -Generating unique operation named: addUsingGET_11
2018-07-12 15:55:07 -Generating unique operation named: editUsingGET_12
2018-07-12 15:55:07 -Generating unique operation named: listUsingGET_14
2018-07-12 15:55:07 -Generating unique operation named: removeUsingPOST_19
2018-07-12 15:55:07 -Generating unique operation named: removeUsingPOST_20
2018-07-12 15:55:07 -Generating unique operation named: updateUsingGET_7
2018-07-12 15:55:07 -Generating unique operation named: updateUsingHEAD_7
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPOST_11
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPUT_7
2018-07-12 15:55:07 -Generating unique operation named: updateUsingPATCH_7
2018-07-12 15:55:07 -Generating unique operation named: updateUsingDELETE_7
2018-07-12 15:55:07 -Generating unique operation named: updateUsingOPTIONS_7
2018-07-12 15:55:07 -Generating unique operation named: updateUsingTRACE_7
2018-07-12 15:55:07 -Generating unique operation named: listUsingGET_15
2018-07-12 15:55:07 -Generating unique operation named: listUsingHEAD_1
2018-07-12 15:55:07 -Generating unique operation named: listUsingPOST_1
2018-07-12 15:55:07 -Generating unique operation named: listUsingPUT_1
2018-07-12 15:55:07 -Generating unique operation named: listUsingPATCH_1
2018-07-12 15:55:07 -Generating unique operation named: listUsingDELETE_1
2018-07-12 15:55:07 -Generating unique operation named: listUsingOPTIONS_1
2018-07-12 15:55:07 -Generating unique operation named: listUsingTRACE_1
2018-07-12 15:55:07 -Generating unique operation named: listUsingGET_16
2018-07-12 15:55:07 -Generating unique operation named: addUsingGET_12
2018-07-12 15:55:07 -Generating unique operation named: batchRemoveUsingPOST_4
2018-07-12 15:55:07 -Generating unique operation named: editUsingGET_13
2018-07-12 15:55:07 -Generating unique operation named: listUsingGET_17
2018-07-12 15:55:08 -Generating unique operation named: removeUsingPOST_21
2018-07-12 15:55:08 -Generating unique operation named: saveUsingPOST_11
2018-07-12 15:55:08 -Generating unique operation named: treeUsingGET_3
2018-07-12 15:55:08 -Generating unique operation named: treeViewUsingGET_1
2018-07-12 15:55:08 -Generating unique operation named: updateUsingPOST_12
2018-07-12 15:55:08 -Starting Quartz Scheduler now
2018-07-12 15:55:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-07-12 15:55:08 -Starting...
2018-07-12 15:55:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-07-12 15:55:08 -Started.
2018-07-12 15:55:08 -Initializing ProtocolHandler ["http-nio-8088"]
2018-07-12 15:55:08 -Starting ProtocolHandler ["http-nio-8088"]
2018-07-12 15:55:08 -Using a shared selector for servlet write/read
2018-07-12 15:55:08 -Tomcat started on port(s): 8088 (http)
2018-07-12 15:55:08 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-07-12 15:55:08 -==> Parameters: 
2018-07-12 15:55:08 -<==      Total: 1
2018-07-12 15:55:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-07-12 15:55:08 -Started JustdoApplication in 14.37 seconds (JVM running for 15.05)
2018-07-12 15:55:17 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-12 15:55:17 -FrameworkServlet 'dispatcherServlet': initialization started
2018-07-12 15:55:17 -FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-07-12 15:55:17 -Enabling session validation scheduler...
2018-07-12 15:55:17 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 15:55:17 -HTTP METHOD : GET
2018-07-12 15:55:17 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 15:55:17 -参数 : []
2018-07-12 15:55:17 -请求地址 : http://127.0.0.1:8088/index
2018-07-12 15:55:17 -HTTP METHOD : GET
2018-07-12 15:55:17 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.index
2018-07-12 15:55:17 -参数 : [{}]
2018-07-12 15:55:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 15:55:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 15:55:17 -<==      Total: 0
2018-07-12 15:55:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-07-12 15:55:17 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 15:55:17 -==> Parameters: 1(Long), 0(String)
2018-07-12 15:55:17 -==> Parameters: 1(Long)
2018-07-12 15:55:17 -<==      Total: 1
2018-07-12 15:55:17 -耗时 : 23
2018-07-12 15:55:17 -返回值 : com.justdo.common.utils.PageUtils@39937605
2018-07-12 15:55:17 -<==      Total: 30
2018-07-12 15:55:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-07-12 15:55:17 -==> Parameters: 150(Long)
2018-07-12 15:55:17 -<==      Total: 0
2018-07-12 15:55:17 -耗时 : 36
2018-07-12 15:55:17 -返回值 : index
2018-07-12 15:55:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 15:55:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.justdo.system.user.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p(String), 127.0.0.1(String), 2018-07-12 15:55:17.576(Timestamp)
2018-07-12 15:55:17 -<==    Updates: 1
2018-07-12 15:55:17 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-12 15:55:17 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-12 15:55:17 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-12 15:55:17 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-12 15:55:17 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-12 15:55:17 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-12 15:55:17 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-12 15:55:17 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 15:55:17 -HTTP METHOD : GET
2018-07-12 15:55:17 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 15:55:17 -参数 : []
2018-07-12 15:55:17 -耗时 : 0
2018-07-12 15:55:17 -返回值 : main
2018-07-12 15:55:17 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 15:55:17 -HTTP METHOD : GET
2018-07-12 15:55:17 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 15:55:17 -参数 : []
2018-07-12 15:55:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 15:55:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 15:55:17 -<==      Total: 0
2018-07-12 15:55:17 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 15:55:17 -==> Parameters: 1(Long), 0(String)
2018-07-12 15:55:18 -<==      Total: 1
2018-07-12 15:55:18 -耗时 : 5
2018-07-12 15:55:18 -返回值 : com.justdo.common.utils.PageUtils@7d6ad592
2018-07-12 15:55:18 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 15:55:18 -HTTP METHOD : GET
2018-07-12 15:55:18 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 15:55:18 -参数 : []
2018-07-12 15:55:18 -耗时 : 0
2018-07-12 15:55:18 -返回值 : main
2018-07-12 15:55:20 -请求地址 : http://127.0.0.1:8088/system/dict/type
2018-07-12 15:55:20 -HTTP METHOD : GET
2018-07-12 15:55:20 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.listType
2018-07-12 15:55:20 -参数 : []
2018-07-12 15:55:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:20 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-07-12 15:55:20 -==> Parameters: 
2018-07-12 15:55:20 -请求地址 : http://127.0.0.1:8088/system/dict
2018-07-12 15:55:20 -HTTP METHOD : GET
2018-07-12 15:55:20 -请求地址 : http://127.0.0.1:8088/system/dict/list
2018-07-12 15:55:20 -HTTP METHOD : GET
2018-07-12 15:55:20 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.dict
2018-07-12 15:55:20 -参数 : [{}]
2018-07-12 15:55:20 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.list
2018-07-12 15:55:20 -耗时 : 0
2018-07-12 15:55:20 -参数 : [{limit=10, offset=0}]
2018-07-12 15:55:20 -返回值 : system/dict/dict
2018-07-12 15:55:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-07-12 15:55:20 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 15:55:20 -<==      Total: 31
2018-07-12 15:55:20 -耗时 : 9
2018-07-12 15:55:20 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-07-12 15:55:20 -<==      Total: 10
2018-07-12 15:55:20 -==>  Preparing: select count(*) from sys_dict3 
2018-07-12 15:55:20 -==> Parameters: 
2018-07-12 15:55:20 -<==      Total: 1
2018-07-12 15:55:20 -耗时 : 9
2018-07-12 15:55:20 -返回值 : com.justdo.common.utils.PageUtils@67b1d39b
2018-07-12 15:55:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:21 -请求地址 : http://127.0.0.1:8088/system/regexp/list
2018-07-12 15:55:21 -请求地址 : http://127.0.0.1:8088/system/regexp
2018-07-12 15:55:21 -HTTP METHOD : GET
2018-07-12 15:55:21 -HTTP METHOD : GET
2018-07-12 15:55:21 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.list
2018-07-12 15:55:21 -参数 : [{limit=10, offset=0, rname=}]
2018-07-12 15:55:21 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.Regexp
2018-07-12 15:55:21 -参数 : []
2018-07-12 15:55:21 -耗时 : 1
2018-07-12 15:55:21 -返回值 : system/regexp/regexp
2018-07-12 15:55:21 -==>  Preparing: select RID,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from SYS_REGEXP order by RID desc 
2018-07-12 15:55:21 -==> Parameters: 
2018-07-12 15:55:21 -<==      Total: 9
2018-07-12 15:55:21 -==>  Preparing: select count(*) from sys_regexp 
2018-07-12 15:55:21 -==> Parameters: 
2018-07-12 15:55:21 -<==      Total: 1
2018-07-12 15:55:21 -耗时 : 10
2018-07-12 15:55:21 -返回值 : com.justdo.common.utils.PageUtils@14cde9ed
2018-07-12 15:55:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:25 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:25 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:25 -请求地址 : http://127.0.0.1:8088/system/file/list
2018-07-12 15:55:25 -请求地址 : http://127.0.0.1:8088/system/file
2018-07-12 15:55:25 -HTTP METHOD : GET
2018-07-12 15:55:25 -HTTP METHOD : GET
2018-07-12 15:55:25 -CLASS_METHOD : com.justdo.system.file.controller.FileController.list
2018-07-12 15:55:25 -CLASS_METHOD : com.justdo.system.file.controller.FileController.sysFile
2018-07-12 15:55:25 -参数 : [{limit=12, offset=0, type=}]
2018-07-12 15:55:25 -参数 : [{}]
2018-07-12 15:55:25 -耗时 : 0
2018-07-12 15:55:25 -返回值 : system/file/file
2018-07-12 15:55:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-07-12 15:55:25 -==> Parameters: 0(Integer), 12(Integer)
2018-07-12 15:55:25 -<==      Total: 10
2018-07-12 15:55:25 -==>  Preparing: select count(*) from sys_file 
2018-07-12 15:55:25 -==> Parameters: 
2018-07-12 15:55:25 -<==      Total: 1
2018-07-12 15:55:25 -耗时 : 15
2018-07-12 15:55:25 -返回值 : com.justdo.common.utils.PageUtils@477025c7
2018-07-12 15:55:40 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 15:55:40 -HTTP METHOD : GET
2018-07-12 15:55:40 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 15:55:40 -参数 : []
2018-07-12 15:55:40 -请求地址 : http://127.0.0.1:8088/index
2018-07-12 15:55:40 -HTTP METHOD : GET
2018-07-12 15:55:40 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.index
2018-07-12 15:55:40 -参数 : [{}]
2018-07-12 15:55:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 15:55:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-07-12 15:55:40 -==> Parameters: 1(Long)
2018-07-12 15:55:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 15:55:40 -<==      Total: 0
2018-07-12 15:55:40 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 15:55:40 -==> Parameters: 1(Long), 0(String)
2018-07-12 15:55:40 -<==      Total: 1
2018-07-12 15:55:40 -耗时 : 9
2018-07-12 15:55:40 -返回值 : com.justdo.common.utils.PageUtils@3cea0ef7
2018-07-12 15:55:40 -<==      Total: 30
2018-07-12 15:55:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-07-12 15:55:40 -==> Parameters: 150(Long)
2018-07-12 15:55:40 -<==      Total: 0
2018-07-12 15:55:40 -耗时 : 15
2018-07-12 15:55:40 -返回值 : index
2018-07-12 15:55:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 15:55:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.justdo.system.user.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p(String), 127.0.0.1(String), 2018-07-12 15:55:40.628(Timestamp)
2018-07-12 15:55:40 -<==    Updates: 1
2018-07-12 15:55:40 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 15:55:40 -HTTP METHOD : GET
2018-07-12 15:55:40 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 15:55:40 -参数 : []
2018-07-12 15:55:40 -耗时 : 0
2018-07-12 15:55:40 -返回值 : main
2018-07-12 15:55:40 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 15:55:40 -HTTP METHOD : GET
2018-07-12 15:55:40 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 15:55:40 -参数 : []
2018-07-12 15:55:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 15:55:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 15:55:40 -<==      Total: 0
2018-07-12 15:55:40 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 15:55:40 -==> Parameters: 1(Long), 0(String)
2018-07-12 15:55:40 -<==      Total: 1
2018-07-12 15:55:40 -耗时 : 5
2018-07-12 15:55:40 -返回值 : com.justdo.common.utils.PageUtils@4ee18087
2018-07-12 15:55:40 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 15:55:40 -HTTP METHOD : GET
2018-07-12 15:55:40 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 15:55:40 -参数 : []
2018-07-12 15:55:40 -耗时 : 0
2018-07-12 15:55:40 -返回值 : main
2018-07-12 15:55:43 -请求地址 : http://127.0.0.1:8088/system/dict/type
2018-07-12 15:55:43 -HTTP METHOD : GET
2018-07-12 15:55:43 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.listType
2018-07-12 15:55:43 -参数 : []
2018-07-12 15:55:43 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-07-12 15:55:43 -==> Parameters: 
2018-07-12 15:55:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:43 -请求地址 : http://127.0.0.1:8088/system/dict/list
2018-07-12 15:55:43 -HTTP METHOD : GET
2018-07-12 15:55:43 -请求地址 : http://127.0.0.1:8088/system/dict
2018-07-12 15:55:43 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.list
2018-07-12 15:55:43 -HTTP METHOD : GET
2018-07-12 15:55:43 -参数 : [{limit=10, offset=0}]
2018-07-12 15:55:43 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.dict
2018-07-12 15:55:43 -参数 : [{}]
2018-07-12 15:55:43 -耗时 : 1
2018-07-12 15:55:43 -返回值 : system/dict/dict
2018-07-12 15:55:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-07-12 15:55:43 -<==      Total: 31
2018-07-12 15:55:43 -耗时 : 3
2018-07-12 15:55:43 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 15:55:43 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-07-12 15:55:43 -<==      Total: 10
2018-07-12 15:55:43 -==>  Preparing: select count(*) from sys_dict3 
2018-07-12 15:55:43 -==> Parameters: 
2018-07-12 15:55:43 -<==      Total: 1
2018-07-12 15:55:43 -耗时 : 7
2018-07-12 15:55:43 -返回值 : com.justdo.common.utils.PageUtils@6a34966c
2018-07-12 15:55:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:45 -请求地址 : http://127.0.0.1:8088/system/regexp
2018-07-12 15:55:45 -请求地址 : http://127.0.0.1:8088/system/regexp/list
2018-07-12 15:55:45 -HTTP METHOD : GET
2018-07-12 15:55:45 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.list
2018-07-12 15:55:45 -HTTP METHOD : GET
2018-07-12 15:55:45 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.Regexp
2018-07-12 15:55:45 -参数 : []
2018-07-12 15:55:45 -参数 : [{limit=10, offset=0, rname=}]
2018-07-12 15:55:45 -耗时 : 0
2018-07-12 15:55:45 -返回值 : system/regexp/regexp
2018-07-12 15:55:45 -==>  Preparing: select RID,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from SYS_REGEXP order by RID desc 
2018-07-12 15:55:45 -==> Parameters: 
2018-07-12 15:55:45 -<==      Total: 9
2018-07-12 15:55:45 -==>  Preparing: select count(*) from sys_regexp 
2018-07-12 15:55:45 -==> Parameters: 
2018-07-12 15:55:45 -<==      Total: 1
2018-07-12 15:55:45 -耗时 : 6
2018-07-12 15:55:45 -返回值 : com.justdo.common.utils.PageUtils@334370e9
2018-07-12 15:55:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:55:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 15:56:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 16, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 8, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 10]
2018-07-12 15:59:50 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:54:54 CST 2018]; root of context hierarchy
2018-07-12 15:59:50 -Stopping beans in phase 2147483647
2018-07-12 15:59:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-07-12 15:59:50 -Stopping...
2018-07-12 15:59:50 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-07-12 15:59:50 -Stopped.
2018-07-12 15:59:50 -Unregistering JMX-exposed beans on shutdown
2018-07-12 15:59:50 -Unregistering JMX-exposed beans
2018-07-12 15:59:50 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-07-12 15:59:50 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-07-12 15:59:50 -清除SpringContextHolder中的ApplicationContext:org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:54:54 CST 2018]; root of context hierarchy
2018-07-12 15:59:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-07-12 15:59:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-07-12 15:59:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-07-12 15:59:50 -Shutting down Quartz Scheduler
2018-07-12 15:59:50 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-07-12 15:59:50 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-07-12 15:59:50 -{dataSource-1} closed
2018-07-12 15:59:50 -Disabled session validation scheduler.
2018-07-12 15:59:53 -Starting JustdoApplication on localhost with PID 1076 (/Users/chenlin/Documents/GitHub/JustDo-boot/target/classes started by chenlin in /Users/chenlin/Documents/GitHub/JustDo-boot)
2018-07-12 15:59:53 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-07-12 15:59:53 -The following profiles are active: dev
2018-07-12 15:59:53 -HV000001: Hibernate Validator 5.3.6.Final
2018-07-12 15:59:53 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:59:53 CST 2018]; root of context hierarchy
2018-07-12 15:59:54 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-12 15:59:55 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4ce93670] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:59:55 -Bean 'shiroConfig' of type [com.justdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1944d151] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:59:55 -Bean 'userRealm' of type [com.justdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:59:55 -Bean 'redisManager' of type [com.justdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:59:55 -获取名称为: com.justdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-07-12 15:59:55 -Bean 'redisSessionDAO' of type [com.justdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:59:55 -Bean 'sessionDAO' of type [com.justdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:59:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:59:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:59:55 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 15:59:55 -Tomcat initialized with port(s): 8088 (http)
2018-07-12 15:59:55 -Starting service [Tomcat]
2018-07-12 15:59:55 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-07-12 15:59:55 -Initializing Spring embedded WebApplicationContext
2018-07-12 15:59:55 -Root WebApplicationContext: initialization completed in 2546 ms
2018-07-12 15:59:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-12 15:59:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-12 15:59:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-12 15:59:56 -Mapping filter: 'requestContextFilter' to: [/*]
2018-07-12 15:59:56 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-12 15:59:56 -Filter xssFilter was not registered (disabled)
2018-07-12 15:59:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-07-12 15:59:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-07-12 15:59:56 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-07-12 15:59:56 -Mapping servlet: 'dispatcherServlet' to [/]
2018-07-12 15:59:56 -{dataSource-1} inited
2018-07-12 15:59:58 -ProcessEngine default created
2018-07-12 15:59:58 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:59:53 CST 2018]; root of context hierarchy
2018-07-12 15:59:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-07-12 15:59:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-07-12 15:59:59 -Using default implementation for ThreadExecutor
2018-07-12 15:59:59 -Job execution threads will use class loader of thread: main
2018-07-12 15:59:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-12 15:59:59 -Quartz Scheduler v.2.2.1 created.
2018-07-12 15:59:59 -RAMJobStore initialized.
2018-07-12 15:59:59 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-07-12 15:59:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-07-12 15:59:59 -Quartz scheduler version: 2.2.1
2018-07-12 15:59:59 -JobFactory set to: com.justdo.common.quartz.factory.JobFactory@69ac5752
2018-07-12 16:00:00 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.remove(java.lang.String)
2018-07-12 16:00:00 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.ModelController.list(int,int)
2018-07-12 16:00:00 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-07-12 16:00:00 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ModelController.model()
2018-07-12 16:00:00 -Mapped "{[/activiti/model/add]}" onto public void com.justdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-07-12 16:00:00 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.justdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-07-12 16:00:00 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.justdo.activiti.controller.ModelController.getStencilset()
2018-07-12 16:00:00 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.justdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-12 16:00:00 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-07-12 16:00:00 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.justdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-12 16:00:00 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.justdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-07-12 16:00:00 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ProcessController.add()
2018-07-12 16:00:00 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-07-12 16:00:00 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.ProcessController.list(int,int)
2018-07-12 16:00:00 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-07-12 16:00:00 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-07-12 16:00:00 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-07-12 16:00:00 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.justdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-12 16:00:00 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ProcessController.process()
2018-07-12 16:00:00 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.add()
2018-07-12 16:00:00 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-07-12 16:00:00 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-07-12 16:00:00 -Mapped "{[/act/salary/update]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.update(com.justdo.activiti.domain.SalaryDO)
2018-07-12 16:00:00 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.Salary()
2018-07-12 16:00:00 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.saveOrUpdate(com.justdo.activiti.domain.SalaryDO)
2018-07-12 16:00:00 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.justdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-12 16:00:00 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.TaskController.list(int,int)
2018-07-12 16:00:00 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.TaskController.gotoTask()
2018-07-12 16:00:00 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.justdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-12 16:00:00 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.TaskController.todo()
2018-07-12 16:00:00 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.justdo.activiti.vo.TaskVO> com.justdo.activiti.controller.TaskController.todoList()
2018-07-12 16:00:00 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.justdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-12 16:00:00 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.blog()
2018-07-12 16:00:00 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.add()
2018-07-12 16:00:00 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.remove(java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-07-12 16:00:00 -Mapped "{[/blog/bContent/update]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.update(com.justdo.blog.domain.ContentDO)
2018-07-12 16:00:00 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.save(com.justdo.blog.domain.ContentDO)
2018-07-12 16:00:00 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.bContent()
2018-07-12 16:00:00 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.common.exception.HandleErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-12 16:00:00 -Mapped "{[/error]}" onto public com.justdo.common.utils.R com.justdo.common.exception.HandleErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-12 16:00:00 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-07-12 16:00:00 -Mapped "{[/system/dept/update]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.update(com.justdo.system.dept.domain.DeptDO)
2018-07-12 16:00:00 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.justdo.system.dept.domain.DeptDO> com.justdo.system.dept.controller.DeptController.list()
2018-07-12 16:00:00 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.save(com.justdo.system.dept.domain.DeptDO)
2018-07-12 16:00:00 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.justdo.common.domain.Tree<com.justdo.system.dept.domain.DeptDO> com.justdo.system.dept.controller.DeptController.tree()
2018-07-12 16:00:00 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.dept()
2018-07-12 16:00:00 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.treeView()
2018-07-12 16:00:00 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.add()
2018-07-12 16:00:00 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-07-12 16:00:00 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/system/dict/update]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.update(com.justdo.system.dict.domain.DictDO)
2018-07-12 16:00:00 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.save(com.justdo.system.dict.domain.DictDO)
2018-07-12 16:00:00 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.dict(org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-07-12 16:00:00 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.justdo.system.dict.domain.DictDO> com.justdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-07-12 16:00:00 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.justdo.system.dicttype.domain.DictTypeDO> com.justdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-07-12 16:00:00 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.adddict()
2018-07-12 16:00:00 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.savetype(com.justdo.system.dicttype.domain.DictTypeDO)
2018-07-12 16:00:00 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.justdo.system.dict.domain.DictDO> com.justdo.system.dict.controller.DictController.listType()
2018-07-12 16:00:00 -Mapped "{[/system/dict/view/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.view(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.add()
2018-07-12 16:00:00 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-07-12 16:00:00 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-07-12 16:00:00 -Mapped "{[/system/file/update]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.update(com.justdo.system.file.domain.FileDO)
2018-07-12 16:00:00 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.save(com.justdo.system.file.domain.FileDO)
2018-07-12 16:00:00 -Mapped "{[/system/file/info/{id}]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.info(java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-07-12 16:00:00 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.justdo.system.generator.controller.GeneratorController.list()
2018-07-12 16:00:00 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.justdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-07-12 16:00:00 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.justdo.system.generator.controller.GeneratorController.generator()
2018-07-12 16:00:00 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.justdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/generator/batchCode]}" onto public void com.justdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-07-12 16:00:00 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.log.controller.LogController.remove(java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.justdo.system.log.controller.LogController.log()
2018-07-12 16:00:00 -Mapped "{[/system/log/list],methods=[GET]}" onto com.justdo.common.domain.PageDO<com.justdo.system.log.domain.LogDO> com.justdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-07-12 16:00:00 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.update(com.justdo.system.menu.domain.MenuDO)
2018-07-12 16:00:00 -Mapped "{[/system/menu/list]}" onto java.util.List<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.save(com.justdo.system.menu.domain.MenuDO)
2018-07-12 16:00:00 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.justdo.common.domain.Tree<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.justdo.common.domain.Tree<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.tree()
2018-07-12 16:00:00 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/notice/add],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.add()
2018-07-12 16:00:00 -Mapped "{[/system/notice/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.remove(java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/system/notice/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.remove(java.lang.Long[])
2018-07-12 16:00:00 -Mapped "{[/system/notice/update]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.update(com.justdo.system.notice.domain.NoticeDO)
2018-07-12 16:00:00 -Mapped "{[/system/notice/read/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.read(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/notice/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/system/notice/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.save(com.justdo.system.notice.domain.NoticeDO)
2018-07-12 16:00:00 -Mapped "{[/system/notice/message],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.message()
2018-07-12 16:00:00 -Mapped "{[/system/notice],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.Notice()
2018-07-12 16:00:00 -Mapped "{[/system/notice/selfnotice],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.selefNotice()
2018-07-12 16:00:00 -Mapped "{[/system/notice/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/notice/selflist],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/system/organ/add],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.add()
2018-07-12 16:00:00 -Mapped "{[/system/organ/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.remove(java.lang.String)
2018-07-12 16:00:00 -Mapped "{[/system/organ/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.remove(java.lang.String[])
2018-07-12 16:00:00 -Mapped "{[/system/organ/update]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.update(com.justdo.system.organ.domain.OrganDO)
2018-07-12 16:00:00 -Mapped "{[/system/organ/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.organ.controller.OrganController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/system/organ/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.save(com.justdo.system.organ.domain.OrganDO)
2018-07-12 16:00:00 -Mapped "{[/system/organ],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.Organ()
2018-07-12 16:00:00 -Mapped "{[/system/organ/edit/{organid}],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.add()
2018-07-12 16:00:00 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-07-12 16:00:00 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.update(com.justdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-07-12 16:00:00 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.save(com.justdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-07-12 16:00:00 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-07-12 16:00:00 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-07-12 16:00:00 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.add()
2018-07-12 16:00:00 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-07-12 16:00:00 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-07-12 16:00:00 -Mapped "{[/system/regexp/update]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.update(com.justdo.system.regexp.domain.RegexpDO)
2018-07-12 16:00:00 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.save(com.justdo.system.regexp.domain.RegexpDO)
2018-07-12 16:00:00 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.Regexp()
2018-07-12 16:00:00 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.add()
2018-07-12 16:00:00 -Mapped "{[/system/role/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.update(com.justdo.system.role.domain.RoleDO)
2018-07-12 16:00:00 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.justdo.system.role.domain.RoleDO> com.justdo.system.role.controller.RoleController.list()
2018-07-12 16:00:00 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.save(java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/system/role/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.save(com.justdo.system.role.domain.RoleDO)
2018-07-12 16:00:00 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-07-12 16:00:00 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.role()
2018-07-12 16:00:00 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.main()
2018-07-12 16:00:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/login],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-07-12 16:00:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.login(org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.logout()
2018-07-12 16:00:00 -Mapped "{[/system/online/list]}" onto public java.util.List<com.justdo.system.user.domain.UserOnline> com.justdo.system.user.controller.SessionController.list()
2018-07-12 16:00:00 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.justdo.system.user.controller.SessionController.online()
2018-07-12 16:00:00 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.justdo.system.user.controller.SessionController.sessionList()
2018-07-12 16:00:00 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.justdo.common.utils.R com.justdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-07-12 16:00:00 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.justdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.remove(java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/system/user/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.update(com.justdo.system.user.domain.UserDO)
2018-07-12 16:00:00 -Mapped "{[/system/user/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:00:00 -Mapped "{[/system/user/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.save(com.justdo.system.user.domain.UserDO)
2018-07-12 16:00:00 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-07-12 16:00:00 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.justdo.common.domain.Tree<com.justdo.system.dept.domain.DeptDO> com.justdo.system.user.controller.UserController.tree()
2018-07-12 16:00:00 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.treeView()
2018-07-12 16:00:00 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.resetPwd(com.justdo.system.user.domain.UserVO)
2018-07-12 16:00:00 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:00:00 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.updatePeronal(com.justdo.system.user.domain.UserDO)
2018-07-12 16:00:00 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.adminResetPwd(com.justdo.system.user.domain.UserVO)
2018-07-12 16:00:00 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-07-12 16:00:00 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:00:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-07-12 16:00:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-07-12 16:00:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-07-12 16:00:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-07-12 16:00:00 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-07-12 16:00:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-07-12 16:00:01 -Initializing ExecutorService  'brokerChannelExecutor'
2018-07-12 16:00:01 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:59:53 CST 2018]; root of context hierarchy
2018-07-12 16:00:01 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:00:01 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:00:01 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:00:01 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-07-12 16:00:01 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:00:02 -

Using default security password: 12a980b5-b900-46b5-b7fc-479044dccee9

2018-07-12 16:00:02 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-07-12 16:00:02 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@7be86438, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5fe4848, org.springframework.security.web.context.SecurityContextPersistenceFilter@4144d4a, org.springframework.security.web.header.HeaderWriterFilter@7674f9d4, org.springframework.security.web.csrf.CsrfFilter@3e265811, org.springframework.security.web.authentication.logout.LogoutFilter@54f62ac6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1dae9e61, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7945986a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6a906078, org.springframework.security.web.session.SessionManagementFilter@30a1b2ad, org.springframework.security.web.access.ExceptionTranslationFilter@5cd6a827]
2018-07-12 16:00:03 -Registering beans for JMX exposure on startup
2018-07-12 16:00:03 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-12 16:00:03 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-12 16:00:03 -Starting beans in phase 2147483647
2018-07-12 16:00:03 -Context refreshed
2018-07-12 16:00:03 -Found 1 custom documentation plugin(s)
2018-07-12 16:00:03 -Scanning for api listing references
2018-07-12 16:00:03 -Generating unique operation named: removeUsingPOST_1
2018-07-12 16:00:03 -Generating unique operation named: addUsingGET_1
2018-07-12 16:00:03 -Generating unique operation named: editUsingGET_1
2018-07-12 16:00:03 -Generating unique operation named: listUsingGET_1
2018-07-12 16:00:03 -Generating unique operation named: removeUsingPOST_2
2018-07-12 16:00:03 -Generating unique operation named: removeUsingPOST_3
2018-07-12 16:00:03 -Generating unique operation named: saveUsingPOST_1
2018-07-12 16:00:03 -Generating unique operation named: updateUsingGET_1
2018-07-12 16:00:03 -Generating unique operation named: updateUsingHEAD_1
2018-07-12 16:00:03 -Generating unique operation named: updateUsingPOST_1
2018-07-12 16:00:03 -Generating unique operation named: updateUsingPUT_1
2018-07-12 16:00:03 -Generating unique operation named: updateUsingPATCH_1
2018-07-12 16:00:03 -Generating unique operation named: updateUsingDELETE_1
2018-07-12 16:00:03 -Generating unique operation named: updateUsingOPTIONS_1
2018-07-12 16:00:03 -Generating unique operation named: updateUsingTRACE_1
2018-07-12 16:00:03 -Generating unique operation named: addUsingGET_2
2018-07-12 16:00:03 -Generating unique operation named: editUsingGET_2
2018-07-12 16:00:03 -Generating unique operation named: listUsingGET_2
2018-07-12 16:00:03 -Generating unique operation named: removeUsingPOST_4
2018-07-12 16:00:03 -Generating unique operation named: removeUsingPOST_5
2018-07-12 16:00:03 -Generating unique operation named: saveUsingPOST_2
2018-07-12 16:00:03 -Generating unique operation named: updateUsingGET_2
2018-07-12 16:00:03 -Generating unique operation named: updateUsingHEAD_2
2018-07-12 16:00:03 -Generating unique operation named: updateUsingPOST_2
2018-07-12 16:00:03 -Generating unique operation named: updateUsingPUT_2
2018-07-12 16:00:03 -Generating unique operation named: updateUsingPATCH_2
2018-07-12 16:00:03 -Generating unique operation named: updateUsingDELETE_2
2018-07-12 16:00:04 -Generating unique operation named: updateUsingOPTIONS_2
2018-07-12 16:00:04 -Generating unique operation named: updateUsingTRACE_2
2018-07-12 16:00:04 -Generating unique operation named: addUsingGET_3
2018-07-12 16:00:04 -Generating unique operation named: editUsingGET_3
2018-07-12 16:00:04 -Generating unique operation named: listUsingGET_3
2018-07-12 16:00:04 -Generating unique operation named: removeUsingPOST_6
2018-07-12 16:00:04 -Generating unique operation named: removeUsingPOST_7
2018-07-12 16:00:04 -Generating unique operation named: saveUsingPOST_3
2018-07-12 16:00:04 -Generating unique operation named: updateUsingGET_3
2018-07-12 16:00:04 -Generating unique operation named: updateUsingHEAD_3
2018-07-12 16:00:04 -Generating unique operation named: updateUsingPOST_3
2018-07-12 16:00:04 -Generating unique operation named: updateUsingPUT_3
2018-07-12 16:00:04 -Generating unique operation named: updateUsingPATCH_3
2018-07-12 16:00:04 -Generating unique operation named: updateUsingDELETE_3
2018-07-12 16:00:04 -Generating unique operation named: updateUsingOPTIONS_3
2018-07-12 16:00:04 -Generating unique operation named: updateUsingTRACE_3
2018-07-12 16:00:04 -Generating unique operation named: editUsingGET_4
2018-07-12 16:00:04 -Generating unique operation named: listUsingGET_4
2018-07-12 16:00:04 -Generating unique operation named: updateUsingPOST_4
2018-07-12 16:00:04 -Generating unique operation named: listUsingGET_5
2018-07-12 16:00:04 -Generating unique operation named: removeUsingPOST_8
2018-07-12 16:00:04 -Generating unique operation named: welcomeUsingGET_1
2018-07-12 16:00:04 -Generating unique operation named: addUsingGET_4
2018-07-12 16:00:04 -Generating unique operation named: editUsingGET_5
2018-07-12 16:00:04 -Generating unique operation named: listUsingGET_6
2018-07-12 16:00:04 -Generating unique operation named: removeUsingPOST_9
2018-07-12 16:00:04 -Generating unique operation named: saveUsingPOST_4
2018-07-12 16:00:04 -Generating unique operation named: treeUsingGET_1
2018-07-12 16:00:04 -Generating unique operation named: treeUsingGET_2
2018-07-12 16:00:04 -Generating unique operation named: updateUsingPOST_5
2018-07-12 16:00:04 -Generating unique operation named: batchRemoveUsingPOST_1
2018-07-12 16:00:04 -Generating unique operation named: editUsingGET_6
2018-07-12 16:00:04 -Generating unique operation named: listUsingGET_7
2018-07-12 16:00:04 -Generating unique operation named: addUsingGET_5
2018-07-12 16:00:04 -Generating unique operation named: editUsingGET_7
2018-07-12 16:00:04 -Generating unique operation named: listUsingGET_8
2018-07-12 16:00:04 -Generating unique operation named: removeUsingPOST_10
2018-07-12 16:00:04 -Generating unique operation named: removeUsingPOST_11
2018-07-12 16:00:04 -Generating unique operation named: saveUsingPOST_5
2018-07-12 16:00:04 -Generating unique operation named: updateUsingGET_4
2018-07-12 16:00:04 -Generating unique operation named: updateUsingHEAD_4
2018-07-12 16:00:04 -Generating unique operation named: updateUsingPOST_6
2018-07-12 16:00:04 -Generating unique operation named: updateUsingPUT_4
2018-07-12 16:00:04 -Generating unique operation named: updateUsingPATCH_4
2018-07-12 16:00:04 -Generating unique operation named: updateUsingDELETE_4
2018-07-12 16:00:04 -Generating unique operation named: updateUsingOPTIONS_4
2018-07-12 16:00:04 -Generating unique operation named: updateUsingTRACE_4
2018-07-12 16:00:04 -Generating unique operation named: addUsingGET_6
2018-07-12 16:00:04 -Generating unique operation named: editUsingGET_8
2018-07-12 16:00:04 -Generating unique operation named: listUsingGET_9
2018-07-12 16:00:04 -Generating unique operation named: removeUsingPOST_12
2018-07-12 16:00:04 -Generating unique operation named: removeUsingPOST_13
2018-07-12 16:00:04 -Generating unique operation named: saveUsingPOST_6
2018-07-12 16:00:04 -Generating unique operation named: updateUsingGET_5
2018-07-12 16:00:04 -Generating unique operation named: updateUsingHEAD_5
2018-07-12 16:00:04 -Generating unique operation named: updateUsingPOST_7
2018-07-12 16:00:04 -Generating unique operation named: updateUsingPUT_5
2018-07-12 16:00:04 -Generating unique operation named: updateUsingPATCH_5
2018-07-12 16:00:04 -Generating unique operation named: updateUsingDELETE_5
2018-07-12 16:00:04 -Generating unique operation named: updateUsingOPTIONS_5
2018-07-12 16:00:04 -Generating unique operation named: updateUsingTRACE_5
2018-07-12 16:00:04 -Generating unique operation named: addUsingGET_7
2018-07-12 16:00:04 -Generating unique operation named: batchRemoveUsingPOST_2
2018-07-12 16:00:04 -Generating unique operation named: deployUsingPOST_1
2018-07-12 16:00:04 -Generating unique operation named: listUsingGET_10
2018-07-12 16:00:04 -Generating unique operation named: removeUsingPOST_14
2018-07-12 16:00:04 -Generating unique operation named: addUsingGET_8
2018-07-12 16:00:04 -Generating unique operation named: editUsingGET_9
2018-07-12 16:00:04 -Generating unique operation named: infoUsingGET_1
2018-07-12 16:00:04 -Generating unique operation named: infoUsingHEAD_1
2018-07-12 16:00:04 -Generating unique operation named: infoUsingPOST_1
2018-07-12 16:00:04 -Generating unique operation named: infoUsingPUT_1
2018-07-12 16:00:04 -Generating unique operation named: infoUsingPATCH_1
2018-07-12 16:00:04 -Generating unique operation named: infoUsingDELETE_1
2018-07-12 16:00:04 -Generating unique operation named: infoUsingOPTIONS_1
2018-07-12 16:00:04 -Generating unique operation named: infoUsingTRACE_1
2018-07-12 16:00:04 -Generating unique operation named: listUsingGET_11
2018-07-12 16:00:04 -Generating unique operation named: removeUsingPOST_15
2018-07-12 16:00:04 -Generating unique operation named: removeUsingPOST_16
2018-07-12 16:00:04 -Generating unique operation named: saveUsingPOST_7
2018-07-12 16:00:04 -Generating unique operation named: updateUsingPOST_8
2018-07-12 16:00:04 -Generating unique operation named: addUsingGET_9
2018-07-12 16:00:04 -Generating unique operation named: editUsingGET_10
2018-07-12 16:00:04 -Generating unique operation named: listUsingGET_12
2018-07-12 16:00:04 -Generating unique operation named: removeUsingPOST_17
2018-07-12 16:00:04 -Generating unique operation named: removeUsingPOST_18
2018-07-12 16:00:04 -Generating unique operation named: saveUsingPOST_8
2018-07-12 16:00:04 -Generating unique operation named: updateUsingGET_6
2018-07-12 16:00:04 -Generating unique operation named: updateUsingHEAD_6
2018-07-12 16:00:05 -Generating unique operation named: updateUsingPOST_9
2018-07-12 16:00:05 -Generating unique operation named: updateUsingPUT_6
2018-07-12 16:00:05 -Generating unique operation named: updateUsingPATCH_6
2018-07-12 16:00:05 -Generating unique operation named: updateUsingDELETE_6
2018-07-12 16:00:05 -Generating unique operation named: updateUsingOPTIONS_6
2018-07-12 16:00:05 -Generating unique operation named: updateUsingTRACE_6
2018-07-12 16:00:05 -Generating unique operation named: addUsingGET_10
2018-07-12 16:00:05 -Generating unique operation named: batchRemoveUsingPOST_3
2018-07-12 16:00:05 -Generating unique operation named: editUsingGET_11
2018-07-12 16:00:05 -Generating unique operation named: listUsingGET_13
2018-07-12 16:00:05 -Generating unique operation named: saveUsingPOST_9
2018-07-12 16:00:05 -Generating unique operation named: saveUsingPOST_10
2018-07-12 16:00:05 -Generating unique operation named: updateUsingPOST_10
2018-07-12 16:00:05 -Generating unique operation named: addUsingGET_11
2018-07-12 16:00:05 -Generating unique operation named: editUsingGET_12
2018-07-12 16:00:05 -Generating unique operation named: listUsingGET_14
2018-07-12 16:00:05 -Generating unique operation named: removeUsingPOST_19
2018-07-12 16:00:05 -Generating unique operation named: removeUsingPOST_20
2018-07-12 16:00:05 -Generating unique operation named: updateUsingGET_7
2018-07-12 16:00:05 -Generating unique operation named: updateUsingHEAD_7
2018-07-12 16:00:05 -Generating unique operation named: updateUsingPOST_11
2018-07-12 16:00:05 -Generating unique operation named: updateUsingPUT_7
2018-07-12 16:00:05 -Generating unique operation named: updateUsingPATCH_7
2018-07-12 16:00:05 -Generating unique operation named: updateUsingDELETE_7
2018-07-12 16:00:05 -Generating unique operation named: updateUsingOPTIONS_7
2018-07-12 16:00:05 -Generating unique operation named: updateUsingTRACE_7
2018-07-12 16:00:05 -Generating unique operation named: listUsingGET_15
2018-07-12 16:00:05 -Generating unique operation named: listUsingHEAD_1
2018-07-12 16:00:05 -Generating unique operation named: listUsingPOST_1
2018-07-12 16:00:05 -Generating unique operation named: listUsingPUT_1
2018-07-12 16:00:05 -Generating unique operation named: listUsingPATCH_1
2018-07-12 16:00:05 -Generating unique operation named: listUsingDELETE_1
2018-07-12 16:00:05 -Generating unique operation named: listUsingOPTIONS_1
2018-07-12 16:00:05 -Generating unique operation named: listUsingTRACE_1
2018-07-12 16:00:05 -Generating unique operation named: listUsingGET_16
2018-07-12 16:00:05 -Generating unique operation named: addUsingGET_12
2018-07-12 16:00:05 -Generating unique operation named: batchRemoveUsingPOST_4
2018-07-12 16:00:05 -Generating unique operation named: editUsingGET_13
2018-07-12 16:00:05 -Generating unique operation named: listUsingGET_17
2018-07-12 16:00:05 -Generating unique operation named: removeUsingPOST_21
2018-07-12 16:00:05 -Generating unique operation named: saveUsingPOST_11
2018-07-12 16:00:05 -Generating unique operation named: treeUsingGET_3
2018-07-12 16:00:05 -Generating unique operation named: treeViewUsingGET_1
2018-07-12 16:00:05 -Generating unique operation named: updateUsingPOST_12
2018-07-12 16:00:05 -Starting Quartz Scheduler now
2018-07-12 16:00:05 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-07-12 16:00:05 -Starting...
2018-07-12 16:00:05 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-07-12 16:00:05 -Started.
2018-07-12 16:00:05 -Initializing ProtocolHandler ["http-nio-8088"]
2018-07-12 16:00:05 -Starting ProtocolHandler ["http-nio-8088"]
2018-07-12 16:00:05 -Using a shared selector for servlet write/read
2018-07-12 16:00:05 -Tomcat started on port(s): 8088 (http)
2018-07-12 16:00:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-07-12 16:00:05 -==> Parameters: 
2018-07-12 16:00:05 -<==      Total: 1
2018-07-12 16:00:05 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-07-12 16:00:05 -Started JustdoApplication in 13.208 seconds (JVM running for 14.297)
2018-07-12 16:00:10 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-12 16:00:10 -FrameworkServlet 'dispatcherServlet': initialization started
2018-07-12 16:00:10 -FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-07-12 16:00:10 -Enabling session validation scheduler...
2018-07-12 16:00:10 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 16:00:10 -HTTP METHOD : GET
2018-07-12 16:00:10 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 16:00:10 -参数 : []
2018-07-12 16:00:10 -请求地址 : http://127.0.0.1:8088/index
2018-07-12 16:00:10 -HTTP METHOD : GET
2018-07-12 16:00:10 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.index
2018-07-12 16:00:10 -参数 : [{}]
2018-07-12 16:00:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 16:00:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 16:00:10 -<==      Total: 0
2018-07-12 16:00:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-07-12 16:00:10 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 16:00:10 -==> Parameters: 1(Long), 0(String)
2018-07-12 16:00:10 -==> Parameters: 1(Long)
2018-07-12 16:00:10 -<==      Total: 1
2018-07-12 16:00:10 -耗时 : 22
2018-07-12 16:00:10 -返回值 : com.justdo.common.utils.PageUtils@720c94b3
2018-07-12 16:00:10 -<==      Total: 30
2018-07-12 16:00:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-07-12 16:00:10 -==> Parameters: 150(Long)
2018-07-12 16:00:10 -<==      Total: 0
2018-07-12 16:00:10 -耗时 : 35
2018-07-12 16:00:10 -返回值 : index
2018-07-12 16:00:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:00:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.justdo.system.user.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p(String), 127.0.0.1(String), 2018-07-12 16:00:11.059(Timestamp)
2018-07-12 16:00:11 -<==    Updates: 1
2018-07-12 16:00:11 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-12 16:00:11 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-12 16:00:11 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-12 16:00:11 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-12 16:00:11 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-12 16:00:11 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-12 16:00:11 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-12 16:00:11 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:00:11 -HTTP METHOD : GET
2018-07-12 16:00:11 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:00:11 -参数 : []
2018-07-12 16:00:11 -耗时 : 1
2018-07-12 16:00:11 -返回值 : main
2018-07-12 16:00:11 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 16:00:11 -HTTP METHOD : GET
2018-07-12 16:00:11 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 16:00:11 -参数 : []
2018-07-12 16:00:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 16:00:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 16:00:11 -<==      Total: 0
2018-07-12 16:00:11 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 16:00:11 -==> Parameters: 1(Long), 0(String)
2018-07-12 16:00:11 -<==      Total: 1
2018-07-12 16:00:11 -耗时 : 5
2018-07-12 16:00:11 -返回值 : com.justdo.common.utils.PageUtils@49594d33
2018-07-12 16:00:11 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:00:11 -HTTP METHOD : GET
2018-07-12 16:00:11 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:00:11 -参数 : []
2018-07-12 16:00:11 -耗时 : 1
2018-07-12 16:00:11 -返回值 : main
2018-07-12 16:00:13 -请求地址 : http://127.0.0.1:8088/system/dict/type
2018-07-12 16:00:13 -HTTP METHOD : GET
2018-07-12 16:00:13 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.listType
2018-07-12 16:00:13 -参数 : []
2018-07-12 16:00:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-07-12 16:00:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-07-12 16:00:13 -==> Parameters: 1(Long)
2018-07-12 16:00:13 -==> Parameters: 1(Long)
2018-07-12 16:00:13 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-07-12 16:00:13 -<==      Total: 57
2018-07-12 16:00:13 -<==      Total: 57
2018-07-12 16:00:13 -==> Parameters: 
2018-07-12 16:00:13 -<==      Total: 31
2018-07-12 16:00:13 -耗时 : 15
2018-07-12 16:00:13 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:13 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-07-12 16:00:13 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:13 -请求地址 : http://127.0.0.1:8088/system/dict/list
2018-07-12 16:00:13 -请求地址 : http://127.0.0.1:8088/system/dict
2018-07-12 16:00:13 -HTTP METHOD : GET
2018-07-12 16:00:13 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.dict
2018-07-12 16:00:13 -参数 : [{}]
2018-07-12 16:00:13 -HTTP METHOD : GET
2018-07-12 16:00:13 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.list
2018-07-12 16:00:13 -耗时 : 1
2018-07-12 16:00:13 -参数 : [{limit=10, offset=0}]
2018-07-12 16:00:13 -返回值 : system/dict/dict
2018-07-12 16:00:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-07-12 16:00:13 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:00:13 -<==      Total: 10
2018-07-12 16:00:13 -==>  Preparing: select count(*) from sys_dict3 
2018-07-12 16:00:13 -==> Parameters: 
2018-07-12 16:00:13 -<==      Total: 1
2018-07-12 16:00:13 -耗时 : 10
2018-07-12 16:00:13 -返回值 : com.justdo.common.utils.PageUtils@af10cb5
2018-07-12 16:00:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:20 -请求地址 : http://127.0.0.1:8088/system/regexp
2018-07-12 16:00:20 -HTTP METHOD : GET
2018-07-12 16:00:20 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.Regexp
2018-07-12 16:00:20 -参数 : []
2018-07-12 16:00:20 -耗时 : 0
2018-07-12 16:00:20 -返回值 : system/regexp/regexp
2018-07-12 16:00:20 -请求地址 : http://127.0.0.1:8088/system/regexp/list
2018-07-12 16:00:20 -HTTP METHOD : GET
2018-07-12 16:00:20 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.list
2018-07-12 16:00:20 -参数 : [{limit=10, offset=0, rname=}]
2018-07-12 16:00:20 -==>  Preparing: select RID,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from SYS_REGEXP order by RID desc 
2018-07-12 16:00:20 -==> Parameters: 
2018-07-12 16:00:20 -<==      Total: 9
2018-07-12 16:00:20 -==>  Preparing: select count(*) from sys_regexp 
2018-07-12 16:00:20 -==> Parameters: 
2018-07-12 16:00:20 -<==      Total: 1
2018-07-12 16:00:20 -耗时 : 11
2018-07-12 16:00:20 -返回值 : com.justdo.common.utils.PageUtils@75bf82da
2018-07-12 16:00:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:21 -请求地址 : http://127.0.0.1:8088/system/file/list
2018-07-12 16:00:21 -HTTP METHOD : GET
2018-07-12 16:00:21 -CLASS_METHOD : com.justdo.system.file.controller.FileController.list
2018-07-12 16:00:21 -参数 : [{limit=12, offset=0, type=}]
2018-07-12 16:00:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-07-12 16:00:21 -==> Parameters: 0(Integer), 12(Integer)
2018-07-12 16:00:21 -<==      Total: 10
2018-07-12 16:00:21 -==>  Preparing: select count(*) from sys_file 
2018-07-12 16:00:21 -==> Parameters: 
2018-07-12 16:00:21 -<==      Total: 1
2018-07-12 16:00:21 -耗时 : 16
2018-07-12 16:00:21 -返回值 : com.justdo.common.utils.PageUtils@4addcf59
2018-07-12 16:00:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:21 -请求地址 : http://127.0.0.1:8088/system/file
2018-07-12 16:00:21 -HTTP METHOD : GET
2018-07-12 16:00:21 -CLASS_METHOD : com.justdo.system.file.controller.FileController.sysFile
2018-07-12 16:00:21 -参数 : [{}]
2018-07-12 16:00:21 -耗时 : 1
2018-07-12 16:00:21 -返回值 : system/file/file
2018-07-12 16:00:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:24 -请求地址 : http://127.0.0.1:8088/system/user/
2018-07-12 16:00:24 -HTTP METHOD : GET
2018-07-12 16:00:24 -CLASS_METHOD : com.justdo.system.user.controller.UserController.user
2018-07-12 16:00:24 -参数 : [{}]
2018-07-12 16:00:24 -耗时 : 0
2018-07-12 16:00:24 -返回值 : system/user/user
2018-07-12 16:00:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:24 -请求地址 : http://127.0.0.1:8088/system/dept/tree
2018-07-12 16:00:24 -HTTP METHOD : GET
2018-07-12 16:00:24 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.tree
2018-07-12 16:00:24 -参数 : []
2018-07-12 16:00:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-07-12 16:00:24 -==> Parameters: 
2018-07-12 16:00:24 -<==      Total: 10
2018-07-12 16:00:24 -耗时 : 8
2018-07-12 16:00:24 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"测试二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"测试一部"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"测试部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"销售一部"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"研发二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"研發一部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-07-12 16:00:24 -请求地址 : http://127.0.0.1:8088/system/user/list
2018-07-12 16:00:24 -HTTP METHOD : GET
2018-07-12 16:00:24 -CLASS_METHOD : com.justdo.system.user.controller.UserController.list
2018-07-12 16:00:24 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-07-12 16:00:24 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-07-12 16:00:24 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:00:24 -<==      Total: 10
2018-07-12 16:00:24 -==>  Preparing: select count(*) from sys_user 
2018-07-12 16:00:24 -==> Parameters: 
2018-07-12 16:00:24 -<==      Total: 1
2018-07-12 16:00:24 -耗时 : 14
2018-07-12 16:00:24 -返回值 : com.justdo.common.utils.PageUtils@503500f8
2018-07-12 16:00:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:26 -请求地址 : http://127.0.0.1:8088/system/role
2018-07-12 16:00:26 -HTTP METHOD : GET
2018-07-12 16:00:26 -CLASS_METHOD : com.justdo.system.role.controller.RoleController.role
2018-07-12 16:00:26 -参数 : []
2018-07-12 16:00:26 -耗时 : 0
2018-07-12 16:00:26 -返回值 : system/role/role
2018-07-12 16:00:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:27 -请求地址 : http://127.0.0.1:8088/system/role/list
2018-07-12 16:00:27 -HTTP METHOD : GET
2018-07-12 16:00:27 -CLASS_METHOD : com.justdo.system.role.controller.RoleController.list
2018-07-12 16:00:27 -参数 : []
2018-07-12 16:00:27 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-07-12 16:00:27 -==> Parameters: 
2018-07-12 16:00:27 -<==      Total: 2
2018-07-12 16:00:27 -耗时 : 4
2018-07-12 16:00:27 -返回值 : [RoleDO{roleId=59, roleName='普通用户', roleSign='null', remark='基本用户权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-07-12 16:00:28 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:28 -请求地址 : http://127.0.0.1:8088/system/organ
2018-07-12 16:00:28 -HTTP METHOD : GET
2018-07-12 16:00:28 -CLASS_METHOD : com.justdo.system.organ.controller.OrganController.Organ
2018-07-12 16:00:28 -参数 : []
2018-07-12 16:00:28 -耗时 : 1
2018-07-12 16:00:28 -返回值 : system/organ/organ
2018-07-12 16:00:28 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:28 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:28 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:28 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:28 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:28 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:28 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:28 -请求地址 : http://127.0.0.1:8088/system/organ/list
2018-07-12 16:00:28 -HTTP METHOD : GET
2018-07-12 16:00:28 -CLASS_METHOD : com.justdo.system.organ.controller.OrganController.list
2018-07-12 16:00:28 -参数 : [{limit=10, offset=0}]
2018-07-12 16:00:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:00:28 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8088/system/organ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list(String), null, 2018-07-12 16:00:28.134(Timestamp)
2018-07-12 16:00:28 -<==    Updates: 1
2018-07-12 16:00:28 -Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy126.list(Unknown Source)
	at com.justdo.system.organ.service.impl.OrganServiceImpl.list(OrganServiceImpl.java:27)
	at com.justdo.system.organ.controller.OrganController.list(OrganController.java:49)
	at com.justdo.system.organ.controller.OrganController$$FastClassBySpringCGLIB$$ade438d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.justdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor161.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.justdo.system.organ.controller.OrganController$$EnhancerBySpringCGLIB$$7a70227e.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-12 16:00:29 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:29 -请求地址 : http://127.0.0.1:8088/system/menu/
2018-07-12 16:00:29 -HTTP METHOD : GET
2018-07-12 16:00:29 -CLASS_METHOD : com.justdo.system.menu.controller.MenuController.menu
2018-07-12 16:00:29 -参数 : [{}]
2018-07-12 16:00:29 -耗时 : 0
2018-07-12 16:00:29 -返回值 : system/menu/menu
2018-07-12 16:00:30 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:30 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:30 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:30 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:30 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:30 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:30 -请求地址 : http://127.0.0.1:8088/system/menu/list
2018-07-12 16:00:30 -HTTP METHOD : GET
2018-07-12 16:00:30 -CLASS_METHOD : com.justdo.system.menu.controller.MenuController.list
2018-07-12 16:00:30 -参数 : [{sort=order_num}]
2018-07-12 16:00:30 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-07-12 16:00:30 -==> Parameters: 
2018-07-12 16:00:30 -<==      Total: 72
2018-07-12 16:00:30 -耗时 : 15
2018-07-12 16:00:30 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:del', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:del', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='system/notice', perms='system:notice:notice', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='system/notice/del', perms='system:notice:del', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='system/notice/batchDel', perms='system:notice:batchDel', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='system/notice/selfnotice', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:del', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='system:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:del', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchDel', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:del', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='system/notice/add', perms='system:notice:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=3, name='机构管理', url='system/organ', perms='system:organ:organ', type=1, icon='fa fa-sitemap', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/del', perms='system:dept:del', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='system/notice/edit', perms='system:notice:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=109, name='添加', url='system/organ/add', perms='system:organ:add', type=2, icon='fa fa-plus', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=109, name='修改', url='system/organ/edit', perms='system:organ:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/del', perms='system:dict:del', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/del', perms='system:regexp:del', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=109, name='删除', url='system/organ/del', perms='system:organ:del', type=2, icon='fa fa-trash-o', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchDel', perms='system:dict:batchDel', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=109, name='批量删除', url='system/organ/batchDel', perms='system:organ:batchDel', type=2, icon='fa fa-close', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=105, name='批量删除', url='system/regexp/batchDel', perms='system:regexp:batchDel', type=2, icon='fa fa-close', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-07-12 16:00:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:34 -请求地址 : http://127.0.0.1:8088/system/dept
2018-07-12 16:00:34 -HTTP METHOD : GET
2018-07-12 16:00:34 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.dept
2018-07-12 16:00:34 -参数 : []
2018-07-12 16:00:34 -耗时 : 0
2018-07-12 16:00:34 -返回值 : system/dept/dept
2018-07-12 16:00:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:34 -请求地址 : http://127.0.0.1:8088/system/dept/list
2018-07-12 16:00:34 -HTTP METHOD : GET
2018-07-12 16:00:34 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.list
2018-07-12 16:00:34 -参数 : []
2018-07-12 16:00:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-07-12 16:00:34 -==> Parameters: 
2018-07-12 16:00:34 -<==      Total: 10
2018-07-12 16:00:34 -耗时 : 3
2018-07-12 16:00:34 -返回值 : [DeptDO{deptId=15, parentId=13, name='测试二部', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='测试一部', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='测试部', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='产品部', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='销售一部', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='销售部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='研发二部', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='研發一部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='研发部', orderNum=1, delFlag=1}]
2018-07-12 16:00:39 -请求地址 : http://127.0.0.1:8088/system/generator
2018-07-12 16:00:39 -HTTP METHOD : GET
2018-07-12 16:00:39 -CLASS_METHOD : com.justdo.system.generator.controller.GeneratorController.generator
2018-07-12 16:00:39 -参数 : []
2018-07-12 16:00:39 -耗时 : 1
2018-07-12 16:00:39 -返回值 : system/generator/list
2018-07-12 16:00:39 -请求地址 : http://127.0.0.1:8088/system/generator/list
2018-07-12 16:00:39 -HTTP METHOD : GET
2018-07-12 16:00:39 -CLASS_METHOD : com.justdo.system.generator.controller.GeneratorController.list
2018-07-12 16:00:39 -参数 : []
2018-07-12 16:00:39 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2018-07-12 16:00:39 -==> Parameters: 
2018-07-12 16:00:39 -<==      Total: 47
2018-07-12 16:00:39 -耗时 : 19
2018-07-12 16:00:39 -返回值 : [{engine=InnoDB, createTime=2018-07-06 10:02:41.0, tableComment=, tableName=APPLICANT_DETAIL}, {engine=InnoDB, createTime=2018-07-05 16:40:05.0, tableComment=申请基本信息, tableName=APPLICATION}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=数据库字典的索引表, tableName=SYS_DICT}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=数据字典的内容, tableName=SYS_DICT_CONTENT}, {engine=InnoDB, createTime=2018-07-08 21:15:38.0, tableComment=机构, tableName=SYS_ORGAN}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=系统正则表达式, tableName=SYS_REGEXP}, {engine=InnoDB, createTime=2018-07-05 16:39:42.0, tableComment=机动车详情, tableName=VEHICLE_DETAIL}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_evt_log}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_ge_bytearray}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_ge_property}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_actinst}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_attachment}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_comment}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_detail}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_identitylink}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_procinst}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_taskinst}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_varinst}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_id_group}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_id_info}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_id_membership}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_id_user}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_procdef_info}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_re_deployment}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_re_model}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_re_procdef}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_ru_event_subscr}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_ru_execution}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_ru_identitylink}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_ru_job}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_ru_task}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_ru_variable}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=文章内容, tableName=blog_content}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=通知通告, tableName=oa_notice}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=通知通告发送记录, tableName=oa_notice_record}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=审批流程测试表, tableName=salary}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=部门管理, tableName=sys_dept}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=字典表, tableName=sys_dict3}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=文件上传, tableName=sys_file}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=系统日志, tableName=sys_log}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=菜单管理, tableName=sys_menu}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=角色, tableName=sys_role}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=角色与菜单对应关系, tableName=sys_role_menu}, {engine=MyISAM, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=sys_task}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=sys_user_plus}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=用户与角色对应关系, tableName=sys_user_role}]
2018-07-12 16:00:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:42 -请求地址 : http://127.0.0.1:8088/system/quartzjob
2018-07-12 16:00:42 -HTTP METHOD : GET
2018-07-12 16:00:42 -CLASS_METHOD : com.justdo.system.quartzjob.controller.QuartzJobController.QuartzJobController
2018-07-12 16:00:42 -参数 : []
2018-07-12 16:00:42 -耗时 : 0
2018-07-12 16:00:42 -返回值 : system/quartzjob/quartzjob
2018-07-12 16:00:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:42 -请求地址 : http://127.0.0.1:8088/system/quartzjob/list
2018-07-12 16:00:42 -HTTP METHOD : GET
2018-07-12 16:00:42 -CLASS_METHOD : com.justdo.system.quartzjob.controller.QuartzJobController.list
2018-07-12 16:00:42 -参数 : [{limit=10, offset=0}]
2018-07-12 16:00:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc limit ?, ? 
2018-07-12 16:00:42 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:00:42 -<==      Total: 1
2018-07-12 16:00:42 -==>  Preparing: select count(*) from sys_task 
2018-07-12 16:00:42 -==> Parameters: 
2018-07-12 16:00:42 -<==      Total: 1
2018-07-12 16:00:42 -耗时 : 7
2018-07-12 16:00:42 -返回值 : com.justdo.common.utils.PageUtils@56ef9253
2018-07-12 16:00:47 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 16:00:47 -HTTP METHOD : GET
2018-07-12 16:00:47 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 16:00:47 -参数 : []
2018-07-12 16:00:47 -请求地址 : http://127.0.0.1:8088/index
2018-07-12 16:00:47 -HTTP METHOD : GET
2018-07-12 16:00:47 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.index
2018-07-12 16:00:47 -参数 : [{}]
2018-07-12 16:00:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 16:00:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 16:00:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-07-12 16:00:47 -==> Parameters: 1(Long)
2018-07-12 16:00:47 -<==      Total: 0
2018-07-12 16:00:47 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 16:00:47 -==> Parameters: 1(Long), 0(String)
2018-07-12 16:00:47 -<==      Total: 1
2018-07-12 16:00:47 -耗时 : 4
2018-07-12 16:00:47 -返回值 : com.justdo.common.utils.PageUtils@736488f
2018-07-12 16:00:48 -<==      Total: 30
2018-07-12 16:00:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-07-12 16:00:48 -==> Parameters: 150(Long)
2018-07-12 16:00:48 -<==      Total: 0
2018-07-12 16:00:48 -耗时 : 10
2018-07-12 16:00:48 -返回值 : index
2018-07-12 16:00:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:00:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 10(Integer), com.justdo.system.user.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p(String), 127.0.0.1(String), 2018-07-12 16:00:48.006(Timestamp)
2018-07-12 16:00:48 -<==    Updates: 1
2018-07-12 16:00:48 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:00:48 -HTTP METHOD : GET
2018-07-12 16:00:48 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:00:48 -参数 : []
2018-07-12 16:00:48 -耗时 : 0
2018-07-12 16:00:48 -返回值 : main
2018-07-12 16:00:48 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 16:00:48 -HTTP METHOD : GET
2018-07-12 16:00:48 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 16:00:48 -参数 : []
2018-07-12 16:00:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 16:00:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 16:00:48 -<==      Total: 0
2018-07-12 16:00:48 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 16:00:48 -==> Parameters: 1(Long), 0(String)
2018-07-12 16:00:48 -<==      Total: 1
2018-07-12 16:00:48 -耗时 : 4
2018-07-12 16:00:48 -返回值 : com.justdo.common.utils.PageUtils@48080e4a
2018-07-12 16:00:48 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:00:48 -HTTP METHOD : GET
2018-07-12 16:00:48 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:00:48 -参数 : []
2018-07-12 16:00:48 -耗时 : 0
2018-07-12 16:00:48 -返回值 : main
2018-07-12 16:00:50 -请求地址 : http://127.0.0.1:8088/system/dict/type
2018-07-12 16:00:50 -HTTP METHOD : GET
2018-07-12 16:00:50 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.listType
2018-07-12 16:00:50 -参数 : []
2018-07-12 16:00:50 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-07-12 16:00:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:50 -==> Parameters: 
2018-07-12 16:00:50 -请求地址 : http://127.0.0.1:8088/system/dict/list
2018-07-12 16:00:50 -HTTP METHOD : GET
2018-07-12 16:00:50 -请求地址 : http://127.0.0.1:8088/system/dict
2018-07-12 16:00:50 -HTTP METHOD : GET
2018-07-12 16:00:50 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.list
2018-07-12 16:00:50 -参数 : [{limit=10, offset=0}]
2018-07-12 16:00:50 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.dict
2018-07-12 16:00:50 -参数 : [{}]
2018-07-12 16:00:50 -耗时 : 0
2018-07-12 16:00:50 -返回值 : system/dict/dict
2018-07-12 16:00:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-07-12 16:00:50 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:00:50 -<==      Total: 31
2018-07-12 16:00:50 -耗时 : 3
2018-07-12 16:00:50 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-07-12 16:00:50 -<==      Total: 10
2018-07-12 16:00:50 -==>  Preparing: select count(*) from sys_dict3 
2018-07-12 16:00:50 -==> Parameters: 
2018-07-12 16:00:50 -<==      Total: 1
2018-07-12 16:00:50 -耗时 : 5
2018-07-12 16:00:50 -返回值 : com.justdo.common.utils.PageUtils@1668e61
2018-07-12 16:00:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:00:59 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=c335a7cd-be61-45d1-b243-7bf3a8100ef8
2018-07-12 16:00:59 -HTTP METHOD : GET
2018-07-12 16:00:59 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:00:59 -参数 : [{}]
2018-07-12 16:00:59 -耗时 : 1
2018-07-12 16:00:59 -返回值 : login
2018-07-12 16:00:59 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=a514efab-cd83-4ff7-a7c0-3bb457ce8196
2018-07-12 16:00:59 -HTTP METHOD : GET
2018-07-12 16:00:59 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:00:59 -参数 : [{}]
2018-07-12 16:00:59 -耗时 : 1
2018-07-12 16:00:59 -返回值 : login
2018-07-12 16:00:59 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:00:59 -HTTP METHOD : GET
2018-07-12 16:00:59 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:00:59 -参数 : [{}]
2018-07-12 16:00:59 -耗时 : 0
2018-07-12 16:00:59 -返回值 : login
2018-07-12 16:00:59 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:00:59 -HTTP METHOD : GET
2018-07-12 16:00:59 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:00:59 -参数 : [{}]
2018-07-12 16:00:59 -耗时 : 0
2018-07-12 16:00:59 -返回值 : login
2018-07-12 16:00:59 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:00:59 -HTTP METHOD : GET
2018-07-12 16:00:59 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:00:59 -参数 : [{}]
2018-07-12 16:00:59 -耗时 : 1
2018-07-12 16:00:59 -返回值 : login
2018-07-12 16:00:59 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:00:59 -HTTP METHOD : GET
2018-07-12 16:00:59 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:00:59 -参数 : [{}]
2018-07-12 16:00:59 -耗时 : 0
2018-07-12 16:00:59 -返回值 : login
2018-07-12 16:00:59 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:00:59 -HTTP METHOD : GET
2018-07-12 16:00:59 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:00:59 -参数 : [{}]
2018-07-12 16:00:59 -耗时 : 0
2018-07-12 16:00:59 -返回值 : login
2018-07-12 16:00:59 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=621dc4ec-d49b-4d67-a850-2a2e9d0067c7
2018-07-12 16:00:59 -HTTP METHOD : GET
2018-07-12 16:00:59 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:00:59 -参数 : [{}]
2018-07-12 16:00:59 -耗时 : 1
2018-07-12 16:00:59 -返回值 : login
2018-07-12 16:00:59 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:00:59 -HTTP METHOD : GET
2018-07-12 16:00:59 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:00:59 -参数 : [{}]
2018-07-12 16:00:59 -耗时 : 0
2018-07-12 16:00:59 -返回值 : login
2018-07-12 16:00:59 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:00:59 -HTTP METHOD : GET
2018-07-12 16:00:59 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:00:59 -参数 : [{}]
2018-07-12 16:00:59 -耗时 : 0
2018-07-12 16:00:59 -返回值 : login
2018-07-12 16:00:59 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:00:59 -HTTP METHOD : GET
2018-07-12 16:00:59 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:00:59 -参数 : [{}]
2018-07-12 16:00:59 -耗时 : 0
2018-07-12 16:00:59 -返回值 : login
2018-07-12 16:00:59 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:00:59 -HTTP METHOD : GET
2018-07-12 16:00:59 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:00:59 -参数 : [{}]
2018-07-12 16:00:59 -耗时 : 0
2018-07-12 16:00:59 -返回值 : login
2018-07-12 16:00:59 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:00:59 -HTTP METHOD : GET
2018-07-12 16:00:59 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:00:59 -参数 : [{}]
2018-07-12 16:00:59 -耗时 : 0
2018-07-12 16:00:59 -返回值 : login
2018-07-12 16:00:59 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:00:59 -HTTP METHOD : GET
2018-07-12 16:00:59 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:00:59 -参数 : [{}]
2018-07-12 16:00:59 -耗时 : 1
2018-07-12 16:00:59 -返回值 : login
2018-07-12 16:01:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 16, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 8, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 10]
2018-07-12 16:01:02 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=3d4e9adc-9e71-4890-8c18-f709777e6e37
2018-07-12 16:01:02 -HTTP METHOD : GET
2018-07-12 16:01:02 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:01:02 -参数 : [{}]
2018-07-12 16:01:02 -耗时 : 0
2018-07-12 16:01:02 -返回值 : login
2018-07-12 16:01:02 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:01:02 -HTTP METHOD : GET
2018-07-12 16:01:02 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:01:02 -参数 : [{}]
2018-07-12 16:01:02 -耗时 : 0
2018-07-12 16:01:02 -返回值 : login
2018-07-12 16:01:02 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:01:02 -HTTP METHOD : GET
2018-07-12 16:01:02 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:01:02 -参数 : [{}]
2018-07-12 16:01:02 -耗时 : 1
2018-07-12 16:01:02 -返回值 : login
2018-07-12 16:01:02 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:01:02 -HTTP METHOD : GET
2018-07-12 16:01:02 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.login
2018-07-12 16:01:02 -参数 : [{}]
2018-07-12 16:01:02 -耗时 : 1
2018-07-12 16:01:02 -返回值 : login
2018-07-12 16:01:09 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-07-12 16:01:09 -==> Parameters: admin(String)
2018-07-12 16:01:09 -<==      Total: 1
2018-07-12 16:01:09 -请求地址 : http://127.0.0.1:8088/login
2018-07-12 16:01:09 -HTTP METHOD : POST
2018-07-12 16:01:09 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.ajaxLogin
2018-07-12 16:01:09 -参数 : [admin, 888888]
2018-07-12 16:01:09 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-07-12 16:01:09 -==> Parameters: admin(String)
2018-07-12 16:01:09 -<==      Total: 1
2018-07-12 16:01:09 -耗时 : 9
2018-07-12 16:01:09 -返回值 : {msg=操作成功, code=0}
2018-07-12 16:01:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:01:09 -==> Parameters: 1(Long), admin(String), 登录(String), 9(Integer), com.justdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-07-12 16:01:09.575(Timestamp)
2018-07-12 16:01:09 -<==    Updates: 1
2018-07-12 16:01:09 -请求地址 : http://127.0.0.1:8088/index
2018-07-12 16:01:09 -HTTP METHOD : GET
2018-07-12 16:01:09 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.index
2018-07-12 16:01:09 -参数 : [{}]
2018-07-12 16:01:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-07-12 16:01:09 -==> Parameters: 1(Long)
2018-07-12 16:01:09 -<==      Total: 30
2018-07-12 16:01:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-07-12 16:01:09 -==> Parameters: 150(Long)
2018-07-12 16:01:09 -<==      Total: 0
2018-07-12 16:01:09 -耗时 : 9
2018-07-12 16:01:09 -返回值 : index
2018-07-12 16:01:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:01:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 9(Integer), com.justdo.system.user.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p(String), 127.0.0.1(String), 2018-07-12 16:01:09.637(Timestamp)
2018-07-12 16:01:09 -<==    Updates: 1
2018-07-12 16:01:09 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:01:09 -HTTP METHOD : GET
2018-07-12 16:01:09 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:01:09 -参数 : []
2018-07-12 16:01:09 -耗时 : 0
2018-07-12 16:01:09 -返回值 : main
2018-07-12 16:01:09 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 16:01:09 -HTTP METHOD : GET
2018-07-12 16:01:09 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 16:01:09 -参数 : []
2018-07-12 16:01:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 16:01:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 16:01:09 -<==      Total: 0
2018-07-12 16:01:09 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 16:01:09 -==> Parameters: 1(Long), 0(String)
2018-07-12 16:01:09 -<==      Total: 1
2018-07-12 16:01:09 -耗时 : 4
2018-07-12 16:01:09 -返回值 : com.justdo.common.utils.PageUtils@77eaaa55
2018-07-12 16:01:09 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:01:09 -HTTP METHOD : GET
2018-07-12 16:01:09 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:01:09 -参数 : []
2018-07-12 16:01:09 -耗时 : 0
2018-07-12 16:01:09 -返回值 : main
2018-07-12 16:01:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:12 -请求地址 : http://127.0.0.1:8088/system/dict
2018-07-12 16:01:12 -HTTP METHOD : GET
2018-07-12 16:01:12 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.dict
2018-07-12 16:01:12 -参数 : [{}]
2018-07-12 16:01:12 -耗时 : 0
2018-07-12 16:01:12 -返回值 : system/dict/dict
2018-07-12 16:01:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:12 -请求地址 : http://127.0.0.1:8088/system/dict/type
2018-07-12 16:01:12 -HTTP METHOD : GET
2018-07-12 16:01:12 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.listType
2018-07-12 16:01:12 -参数 : []
2018-07-12 16:01:12 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-07-12 16:01:12 -==> Parameters: 
2018-07-12 16:01:12 -<==      Total: 31
2018-07-12 16:01:12 -耗时 : 2
2018-07-12 16:01:12 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-07-12 16:01:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:12 -请求地址 : http://127.0.0.1:8088/system/dict/list
2018-07-12 16:01:12 -HTTP METHOD : GET
2018-07-12 16:01:12 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.list
2018-07-12 16:01:12 -参数 : [{limit=10, offset=0}]
2018-07-12 16:01:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-07-12 16:01:12 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:01:12 -<==      Total: 10
2018-07-12 16:01:12 -==>  Preparing: select count(*) from sys_dict3 
2018-07-12 16:01:12 -==> Parameters: 
2018-07-12 16:01:12 -<==      Total: 1
2018-07-12 16:01:12 -耗时 : 3
2018-07-12 16:01:12 -返回值 : com.justdo.common.utils.PageUtils@3e3536e8
2018-07-12 16:01:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:16 -请求地址 : http://127.0.0.1:8088/system/regexp
2018-07-12 16:01:16 -HTTP METHOD : GET
2018-07-12 16:01:16 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.Regexp
2018-07-12 16:01:16 -参数 : []
2018-07-12 16:01:16 -耗时 : 0
2018-07-12 16:01:16 -返回值 : system/regexp/regexp
2018-07-12 16:01:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:16 -请求地址 : http://127.0.0.1:8088/system/regexp/list
2018-07-12 16:01:16 -HTTP METHOD : GET
2018-07-12 16:01:16 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.list
2018-07-12 16:01:16 -参数 : [{limit=10, offset=0, rname=}]
2018-07-12 16:01:16 -==>  Preparing: select RID,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from SYS_REGEXP order by RID desc 
2018-07-12 16:01:16 -==> Parameters: 
2018-07-12 16:01:16 -<==      Total: 9
2018-07-12 16:01:16 -==>  Preparing: select count(*) from sys_regexp 
2018-07-12 16:01:16 -==> Parameters: 
2018-07-12 16:01:16 -<==      Total: 1
2018-07-12 16:01:16 -耗时 : 6
2018-07-12 16:01:16 -返回值 : com.justdo.common.utils.PageUtils@63d3f554
2018-07-12 16:01:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:18 -请求地址 : http://127.0.0.1:8088/system/file
2018-07-12 16:01:18 -HTTP METHOD : GET
2018-07-12 16:01:18 -CLASS_METHOD : com.justdo.system.file.controller.FileController.sysFile
2018-07-12 16:01:18 -参数 : [{}]
2018-07-12 16:01:18 -耗时 : 0
2018-07-12 16:01:18 -返回值 : system/file/file
2018-07-12 16:01:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:19 -请求地址 : http://127.0.0.1:8088/system/file/list
2018-07-12 16:01:19 -HTTP METHOD : GET
2018-07-12 16:01:19 -CLASS_METHOD : com.justdo.system.file.controller.FileController.list
2018-07-12 16:01:19 -参数 : [{limit=12, offset=0, type=}]
2018-07-12 16:01:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-07-12 16:01:19 -==> Parameters: 0(Integer), 12(Integer)
2018-07-12 16:01:19 -<==      Total: 10
2018-07-12 16:01:19 -==>  Preparing: select count(*) from sys_file 
2018-07-12 16:01:19 -==> Parameters: 
2018-07-12 16:01:19 -<==      Total: 1
2018-07-12 16:01:19 -耗时 : 5
2018-07-12 16:01:19 -返回值 : com.justdo.common.utils.PageUtils@1a1c59e3
2018-07-12 16:01:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:21 -请求地址 : http://127.0.0.1:8088/system/organ
2018-07-12 16:01:21 -HTTP METHOD : GET
2018-07-12 16:01:21 -CLASS_METHOD : com.justdo.system.organ.controller.OrganController.Organ
2018-07-12 16:01:21 -参数 : []
2018-07-12 16:01:21 -耗时 : 0
2018-07-12 16:01:21 -返回值 : system/organ/organ
2018-07-12 16:01:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:21 -请求地址 : http://127.0.0.1:8088/system/organ/list
2018-07-12 16:01:21 -HTTP METHOD : GET
2018-07-12 16:01:21 -CLASS_METHOD : com.justdo.system.organ.controller.OrganController.list
2018-07-12 16:01:21 -参数 : [{limit=10, offset=0}]
2018-07-12 16:01:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:01:21 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8088/system/organ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list(String), null, 2018-07-12 16:01:21.59(Timestamp)
2018-07-12 16:01:21 -<==    Updates: 1
2018-07-12 16:01:21 -Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy126.list(Unknown Source)
	at com.justdo.system.organ.service.impl.OrganServiceImpl.list(OrganServiceImpl.java:27)
	at com.justdo.system.organ.controller.OrganController.list(OrganController.java:49)
	at com.justdo.system.organ.controller.OrganController$$FastClassBySpringCGLIB$$ade438d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.justdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor161.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.justdo.system.organ.controller.OrganController$$EnhancerBySpringCGLIB$$7a70227e.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-12 16:01:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:35 -请求地址 : http://127.0.0.1:8088/system/menu/
2018-07-12 16:01:35 -HTTP METHOD : GET
2018-07-12 16:01:35 -CLASS_METHOD : com.justdo.system.menu.controller.MenuController.menu
2018-07-12 16:01:35 -参数 : [{}]
2018-07-12 16:01:35 -耗时 : 0
2018-07-12 16:01:35 -返回值 : system/menu/menu
2018-07-12 16:01:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:01:35 -请求地址 : http://127.0.0.1:8088/system/menu/list
2018-07-12 16:01:35 -HTTP METHOD : GET
2018-07-12 16:01:35 -CLASS_METHOD : com.justdo.system.menu.controller.MenuController.list
2018-07-12 16:01:35 -参数 : [{sort=order_num}]
2018-07-12 16:01:35 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-07-12 16:01:35 -==> Parameters: 
2018-07-12 16:01:35 -<==      Total: 72
2018-07-12 16:01:35 -耗时 : 5
2018-07-12 16:01:35 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:del', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:del', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='system/notice', perms='system:notice:notice', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='system/notice/del', perms='system:notice:del', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='system/notice/batchDel', perms='system:notice:batchDel', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='system/notice/selfnotice', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:del', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='system:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:del', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchDel', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:del', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='system/notice/add', perms='system:notice:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=3, name='机构管理', url='system/organ', perms='system:organ:organ', type=1, icon='fa fa-sitemap', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/del', perms='system:dept:del', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='system/notice/edit', perms='system:notice:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=109, name='添加', url='system/organ/add', perms='system:organ:add', type=2, icon='fa fa-plus', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=109, name='修改', url='system/organ/edit', perms='system:organ:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/del', perms='system:dict:del', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/del', perms='system:regexp:del', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=109, name='删除', url='system/organ/del', perms='system:organ:del', type=2, icon='fa fa-trash-o', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchDel', perms='system:dict:batchDel', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=109, name='批量删除', url='system/organ/batchDel', perms='system:organ:batchDel', type=2, icon='fa fa-close', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=105, name='批量删除', url='system/regexp/batchDel', perms='system:regexp:batchDel', type=2, icon='fa fa-close', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-07-12 16:15:03 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:59:53 CST 2018]; root of context hierarchy
2018-07-12 16:15:03 -Stopping beans in phase 2147483647
2018-07-12 16:15:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-07-12 16:15:03 -Stopping...
2018-07-12 16:15:03 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-07-12 16:15:03 -Stopped.
2018-07-12 16:15:03 -Unregistering JMX-exposed beans on shutdown
2018-07-12 16:15:03 -Unregistering JMX-exposed beans
2018-07-12 16:15:03 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-07-12 16:15:03 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-07-12 16:15:03 -清除SpringContextHolder中的ApplicationContext:org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 15:59:53 CST 2018]; root of context hierarchy
2018-07-12 16:15:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-07-12 16:15:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-07-12 16:15:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-07-12 16:15:03 -Shutting down Quartz Scheduler
2018-07-12 16:15:03 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-07-12 16:15:03 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-07-12 16:15:03 -{dataSource-1} closed
2018-07-12 16:15:03 -Disabled session validation scheduler.
2018-07-12 16:19:15 -Starting JustdoApplication on localhost with PID 1173 (/Users/chenlin/Documents/GitHub/JustDo-boot/target/classes started by chenlin in /Users/chenlin/Documents/GitHub/JustDo-boot)
2018-07-12 16:19:15 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-07-12 16:19:15 -The following profiles are active: dev
2018-07-12 16:19:15 -HV000001: Hibernate Validator 5.3.6.Final
2018-07-12 16:19:15 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:19:15 CST 2018]; root of context hierarchy
2018-07-12 16:19:16 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-12 16:19:16 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e7937f7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:19:17 -Bean 'shiroConfig' of type [com.justdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b3ef1a5d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:19:17 -Bean 'userRealm' of type [com.justdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:19:17 -Bean 'redisManager' of type [com.justdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:19:17 -获取名称为: com.justdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-07-12 16:19:17 -Bean 'redisSessionDAO' of type [com.justdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:19:17 -Bean 'sessionDAO' of type [com.justdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:19:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:19:17 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:19:17 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:19:17 -Tomcat initialized with port(s): 8088 (http)
2018-07-12 16:19:17 -Starting service [Tomcat]
2018-07-12 16:19:17 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-07-12 16:19:17 -Initializing Spring embedded WebApplicationContext
2018-07-12 16:19:17 -Root WebApplicationContext: initialization completed in 2409 ms
2018-07-12 16:19:18 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-12 16:19:18 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-12 16:19:18 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-12 16:19:18 -Mapping filter: 'requestContextFilter' to: [/*]
2018-07-12 16:19:18 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-12 16:19:18 -Filter xssFilter was not registered (disabled)
2018-07-12 16:19:18 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-07-12 16:19:18 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-07-12 16:19:18 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-07-12 16:19:18 -Mapping servlet: 'dispatcherServlet' to [/]
2018-07-12 16:19:18 -{dataSource-1} inited
2018-07-12 16:19:19 -ProcessEngine default created
2018-07-12 16:19:20 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:19:15 CST 2018]; root of context hierarchy
2018-07-12 16:19:20 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-07-12 16:19:20 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-07-12 16:19:21 -Using default implementation for ThreadExecutor
2018-07-12 16:19:21 -Job execution threads will use class loader of thread: main
2018-07-12 16:19:21 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-12 16:19:21 -Quartz Scheduler v.2.2.1 created.
2018-07-12 16:19:21 -RAMJobStore initialized.
2018-07-12 16:19:21 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-07-12 16:19:21 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-07-12 16:19:21 -Quartz scheduler version: 2.2.1
2018-07-12 16:19:21 -JobFactory set to: com.justdo.common.quartz.factory.JobFactory@359ea595
2018-07-12 16:19:22 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.remove(java.lang.String)
2018-07-12 16:19:22 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.ModelController.list(int,int)
2018-07-12 16:19:22 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-07-12 16:19:22 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ModelController.model()
2018-07-12 16:19:22 -Mapped "{[/activiti/model/add]}" onto public void com.justdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-07-12 16:19:22 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.justdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-07-12 16:19:22 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.justdo.activiti.controller.ModelController.getStencilset()
2018-07-12 16:19:22 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.justdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-12 16:19:22 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-07-12 16:19:22 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.justdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-12 16:19:22 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.justdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-07-12 16:19:22 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ProcessController.add()
2018-07-12 16:19:22 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-07-12 16:19:22 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.ProcessController.list(int,int)
2018-07-12 16:19:22 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-07-12 16:19:22 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-07-12 16:19:22 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-07-12 16:19:22 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.justdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-12 16:19:22 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ProcessController.process()
2018-07-12 16:19:22 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.add()
2018-07-12 16:19:22 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-07-12 16:19:22 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-07-12 16:19:22 -Mapped "{[/act/salary/update]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.update(com.justdo.activiti.domain.SalaryDO)
2018-07-12 16:19:22 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.Salary()
2018-07-12 16:19:22 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.saveOrUpdate(com.justdo.activiti.domain.SalaryDO)
2018-07-12 16:19:22 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.justdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-12 16:19:22 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.TaskController.list(int,int)
2018-07-12 16:19:22 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.TaskController.gotoTask()
2018-07-12 16:19:22 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.justdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-12 16:19:22 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.TaskController.todo()
2018-07-12 16:19:22 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.justdo.activiti.vo.TaskVO> com.justdo.activiti.controller.TaskController.todoList()
2018-07-12 16:19:22 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.justdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-12 16:19:22 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.blog()
2018-07-12 16:19:22 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.add()
2018-07-12 16:19:22 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.remove(java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-07-12 16:19:22 -Mapped "{[/blog/bContent/update]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.update(com.justdo.blog.domain.ContentDO)
2018-07-12 16:19:22 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.save(com.justdo.blog.domain.ContentDO)
2018-07-12 16:19:22 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.bContent()
2018-07-12 16:19:22 -Mapped "{[/error]}" onto public com.justdo.common.utils.R com.justdo.common.exception.HandleErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-12 16:19:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.common.exception.HandleErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-12 16:19:22 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/dept/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/system/dept/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-07-12 16:19:22 -Mapped "{[/system/dept/update]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.update(com.justdo.system.dept.domain.DeptDO)
2018-07-12 16:19:22 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.justdo.system.dept.domain.DeptDO> com.justdo.system.dept.controller.DeptController.list()
2018-07-12 16:19:22 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.save(com.justdo.system.dept.domain.DeptDO)
2018-07-12 16:19:22 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.justdo.common.domain.Tree<com.justdo.system.dept.domain.DeptDO> com.justdo.system.dept.controller.DeptController.tree()
2018-07-12 16:19:22 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.dept()
2018-07-12 16:19:22 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.treeView()
2018-07-12 16:19:22 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.add()
2018-07-12 16:19:22 -Mapped "{[/system/dict/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-07-12 16:19:22 -Mapped "{[/system/dict/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/system/dict/update]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.update(com.justdo.system.dict.domain.DictDO)
2018-07-12 16:19:22 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.save(com.justdo.system.dict.domain.DictDO)
2018-07-12 16:19:22 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.justdo.system.dict.domain.DictDO> com.justdo.system.dict.controller.DictController.listType()
2018-07-12 16:19:22 -Mapped "{[/system/dict/view/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.view(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.dict(org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-07-12 16:19:22 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.justdo.system.dict.domain.DictDO> com.justdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-07-12 16:19:22 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.justdo.system.dicttype.domain.DictTypeDO> com.justdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-07-12 16:19:22 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.adddict()
2018-07-12 16:19:22 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.savetype(com.justdo.system.dicttype.domain.DictTypeDO)
2018-07-12 16:19:22 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.add()
2018-07-12 16:19:22 -Mapped "{[/system/file/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-07-12 16:19:22 -Mapped "{[/system/file/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-07-12 16:19:22 -Mapped "{[/system/file/update]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.update(com.justdo.system.file.domain.FileDO)
2018-07-12 16:19:22 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.save(com.justdo.system.file.domain.FileDO)
2018-07-12 16:19:22 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-07-12 16:19:22 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/file/info/{id}]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.info(java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.justdo.system.generator.controller.GeneratorController.list()
2018-07-12 16:19:22 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.justdo.system.generator.controller.GeneratorController.generator()
2018-07-12 16:19:22 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.justdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-07-12 16:19:22 -Mapped "{[/system/generator/batchCode]}" onto public void com.justdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-07-12 16:19:22 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.justdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/log/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.log.controller.LogController.remove(java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.justdo.system.log.controller.LogController.log()
2018-07-12 16:19:22 -Mapped "{[/system/log/list],methods=[GET]}" onto com.justdo.common.domain.PageDO<com.justdo.system.log.domain.LogDO> com.justdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/system/log/batchDel],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.log.controller.LogController.batchDel(java.lang.Long[])
2018-07-12 16:19:22 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/system/menu/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.update(com.justdo.system.menu.domain.MenuDO)
2018-07-12 16:19:22 -Mapped "{[/system/menu/list]}" onto java.util.List<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.save(com.justdo.system.menu.domain.MenuDO)
2018-07-12 16:19:22 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.justdo.common.domain.Tree<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.justdo.common.domain.Tree<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.tree()
2018-07-12 16:19:22 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/system/notice/add],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.add()
2018-07-12 16:19:22 -Mapped "{[/system/notice/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.remove(java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/system/notice/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.remove(java.lang.Long[])
2018-07-12 16:19:22 -Mapped "{[/system/notice/update]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.update(com.justdo.system.notice.domain.NoticeDO)
2018-07-12 16:19:22 -Mapped "{[/system/notice/read/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.read(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/notice/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/system/notice/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.save(com.justdo.system.notice.domain.NoticeDO)
2018-07-12 16:19:22 -Mapped "{[/system/notice/message],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.message()
2018-07-12 16:19:22 -Mapped "{[/system/notice],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.Notice()
2018-07-12 16:19:22 -Mapped "{[/system/notice/selfnotice],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.selefNotice()
2018-07-12 16:19:22 -Mapped "{[/system/notice/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/notice/selflist],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/system/organ/add],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.add()
2018-07-12 16:19:22 -Mapped "{[/system/organ/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.remove(java.lang.String)
2018-07-12 16:19:22 -Mapped "{[/system/organ/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.remove(java.lang.String[])
2018-07-12 16:19:22 -Mapped "{[/system/organ/update]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.update(com.justdo.system.organ.domain.OrganDO)
2018-07-12 16:19:22 -Mapped "{[/system/organ/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.organ.controller.OrganController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/system/organ/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.save(com.justdo.system.organ.domain.OrganDO)
2018-07-12 16:19:22 -Mapped "{[/system/organ],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.Organ()
2018-07-12 16:19:22 -Mapped "{[/system/organ/edit/{organid}],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.add()
2018-07-12 16:19:22 -Mapped "{[/system/quartzjob/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/system/quartzjob/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-07-12 16:19:22 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.update(com.justdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-07-12 16:19:22 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.save(com.justdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-07-12 16:19:22 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-07-12 16:19:22 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-07-12 16:19:22 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.add()
2018-07-12 16:19:22 -Mapped "{[/system/regexp/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-07-12 16:19:22 -Mapped "{[/system/regexp/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-07-12 16:19:22 -Mapped "{[/system/regexp/update]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.update(com.justdo.system.regexp.domain.RegexpDO)
2018-07-12 16:19:22 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.save(com.justdo.system.regexp.domain.RegexpDO)
2018-07-12 16:19:22 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.Regexp()
2018-07-12 16:19:22 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.add()
2018-07-12 16:19:22 -Mapped "{[/system/role/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.update(com.justdo.system.role.domain.RoleDO)
2018-07-12 16:19:22 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.justdo.system.role.domain.RoleDO> com.justdo.system.role.controller.RoleController.list()
2018-07-12 16:19:22 -Mapped "{[/system/role/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.save(com.justdo.system.role.domain.RoleDO)
2018-07-12 16:19:22 -Mapped "{[/system/role/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.save(java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.role()
2018-07-12 16:19:22 -Mapped "{[/system/role/batchDel],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.batchDel(java.lang.Long[])
2018-07-12 16:19:22 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.main()
2018-07-12 16:19:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.logout()
2018-07-12 16:19:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.login(org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/login],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-07-12 16:19:22 -Mapped "{[/system/online/list]}" onto public java.util.List<com.justdo.system.user.domain.UserOnline> com.justdo.system.user.controller.SessionController.list()
2018-07-12 16:19:22 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.justdo.system.user.controller.SessionController.online()
2018-07-12 16:19:22 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.justdo.common.utils.R com.justdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-07-12 16:19:22 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.justdo.system.user.controller.SessionController.sessionList()
2018-07-12 16:19:22 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.justdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/user/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.remove(java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/system/user/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.update(com.justdo.system.user.domain.UserDO)
2018-07-12 16:19:22 -Mapped "{[/system/user/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:19:22 -Mapped "{[/system/user/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.save(com.justdo.system.user.domain.UserDO)
2018-07-12 16:19:22 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.justdo.common.domain.Tree<com.justdo.system.dept.domain.DeptDO> com.justdo.system.user.controller.UserController.tree()
2018-07-12 16:19:22 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.treeView()
2018-07-12 16:19:22 -Mapped "{[/system/user/batchDel],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.batchDel(java.lang.Long[])
2018-07-12 16:19:22 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:19:22 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:19:22 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.resetPwd(com.justdo.system.user.domain.UserVO)
2018-07-12 16:19:22 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.updatePeronal(com.justdo.system.user.domain.UserDO)
2018-07-12 16:19:22 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.adminResetPwd(com.justdo.system.user.domain.UserVO)
2018-07-12 16:19:22 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-07-12 16:19:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-07-12 16:19:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-07-12 16:19:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-07-12 16:19:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-07-12 16:19:22 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-07-12 16:19:22 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-07-12 16:19:22 -Initializing ExecutorService  'brokerChannelExecutor'
2018-07-12 16:19:23 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:19:15 CST 2018]; root of context hierarchy
2018-07-12 16:19:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:19:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:19:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:19:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-07-12 16:19:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:19:24 -

Using default security password: d3cdf52d-303d-4a10-920c-434bb73fd7ac

2018-07-12 16:19:24 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-07-12 16:19:24 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@2318651f, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3f04fb07, org.springframework.security.web.context.SecurityContextPersistenceFilter@235dacd7, org.springframework.security.web.header.HeaderWriterFilter@1028a747, org.springframework.security.web.csrf.CsrfFilter@36ae17ef, org.springframework.security.web.authentication.logout.LogoutFilter@43d84df1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c816f46, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6447dc25, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4718d320, org.springframework.security.web.session.SessionManagementFilter@563bd6a4, org.springframework.security.web.access.ExceptionTranslationFilter@71c69628]
2018-07-12 16:19:25 -Registering beans for JMX exposure on startup
2018-07-12 16:19:25 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-12 16:19:25 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-12 16:19:25 -Starting beans in phase 2147483647
2018-07-12 16:19:25 -Context refreshed
2018-07-12 16:19:25 -Found 1 custom documentation plugin(s)
2018-07-12 16:19:25 -Scanning for api listing references
2018-07-12 16:19:25 -Generating unique operation named: removeUsingPOST_1
2018-07-12 16:19:25 -Generating unique operation named: addUsingGET_1
2018-07-12 16:19:25 -Generating unique operation named: editUsingGET_1
2018-07-12 16:19:25 -Generating unique operation named: listUsingGET_1
2018-07-12 16:19:25 -Generating unique operation named: removeUsingPOST_2
2018-07-12 16:19:25 -Generating unique operation named: removeUsingPOST_3
2018-07-12 16:19:25 -Generating unique operation named: saveUsingPOST_1
2018-07-12 16:19:25 -Generating unique operation named: updateUsingGET_1
2018-07-12 16:19:25 -Generating unique operation named: updateUsingHEAD_1
2018-07-12 16:19:25 -Generating unique operation named: updateUsingPOST_1
2018-07-12 16:19:25 -Generating unique operation named: updateUsingPUT_1
2018-07-12 16:19:25 -Generating unique operation named: updateUsingPATCH_1
2018-07-12 16:19:25 -Generating unique operation named: updateUsingDELETE_1
2018-07-12 16:19:26 -Generating unique operation named: updateUsingOPTIONS_1
2018-07-12 16:19:26 -Generating unique operation named: updateUsingTRACE_1
2018-07-12 16:19:26 -Generating unique operation named: addUsingGET_2
2018-07-12 16:19:26 -Generating unique operation named: editUsingGET_2
2018-07-12 16:19:26 -Generating unique operation named: listUsingGET_2
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_4
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_5
2018-07-12 16:19:26 -Generating unique operation named: saveUsingPOST_2
2018-07-12 16:19:26 -Generating unique operation named: updateUsingGET_2
2018-07-12 16:19:26 -Generating unique operation named: updateUsingHEAD_2
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPOST_2
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPUT_2
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPATCH_2
2018-07-12 16:19:26 -Generating unique operation named: updateUsingDELETE_2
2018-07-12 16:19:26 -Generating unique operation named: updateUsingOPTIONS_2
2018-07-12 16:19:26 -Generating unique operation named: updateUsingTRACE_2
2018-07-12 16:19:26 -Generating unique operation named: addUsingGET_3
2018-07-12 16:19:26 -Generating unique operation named: editUsingGET_3
2018-07-12 16:19:26 -Generating unique operation named: listUsingGET_3
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_6
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_7
2018-07-12 16:19:26 -Generating unique operation named: saveUsingPOST_3
2018-07-12 16:19:26 -Generating unique operation named: updateUsingGET_3
2018-07-12 16:19:26 -Generating unique operation named: updateUsingHEAD_3
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPOST_3
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPUT_3
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPATCH_3
2018-07-12 16:19:26 -Generating unique operation named: updateUsingDELETE_3
2018-07-12 16:19:26 -Generating unique operation named: updateUsingOPTIONS_3
2018-07-12 16:19:26 -Generating unique operation named: updateUsingTRACE_3
2018-07-12 16:19:26 -Generating unique operation named: editUsingGET_4
2018-07-12 16:19:26 -Generating unique operation named: listUsingGET_4
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPOST_4
2018-07-12 16:19:26 -Generating unique operation named: listUsingGET_5
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_8
2018-07-12 16:19:26 -Generating unique operation named: welcomeUsingGET_1
2018-07-12 16:19:26 -Generating unique operation named: addUsingGET_4
2018-07-12 16:19:26 -Generating unique operation named: editUsingGET_5
2018-07-12 16:19:26 -Generating unique operation named: listUsingGET_6
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_9
2018-07-12 16:19:26 -Generating unique operation named: saveUsingPOST_4
2018-07-12 16:19:26 -Generating unique operation named: treeUsingGET_1
2018-07-12 16:19:26 -Generating unique operation named: treeUsingGET_2
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPOST_5
2018-07-12 16:19:26 -Generating unique operation named: editUsingGET_6
2018-07-12 16:19:26 -Generating unique operation named: listUsingGET_7
2018-07-12 16:19:26 -Generating unique operation named: addUsingGET_5
2018-07-12 16:19:26 -Generating unique operation named: editUsingGET_7
2018-07-12 16:19:26 -Generating unique operation named: listUsingGET_8
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_10
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_11
2018-07-12 16:19:26 -Generating unique operation named: saveUsingPOST_5
2018-07-12 16:19:26 -Generating unique operation named: updateUsingGET_4
2018-07-12 16:19:26 -Generating unique operation named: updateUsingHEAD_4
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPOST_6
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPUT_4
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPATCH_4
2018-07-12 16:19:26 -Generating unique operation named: updateUsingDELETE_4
2018-07-12 16:19:26 -Generating unique operation named: updateUsingOPTIONS_4
2018-07-12 16:19:26 -Generating unique operation named: updateUsingTRACE_4
2018-07-12 16:19:26 -Generating unique operation named: addUsingGET_6
2018-07-12 16:19:26 -Generating unique operation named: editUsingGET_8
2018-07-12 16:19:26 -Generating unique operation named: listUsingGET_9
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_12
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_13
2018-07-12 16:19:26 -Generating unique operation named: saveUsingPOST_6
2018-07-12 16:19:26 -Generating unique operation named: updateUsingGET_5
2018-07-12 16:19:26 -Generating unique operation named: updateUsingHEAD_5
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPOST_7
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPUT_5
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPATCH_5
2018-07-12 16:19:26 -Generating unique operation named: updateUsingDELETE_5
2018-07-12 16:19:26 -Generating unique operation named: updateUsingOPTIONS_5
2018-07-12 16:19:26 -Generating unique operation named: updateUsingTRACE_5
2018-07-12 16:19:26 -Generating unique operation named: addUsingGET_7
2018-07-12 16:19:26 -Generating unique operation named: batchRemoveUsingPOST_1
2018-07-12 16:19:26 -Generating unique operation named: deployUsingPOST_1
2018-07-12 16:19:26 -Generating unique operation named: listUsingGET_10
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_14
2018-07-12 16:19:26 -Generating unique operation named: addUsingGET_8
2018-07-12 16:19:26 -Generating unique operation named: editUsingGET_9
2018-07-12 16:19:26 -Generating unique operation named: infoUsingGET_1
2018-07-12 16:19:26 -Generating unique operation named: infoUsingHEAD_1
2018-07-12 16:19:26 -Generating unique operation named: infoUsingPOST_1
2018-07-12 16:19:26 -Generating unique operation named: infoUsingPUT_1
2018-07-12 16:19:26 -Generating unique operation named: infoUsingPATCH_1
2018-07-12 16:19:26 -Generating unique operation named: infoUsingDELETE_1
2018-07-12 16:19:26 -Generating unique operation named: infoUsingOPTIONS_1
2018-07-12 16:19:26 -Generating unique operation named: infoUsingTRACE_1
2018-07-12 16:19:26 -Generating unique operation named: listUsingGET_11
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_15
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_16
2018-07-12 16:19:26 -Generating unique operation named: saveUsingPOST_7
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPOST_8
2018-07-12 16:19:26 -Generating unique operation named: addUsingGET_9
2018-07-12 16:19:26 -Generating unique operation named: editUsingGET_10
2018-07-12 16:19:26 -Generating unique operation named: listUsingGET_12
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_17
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_18
2018-07-12 16:19:26 -Generating unique operation named: saveUsingPOST_8
2018-07-12 16:19:26 -Generating unique operation named: updateUsingGET_6
2018-07-12 16:19:26 -Generating unique operation named: updateUsingHEAD_6
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPOST_9
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPUT_6
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPATCH_6
2018-07-12 16:19:26 -Generating unique operation named: updateUsingDELETE_6
2018-07-12 16:19:26 -Generating unique operation named: updateUsingOPTIONS_6
2018-07-12 16:19:26 -Generating unique operation named: updateUsingTRACE_6
2018-07-12 16:19:26 -Generating unique operation named: addUsingGET_10
2018-07-12 16:19:26 -Generating unique operation named: batchDelUsingPOST_1
2018-07-12 16:19:26 -Generating unique operation named: editUsingGET_11
2018-07-12 16:19:26 -Generating unique operation named: listUsingGET_13
2018-07-12 16:19:26 -Generating unique operation named: saveUsingPOST_9
2018-07-12 16:19:26 -Generating unique operation named: saveUsingPOST_10
2018-07-12 16:19:26 -Generating unique operation named: updateUsingPOST_10
2018-07-12 16:19:26 -Generating unique operation named: addUsingGET_11
2018-07-12 16:19:26 -Generating unique operation named: editUsingGET_12
2018-07-12 16:19:26 -Generating unique operation named: listUsingGET_14
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_19
2018-07-12 16:19:26 -Generating unique operation named: removeUsingPOST_20
2018-07-12 16:19:27 -Generating unique operation named: updateUsingGET_7
2018-07-12 16:19:27 -Generating unique operation named: updateUsingHEAD_7
2018-07-12 16:19:27 -Generating unique operation named: updateUsingPOST_11
2018-07-12 16:19:27 -Generating unique operation named: updateUsingPUT_7
2018-07-12 16:19:27 -Generating unique operation named: updateUsingPATCH_7
2018-07-12 16:19:27 -Generating unique operation named: updateUsingDELETE_7
2018-07-12 16:19:27 -Generating unique operation named: updateUsingOPTIONS_7
2018-07-12 16:19:27 -Generating unique operation named: updateUsingTRACE_7
2018-07-12 16:19:27 -Generating unique operation named: listUsingGET_15
2018-07-12 16:19:27 -Generating unique operation named: listUsingHEAD_1
2018-07-12 16:19:27 -Generating unique operation named: listUsingPOST_1
2018-07-12 16:19:27 -Generating unique operation named: listUsingPUT_1
2018-07-12 16:19:27 -Generating unique operation named: listUsingPATCH_1
2018-07-12 16:19:27 -Generating unique operation named: listUsingDELETE_1
2018-07-12 16:19:27 -Generating unique operation named: listUsingOPTIONS_1
2018-07-12 16:19:27 -Generating unique operation named: listUsingTRACE_1
2018-07-12 16:19:27 -Generating unique operation named: listUsingGET_16
2018-07-12 16:19:27 -Generating unique operation named: addUsingGET_12
2018-07-12 16:19:27 -Generating unique operation named: batchDelUsingPOST_2
2018-07-12 16:19:27 -Generating unique operation named: editUsingGET_13
2018-07-12 16:19:27 -Generating unique operation named: listUsingGET_17
2018-07-12 16:19:27 -Generating unique operation named: removeUsingPOST_21
2018-07-12 16:19:27 -Generating unique operation named: saveUsingPOST_11
2018-07-12 16:19:27 -Generating unique operation named: treeUsingGET_3
2018-07-12 16:19:27 -Generating unique operation named: treeViewUsingGET_1
2018-07-12 16:19:27 -Generating unique operation named: updateUsingPOST_12
2018-07-12 16:19:27 -Starting Quartz Scheduler now
2018-07-12 16:19:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-07-12 16:19:27 -Starting...
2018-07-12 16:19:27 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-07-12 16:19:27 -Started.
2018-07-12 16:19:27 -Initializing ProtocolHandler ["http-nio-8088"]
2018-07-12 16:19:27 -Starting ProtocolHandler ["http-nio-8088"]
2018-07-12 16:19:27 -Using a shared selector for servlet write/read
2018-07-12 16:19:27 -Tomcat started on port(s): 8088 (http)
2018-07-12 16:19:27 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-07-12 16:19:27 -==> Parameters: 
2018-07-12 16:19:27 -<==      Total: 1
2018-07-12 16:19:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-07-12 16:19:27 -Started JustdoApplication in 12.979 seconds (JVM running for 13.537)
2018-07-12 16:19:50 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-12 16:19:50 -FrameworkServlet 'dispatcherServlet': initialization started
2018-07-12 16:19:50 -FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2018-07-12 16:19:50 -Enabling session validation scheduler...
2018-07-12 16:19:50 -请求地址 : http://127.0.0.1:8088/index
2018-07-12 16:19:50 -HTTP METHOD : GET
2018-07-12 16:19:50 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.index
2018-07-12 16:19:50 -参数 : [{}]
2018-07-12 16:19:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-07-12 16:19:50 -==> Parameters: 1(Long)
2018-07-12 16:19:50 -<==      Total: 30
2018-07-12 16:19:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-07-12 16:19:50 -==> Parameters: 150(Long)
2018-07-12 16:19:50 -<==      Total: 0
2018-07-12 16:19:50 -耗时 : 32
2018-07-12 16:19:50 -返回值 : index
2018-07-12 16:19:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:19:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.justdo.system.user.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p(String), 127.0.0.1(String), 2018-07-12 16:19:50.587(Timestamp)
2018-07-12 16:19:50 -<==    Updates: 1
2018-07-12 16:19:50 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-12 16:19:50 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-12 16:19:50 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-12 16:19:50 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-12 16:19:50 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-12 16:19:50 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-12 16:19:50 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-12 16:19:50 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:19:50 -HTTP METHOD : GET
2018-07-12 16:19:50 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:19:50 -参数 : []
2018-07-12 16:19:50 -耗时 : 0
2018-07-12 16:19:50 -返回值 : main
2018-07-12 16:19:50 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 16:19:50 -HTTP METHOD : GET
2018-07-12 16:19:50 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 16:19:50 -参数 : []
2018-07-12 16:19:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 16:19:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 16:19:50 -<==      Total: 0
2018-07-12 16:19:50 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 16:19:51 -==> Parameters: 1(Long), 0(String)
2018-07-12 16:19:51 -<==      Total: 1
2018-07-12 16:19:51 -耗时 : 13
2018-07-12 16:19:51 -返回值 : com.justdo.common.utils.PageUtils@501a2d2f
2018-07-12 16:19:51 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:19:51 -HTTP METHOD : GET
2018-07-12 16:19:51 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:19:51 -参数 : []
2018-07-12 16:19:51 -耗时 : 1
2018-07-12 16:19:51 -返回值 : main
2018-07-12 16:19:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:19:53 -请求地址 : http://127.0.0.1:8088/system/dict
2018-07-12 16:19:53 -HTTP METHOD : GET
2018-07-12 16:19:53 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.dict
2018-07-12 16:19:53 -参数 : [{}]
2018-07-12 16:19:53 -耗时 : 0
2018-07-12 16:19:53 -返回值 : system/dict/dict
2018-07-12 16:19:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:19:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:19:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:19:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:19:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:19:53 -请求地址 : http://127.0.0.1:8088/system/dict/type
2018-07-12 16:19:53 -HTTP METHOD : GET
2018-07-12 16:19:53 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.listType
2018-07-12 16:19:53 -参数 : []
2018-07-12 16:19:53 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-07-12 16:19:53 -==> Parameters: 
2018-07-12 16:19:53 -<==      Total: 31
2018-07-12 16:19:53 -耗时 : 9
2018-07-12 16:19:53 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-07-12 16:19:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:19:53 -请求地址 : http://127.0.0.1:8088/system/dict/list
2018-07-12 16:19:53 -HTTP METHOD : GET
2018-07-12 16:19:53 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.list
2018-07-12 16:19:53 -参数 : [{limit=10, offset=0}]
2018-07-12 16:19:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-07-12 16:19:53 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:19:53 -<==      Total: 10
2018-07-12 16:19:53 -==>  Preparing: select count(*) from sys_dict3 
2018-07-12 16:19:53 -==> Parameters: 
2018-07-12 16:19:53 -<==      Total: 1
2018-07-12 16:19:53 -耗时 : 9
2018-07-12 16:19:53 -返回值 : com.justdo.common.utils.PageUtils@bbf54f6
2018-07-12 16:19:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:19:57 -请求地址 : http://127.0.0.1:8088/system/regexp
2018-07-12 16:19:57 -HTTP METHOD : GET
2018-07-12 16:19:57 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.Regexp
2018-07-12 16:19:57 -参数 : []
2018-07-12 16:19:57 -耗时 : 0
2018-07-12 16:19:57 -返回值 : system/regexp/regexp
2018-07-12 16:19:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:19:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:19:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:19:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:19:57 -请求地址 : http://127.0.0.1:8088/system/regexp/list
2018-07-12 16:19:57 -HTTP METHOD : GET
2018-07-12 16:19:57 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.list
2018-07-12 16:19:57 -参数 : [{limit=10, offset=0, rname=}]
2018-07-12 16:19:57 -==>  Preparing: select RID,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from SYS_REGEXP order by RID desc 
2018-07-12 16:19:57 -==> Parameters: 
2018-07-12 16:19:57 -<==      Total: 9
2018-07-12 16:19:57 -==>  Preparing: select count(*) from sys_regexp 
2018-07-12 16:19:57 -==> Parameters: 
2018-07-12 16:19:57 -<==      Total: 1
2018-07-12 16:19:57 -耗时 : 10
2018-07-12 16:19:57 -返回值 : com.justdo.common.utils.PageUtils@5a3b47da
2018-07-12 16:20:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:00 -请求地址 : http://127.0.0.1:8088/system/file
2018-07-12 16:20:00 -HTTP METHOD : GET
2018-07-12 16:20:00 -CLASS_METHOD : com.justdo.system.file.controller.FileController.sysFile
2018-07-12 16:20:00 -参数 : [{}]
2018-07-12 16:20:00 -耗时 : 1
2018-07-12 16:20:00 -返回值 : system/file/file
2018-07-12 16:20:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:00 -请求地址 : http://127.0.0.1:8088/system/file/list
2018-07-12 16:20:00 -HTTP METHOD : GET
2018-07-12 16:20:00 -CLASS_METHOD : com.justdo.system.file.controller.FileController.list
2018-07-12 16:20:00 -参数 : [{limit=12, offset=0, type=}]
2018-07-12 16:20:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-07-12 16:20:00 -==> Parameters: 0(Integer), 12(Integer)
2018-07-12 16:20:00 -<==      Total: 10
2018-07-12 16:20:00 -==>  Preparing: select count(*) from sys_file 
2018-07-12 16:20:00 -==> Parameters: 
2018-07-12 16:20:00 -<==      Total: 1
2018-07-12 16:20:00 -耗时 : 10
2018-07-12 16:20:00 -返回值 : com.justdo.common.utils.PageUtils@4157060
2018-07-12 16:20:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:01 -请求地址 : http://127.0.0.1:8088/system/file/list
2018-07-12 16:20:01 -HTTP METHOD : GET
2018-07-12 16:20:01 -CLASS_METHOD : com.justdo.system.file.controller.FileController.list
2018-07-12 16:20:01 -参数 : [{limit=12, offset=0, type=0}]
2018-07-12 16:20:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file WHERE type = ? order by id desc limit ?, ? 
2018-07-12 16:20:01 -==> Parameters: 0(String), 0(Integer), 12(Integer)
2018-07-12 16:20:01 -<==      Total: 10
2018-07-12 16:20:01 -==>  Preparing: select count(*) from sys_file WHERE type = ? 
2018-07-12 16:20:01 -==> Parameters: 0(String)
2018-07-12 16:20:01 -<==      Total: 1
2018-07-12 16:20:01 -耗时 : 8
2018-07-12 16:20:01 -返回值 : com.justdo.common.utils.PageUtils@91b7dad
2018-07-12 16:20:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:03 -请求地址 : http://127.0.0.1:8088/system/user/
2018-07-12 16:20:03 -HTTP METHOD : GET
2018-07-12 16:20:03 -CLASS_METHOD : com.justdo.system.user.controller.UserController.user
2018-07-12 16:20:03 -参数 : [{}]
2018-07-12 16:20:03 -耗时 : 0
2018-07-12 16:20:03 -返回值 : system/user/user
2018-07-12 16:20:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:03 -请求地址 : http://127.0.0.1:8088/system/dept/tree
2018-07-12 16:20:03 -HTTP METHOD : GET
2018-07-12 16:20:03 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.tree
2018-07-12 16:20:03 -参数 : []
2018-07-12 16:20:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-07-12 16:20:03 -==> Parameters: 
2018-07-12 16:20:03 -<==      Total: 10
2018-07-12 16:20:03 -耗时 : 10
2018-07-12 16:20:03 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"测试二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"测试一部"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"测试部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"销售一部"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"研发二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"研發一部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-07-12 16:20:03 -请求地址 : http://127.0.0.1:8088/system/user/list
2018-07-12 16:20:03 -HTTP METHOD : GET
2018-07-12 16:20:03 -CLASS_METHOD : com.justdo.system.user.controller.UserController.list
2018-07-12 16:20:03 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-07-12 16:20:03 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-07-12 16:20:03 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:20:03 -<==      Total: 10
2018-07-12 16:20:03 -==>  Preparing: select count(*) from sys_user 
2018-07-12 16:20:03 -==> Parameters: 
2018-07-12 16:20:03 -<==      Total: 1
2018-07-12 16:20:03 -耗时 : 16
2018-07-12 16:20:03 -返回值 : com.justdo.common.utils.PageUtils@1a75ec39
2018-07-12 16:20:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:05 -请求地址 : http://127.0.0.1:8088/system/role
2018-07-12 16:20:05 -HTTP METHOD : GET
2018-07-12 16:20:05 -CLASS_METHOD : com.justdo.system.role.controller.RoleController.role
2018-07-12 16:20:05 -参数 : []
2018-07-12 16:20:05 -耗时 : 0
2018-07-12 16:20:05 -返回值 : system/role/role
2018-07-12 16:20:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:05 -请求地址 : http://127.0.0.1:8088/system/role/list
2018-07-12 16:20:05 -HTTP METHOD : GET
2018-07-12 16:20:05 -CLASS_METHOD : com.justdo.system.role.controller.RoleController.list
2018-07-12 16:20:05 -参数 : []
2018-07-12 16:20:05 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-07-12 16:20:05 -==> Parameters: 
2018-07-12 16:20:05 -<==      Total: 2
2018-07-12 16:20:05 -耗时 : 4
2018-07-12 16:20:05 -返回值 : [RoleDO{roleId=59, roleName='普通用户', roleSign='null', remark='基本用户权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-07-12 16:20:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:08 -请求地址 : http://127.0.0.1:8088/system/organ
2018-07-12 16:20:08 -HTTP METHOD : GET
2018-07-12 16:20:08 -CLASS_METHOD : com.justdo.system.organ.controller.OrganController.Organ
2018-07-12 16:20:08 -参数 : []
2018-07-12 16:20:08 -耗时 : 0
2018-07-12 16:20:08 -返回值 : system/organ/organ
2018-07-12 16:20:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:08 -请求地址 : http://127.0.0.1:8088/system/organ/list
2018-07-12 16:20:08 -HTTP METHOD : GET
2018-07-12 16:20:08 -CLASS_METHOD : com.justdo.system.organ.controller.OrganController.list
2018-07-12 16:20:08 -参数 : [{limit=10, offset=0}]
2018-07-12 16:20:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:20:08 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8088/system/organ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list(String), null, 2018-07-12 16:20:08.184(Timestamp)
2018-07-12 16:20:08 -<==    Updates: 1
2018-07-12 16:20:08 -Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy126.list(Unknown Source)
	at com.justdo.system.organ.service.impl.OrganServiceImpl.list(OrganServiceImpl.java:27)
	at com.justdo.system.organ.controller.OrganController.list(OrganController.java:49)
	at com.justdo.system.organ.controller.OrganController$$FastClassBySpringCGLIB$$ade438d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.justdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.justdo.system.organ.controller.OrganController$$EnhancerBySpringCGLIB$$45dccb35.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-12 16:20:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:18 -请求地址 : http://127.0.0.1:8088/system/menu/
2018-07-12 16:20:18 -HTTP METHOD : GET
2018-07-12 16:20:18 -CLASS_METHOD : com.justdo.system.menu.controller.MenuController.menu
2018-07-12 16:20:18 -参数 : [{}]
2018-07-12 16:20:18 -耗时 : 1
2018-07-12 16:20:18 -返回值 : system/menu/menu
2018-07-12 16:20:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:18 -请求地址 : http://127.0.0.1:8088/system/menu/list
2018-07-12 16:20:18 -HTTP METHOD : GET
2018-07-12 16:20:18 -CLASS_METHOD : com.justdo.system.menu.controller.MenuController.list
2018-07-12 16:20:18 -参数 : [{sort=order_num}]
2018-07-12 16:20:18 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-07-12 16:20:18 -==> Parameters: 
2018-07-12 16:20:18 -<==      Total: 72
2018-07-12 16:20:18 -耗时 : 14
2018-07-12 16:20:18 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:del', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:del', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='system/notice', perms='system:notice:notice', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='system/notice/del', perms='system:notice:del', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='system/notice/batchDel', perms='system:notice:batchDel', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='system/notice/selfnotice', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:del', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='system:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:del', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchDel', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:del', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='system/notice/add', perms='system:notice:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=3, name='机构管理', url='system/organ', perms='system:organ:organ', type=1, icon='fa fa-sitemap', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/del', perms='system:dept:del', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='system/notice/edit', perms='system:notice:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=109, name='添加', url='system/organ/add', perms='system:organ:add', type=2, icon='fa fa-plus', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=109, name='修改', url='system/organ/edit', perms='system:organ:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/del', perms='system:dict:del', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/del', perms='system:regexp:del', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=109, name='删除', url='system/organ/del', perms='system:organ:del', type=2, icon='fa fa-trash-o', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchDel', perms='system:dict:batchDel', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=109, name='批量删除', url='system/organ/batchDel', perms='system:organ:batchDel', type=2, icon='fa fa-close', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=105, name='批量删除', url='system/regexp/batchDel', perms='system:regexp:batchDel', type=2, icon='fa fa-close', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-07-12 16:20:22 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:22 -请求地址 : http://127.0.0.1:8088/system/dept
2018-07-12 16:20:22 -HTTP METHOD : GET
2018-07-12 16:20:22 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.dept
2018-07-12 16:20:22 -参数 : []
2018-07-12 16:20:22 -耗时 : 0
2018-07-12 16:20:22 -返回值 : system/dept/dept
2018-07-12 16:20:22 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:22 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:22 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:22 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:22 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:22 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:22 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:22 -请求地址 : http://127.0.0.1:8088/system/dept/list
2018-07-12 16:20:22 -HTTP METHOD : GET
2018-07-12 16:20:22 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.list
2018-07-12 16:20:22 -参数 : []
2018-07-12 16:20:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-07-12 16:20:22 -==> Parameters: 
2018-07-12 16:20:22 -<==      Total: 10
2018-07-12 16:20:22 -耗时 : 3
2018-07-12 16:20:22 -返回值 : [DeptDO{deptId=15, parentId=13, name='测试二部', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='测试一部', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='测试部', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='产品部', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='销售一部', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='销售部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='研发二部', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='研發一部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='研发部', orderNum=1, delFlag=1}]
2018-07-12 16:20:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 4, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 7]
2018-07-12 16:20:27 -请求地址 : http://127.0.0.1:8088/system/generator
2018-07-12 16:20:27 -HTTP METHOD : GET
2018-07-12 16:20:27 -CLASS_METHOD : com.justdo.system.generator.controller.GeneratorController.generator
2018-07-12 16:20:27 -参数 : []
2018-07-12 16:20:27 -耗时 : 1
2018-07-12 16:20:27 -返回值 : system/generator/list
2018-07-12 16:20:27 -请求地址 : http://127.0.0.1:8088/system/generator/list
2018-07-12 16:20:27 -HTTP METHOD : GET
2018-07-12 16:20:27 -CLASS_METHOD : com.justdo.system.generator.controller.GeneratorController.list
2018-07-12 16:20:27 -参数 : []
2018-07-12 16:20:27 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2018-07-12 16:20:27 -==> Parameters: 
2018-07-12 16:20:27 -<==      Total: 47
2018-07-12 16:20:27 -耗时 : 9
2018-07-12 16:20:27 -返回值 : [{engine=InnoDB, createTime=2018-07-06 10:02:41.0, tableComment=, tableName=APPLICANT_DETAIL}, {engine=InnoDB, createTime=2018-07-05 16:40:05.0, tableComment=申请基本信息, tableName=APPLICATION}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=数据库字典的索引表, tableName=SYS_DICT}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=数据字典的内容, tableName=SYS_DICT_CONTENT}, {engine=InnoDB, createTime=2018-07-08 21:15:38.0, tableComment=机构, tableName=SYS_ORGAN}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=系统正则表达式, tableName=SYS_REGEXP}, {engine=InnoDB, createTime=2018-07-05 16:39:42.0, tableComment=机动车详情, tableName=VEHICLE_DETAIL}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_evt_log}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_ge_bytearray}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_ge_property}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_actinst}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_attachment}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_comment}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_detail}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_identitylink}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_procinst}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_taskinst}, {engine=InnoDB, createTime=2018-07-04 16:34:13.0, tableComment=, tableName=act_hi_varinst}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_id_group}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_id_info}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_id_membership}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_id_user}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_procdef_info}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_re_deployment}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_re_model}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_re_procdef}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_ru_event_subscr}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_ru_execution}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_ru_identitylink}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_ru_job}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_ru_task}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=act_ru_variable}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=文章内容, tableName=blog_content}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=通知通告, tableName=oa_notice}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=通知通告发送记录, tableName=oa_notice_record}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=审批流程测试表, tableName=salary}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=部门管理, tableName=sys_dept}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=字典表, tableName=sys_dict3}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=文件上传, tableName=sys_file}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=系统日志, tableName=sys_log}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=菜单管理, tableName=sys_menu}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=角色, tableName=sys_role}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=角色与菜单对应关系, tableName=sys_role_menu}, {engine=MyISAM, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=sys_task}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=, tableName=sys_user_plus}, {engine=InnoDB, createTime=2018-07-04 16:34:14.0, tableComment=用户与角色对应关系, tableName=sys_user_role}]
2018-07-12 16:20:29 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:29 -请求地址 : http://127.0.0.1:8088/system/quartzjob
2018-07-12 16:20:29 -HTTP METHOD : GET
2018-07-12 16:20:29 -CLASS_METHOD : com.justdo.system.quartzjob.controller.QuartzJobController.QuartzJobController
2018-07-12 16:20:29 -参数 : []
2018-07-12 16:20:29 -耗时 : 0
2018-07-12 16:20:29 -返回值 : system/quartzjob/quartzjob
2018-07-12 16:20:29 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:29 -请求地址 : http://127.0.0.1:8088/system/quartzjob/list
2018-07-12 16:20:29 -HTTP METHOD : GET
2018-07-12 16:20:29 -CLASS_METHOD : com.justdo.system.quartzjob.controller.QuartzJobController.list
2018-07-12 16:20:29 -参数 : [{limit=10, offset=0}]
2018-07-12 16:20:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc limit ?, ? 
2018-07-12 16:20:29 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:20:29 -<==      Total: 1
2018-07-12 16:20:29 -==>  Preparing: select count(*) from sys_task 
2018-07-12 16:20:29 -==> Parameters: 
2018-07-12 16:20:29 -<==      Total: 1
2018-07-12 16:20:29 -耗时 : 7
2018-07-12 16:20:29 -返回值 : com.justdo.common.utils.PageUtils@1b1cf8e7
2018-07-12 16:20:32 -请求地址 : http://127.0.0.1:8088/system/online
2018-07-12 16:20:32 -HTTP METHOD : GET
2018-07-12 16:20:32 -CLASS_METHOD : com.justdo.system.user.controller.SessionController.online
2018-07-12 16:20:32 -参数 : []
2018-07-12 16:20:32 -耗时 : 3
2018-07-12 16:20:32 -返回值 : system/online/online
2018-07-12 16:20:32 -请求地址 : http://127.0.0.1:8088/system/online/list
2018-07-12 16:20:32 -HTTP METHOD : GET
2018-07-12 16:20:32 -CLASS_METHOD : com.justdo.system.user.controller.SessionController.list
2018-07-12 16:20:32 -参数 : []
2018-07-12 16:20:32 -耗时 : 3
2018-07-12 16:20:32 -返回值 : [com.justdo.system.user.domain.UserOnline@5cf6ba06, com.justdo.system.user.domain.UserOnline@31848e61]
2018-07-12 16:20:34 -请求地址 : http://127.0.0.1:8088/system/log
2018-07-12 16:20:34 -HTTP METHOD : GET
2018-07-12 16:20:34 -CLASS_METHOD : com.justdo.system.log.controller.LogController.log
2018-07-12 16:20:34 -参数 : []
2018-07-12 16:20:34 -耗时 : 1
2018-07-12 16:20:34 -返回值 : system/log/log
2018-07-12 16:20:35 -请求地址 : http://127.0.0.1:8088/system/log/list
2018-07-12 16:20:35 -HTTP METHOD : GET
2018-07-12 16:20:35 -CLASS_METHOD : com.justdo.system.log.controller.LogController.list
2018-07-12 16:20:35 -参数 : [{limit=10, offset=0, sort=gmt_create, order=desc, operation=, username=}]
2018-07-12 16:20:35 -==>  Preparing: select count(*) from sys_log 
2018-07-12 16:20:35 -==> Parameters: 
2018-07-12 16:20:35 -<==      Total: 1
2018-07-12 16:20:35 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log order by gmt_create desc limit ?, ? 
2018-07-12 16:20:35 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:20:35 -<==      Total: 10
2018-07-12 16:20:35 -耗时 : 10
2018-07-12 16:20:35 -返回值 : PageDO{offset=0, limit=10, total=747, params={}, param='', rows=[LogDO{id=1356, userId=1, username='admin', operation='error', time=null, method='http://127.0.0.1:8088/system/organ/list', params='org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list', ip='null', gmtCreate=Thu Jul 12 16:20:08 CST 2018}, LogDO{id=1355, userId=1, username='admin', operation='请求访问主页', time=32, method='com.justdo.system.user.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p', ip='127.0.0.1', gmtCreate=Thu Jul 12 16:19:51 CST 2018}, LogDO{id=1354, userId=1, username='admin', operation='error', time=null, method='http://127.0.0.1:8088/system/organ/list', params='org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list', ip='null', gmtCreate=Thu Jul 12 16:01:22 CST 2018}, LogDO{id=1352, userId=1, username='admin', operation='登录', time=9, method='com.justdo.system.user.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Thu Jul 12 16:01:10 CST 2018}, LogDO{id=1353, userId=1, username='admin', operation='请求访问主页', time=9, method='com.justdo.system.user.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p', ip='127.0.0.1', gmtCreate=Thu Jul 12 16:01:10 CST 2018}, LogDO{id=1351, userId=1, username='admin', operation='请求访问主页', time=10, method='com.justdo.system.user.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p', ip='127.0.0.1', gmtCreate=Thu Jul 12 16:00:48 CST 2018}, LogDO{id=1350, userId=1, username='admin', operation='error', time=null, method='http://127.0.0.1:8088/system/organ/list', params='org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list', ip='null', gmtCreate=Thu Jul 12 16:00:28 CST 2018}, LogDO{id=1349, userId=1, username='admin', operation='请求访问主页', time=36, method='com.justdo.system.user.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p', ip='127.0.0.1', gmtCreate=Thu Jul 12 16:00:11 CST 2018}, LogDO{id=1348, userId=1, username='admin', operation='请求访问主页', time=15, method='com.justdo.system.user.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p', ip='127.0.0.1', gmtCreate=Thu Jul 12 15:55:41 CST 2018}, LogDO{id=1347, userId=1, username='admin', operation='请求访问主页', time=36, method='com.justdo.system.user.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p', ip='127.0.0.1', gmtCreate=Thu Jul 12 15:55:18 CST 2018}]}
2018-07-12 16:20:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:43 -请求地址 : http://127.0.0.1:8088/system/notice
2018-07-12 16:20:43 -HTTP METHOD : GET
2018-07-12 16:20:43 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.Notice
2018-07-12 16:20:43 -参数 : []
2018-07-12 16:20:43 -耗时 : 1
2018-07-12 16:20:43 -返回值 : system/notice/notice
2018-07-12 16:20:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:43 -请求地址 : http://127.0.0.1:8088/system/notice/list
2018-07-12 16:20:43 -HTTP METHOD : GET
2018-07-12 16:20:43 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.list
2018-07-12 16:20:43 -参数 : [{limit=10, offset=0}]
2018-07-12 16:20:43 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice order by id desc limit ?, ? 
2018-07-12 16:20:43 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:20:43 -<==      Total: 5
2018-07-12 16:20:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-07-12 16:20:43 -==> Parameters: 1(String), notice_type(String)
2018-07-12 16:20:43 -<==      Total: 1
2018-07-12 16:20:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-07-12 16:20:43 -==> Parameters: 3(String), notice_type(String)
2018-07-12 16:20:43 -<==      Total: 1
2018-07-12 16:20:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-07-12 16:20:43 -==> Parameters: 3(String), notice_type(String)
2018-07-12 16:20:43 -<==      Total: 1
2018-07-12 16:20:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-07-12 16:20:43 -==> Parameters: 3(String), notice_type(String)
2018-07-12 16:20:43 -<==      Total: 1
2018-07-12 16:20:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-07-12 16:20:43 -==> Parameters: 3(String), notice_type(String)
2018-07-12 16:20:43 -<==      Total: 1
2018-07-12 16:20:43 -==>  Preparing: select count(*) from oa_notice 
2018-07-12 16:20:43 -==> Parameters: 
2018-07-12 16:20:43 -<==      Total: 1
2018-07-12 16:20:43 -耗时 : 20
2018-07-12 16:20:43 -返回值 : com.justdo.common.utils.PageUtils@33e6034d
2018-07-12 16:20:45 -请求地址 : http://127.0.0.1:8088/system/notice/selfnotice
2018-07-12 16:20:45 -HTTP METHOD : GET
2018-07-12 16:20:45 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.selefNotice
2018-07-12 16:20:45 -参数 : []
2018-07-12 16:20:45 -耗时 : 0
2018-07-12 16:20:45 -返回值 : system/notice/selfnotice
2018-07-12 16:20:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:48 -请求地址 : http://127.0.0.1:8088/blog/bContent/add
2018-07-12 16:20:48 -HTTP METHOD : GET
2018-07-12 16:20:48 -CLASS_METHOD : com.justdo.blog.controller.ContentController.add
2018-07-12 16:20:48 -参数 : []
2018-07-12 16:20:48 -耗时 : 0
2018-07-12 16:20:48 -返回值 : blog/bContent/add
2018-07-12 16:20:49 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:49 -请求地址 : http://127.0.0.1:8088/blog/bContent
2018-07-12 16:20:49 -HTTP METHOD : GET
2018-07-12 16:20:49 -CLASS_METHOD : com.justdo.blog.controller.ContentController.bContent
2018-07-12 16:20:49 -参数 : []
2018-07-12 16:20:49 -耗时 : 0
2018-07-12 16:20:49 -返回值 : blog/bContent/bContent
2018-07-12 16:20:49 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:49 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:49 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:49 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:49 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:20:49 -请求地址 : http://127.0.0.1:8088/blog/bContent/list
2018-07-12 16:20:49 -HTTP METHOD : GET
2018-07-12 16:20:49 -CLASS_METHOD : com.justdo.blog.controller.ContentController.list
2018-07-12 16:20:49 -参数 : [{limit=10, offset=0}]
2018-07-12 16:20:49 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content order by cid desc limit 0, 10 
2018-07-12 16:20:49 -==> Parameters: 
2018-07-12 16:20:49 -<==      Total: 10
2018-07-12 16:20:49 -==>  Preparing: select count(*) from blog_content 
2018-07-12 16:20:49 -==> Parameters: 
2018-07-12 16:20:49 -<==      Total: 1
2018-07-12 16:20:49 -耗时 : 19
2018-07-12 16:20:49 -返回值 : com.justdo.common.utils.PageUtils@b55cb4a
2018-07-12 16:21:06 -请求地址 : http://127.0.0.1:8088/activiti/process
2018-07-12 16:21:06 -HTTP METHOD : GET
2018-07-12 16:21:06 -CLASS_METHOD : com.justdo.activiti.controller.ProcessController.process
2018-07-12 16:21:06 -参数 : []
2018-07-12 16:21:06 -耗时 : 1
2018-07-12 16:21:06 -返回值 : ModelAndView: reference to view with name 'act/process/process'; model is null
2018-07-12 16:21:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:21:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:21:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:21:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:21:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:21:06 -请求地址 : http://127.0.0.1:8088/activiti/process/list
2018-07-12 16:21:06 -HTTP METHOD : GET
2018-07-12 16:21:06 -CLASS_METHOD : com.justdo.activiti.controller.ProcessController.list
2018-07-12 16:21:06 -参数 : [0, 10]
2018-07-12 16:21:06 -耗时 : 17
2018-07-12 16:21:06 -返回值 : com.justdo.common.utils.PageUtils@407fb274
2018-07-12 16:21:07 -请求地址 : http://127.0.0.1:8088/activiti/task/todo
2018-07-12 16:21:07 -HTTP METHOD : GET
2018-07-12 16:21:07 -CLASS_METHOD : com.justdo.activiti.controller.TaskController.todo
2018-07-12 16:21:07 -参数 : []
2018-07-12 16:21:07 -耗时 : 0
2018-07-12 16:21:07 -返回值 : ModelAndView: reference to view with name 'act/task/todoTask'; model is null
2018-07-12 16:21:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:21:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:21:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:21:07 -请求地址 : http://127.0.0.1:8088/activiti/task/todoList
2018-07-12 16:21:07 -HTTP METHOD : GET
2018-07-12 16:21:07 -CLASS_METHOD : com.justdo.activiti.controller.TaskController.todoList
2018-07-12 16:21:07 -参数 : []
2018-07-12 16:21:07 -请求地址 : http://127.0.0.1:8088/activiti/task/gotoList
2018-07-12 16:21:07 -HTTP METHOD : GET
2018-07-12 16:21:07 -CLASS_METHOD : com.justdo.activiti.controller.TaskController.list
2018-07-12 16:21:07 -参数 : [0, 10]
2018-07-12 16:21:07 -耗时 : 10
2018-07-12 16:21:07 -返回值 : com.justdo.common.utils.PageUtils@5ad3e6d0
2018-07-12 16:21:07 -耗时 : 25
2018-07-12 16:21:07 -返回值 : []
2018-07-12 16:21:08 -请求地址 : http://127.0.0.1:8088/activiti/model
2018-07-12 16:21:08 -HTTP METHOD : GET
2018-07-12 16:21:08 -CLASS_METHOD : com.justdo.activiti.controller.ModelController.model
2018-07-12 16:21:08 -参数 : []
2018-07-12 16:21:08 -耗时 : 0
2018-07-12 16:21:08 -返回值 : ModelAndView: reference to view with name 'act/model/model'; model is null
2018-07-12 16:21:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:21:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:21:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:21:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:21:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:21:08 -请求地址 : http://127.0.0.1:8088/activiti/model/list
2018-07-12 16:21:08 -HTTP METHOD : GET
2018-07-12 16:21:08 -CLASS_METHOD : com.justdo.activiti.controller.ModelController.list
2018-07-12 16:21:08 -参数 : [0, 10]
2018-07-12 16:21:08 -耗时 : 8
2018-07-12 16:21:08 -返回值 : com.justdo.common.utils.PageUtils@339ac463
2018-07-12 16:23:10 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:19:15 CST 2018]; root of context hierarchy
2018-07-12 16:23:10 -Stopping beans in phase 2147483647
2018-07-12 16:23:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-07-12 16:23:10 -Stopping...
2018-07-12 16:23:10 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-07-12 16:23:10 -Stopped.
2018-07-12 16:23:10 -Unregistering JMX-exposed beans on shutdown
2018-07-12 16:23:10 -Unregistering JMX-exposed beans
2018-07-12 16:23:10 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-07-12 16:23:10 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-07-12 16:23:10 -清除SpringContextHolder中的ApplicationContext:org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:19:15 CST 2018]; root of context hierarchy
2018-07-12 16:23:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-07-12 16:23:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-07-12 16:23:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-07-12 16:23:10 -Shutting down Quartz Scheduler
2018-07-12 16:23:10 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-07-12 16:23:10 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-07-12 16:23:10 -{dataSource-1} closed
2018-07-12 16:23:10 -Disabled session validation scheduler.
2018-07-12 16:23:14 -Starting JustdoApplication on localhost with PID 1188 (/Users/chenlin/Documents/GitHub/JustDo-boot/target/classes started by chenlin in /Users/chenlin/Documents/GitHub/JustDo-boot)
2018-07-12 16:23:14 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-07-12 16:23:14 -The following profiles are active: dev
2018-07-12 16:23:15 -HV000001: Hibernate Validator 5.3.6.Final
2018-07-12 16:23:15 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:23:15 CST 2018]; root of context hierarchy
2018-07-12 16:23:16 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-12 16:23:16 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a746e87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:23:16 -Bean 'shiroConfig' of type [com.justdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$36d00968] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:23:17 -Bean 'userRealm' of type [com.justdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:23:17 -Bean 'redisManager' of type [com.justdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:23:17 -获取名称为: com.justdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-07-12 16:23:17 -Bean 'redisSessionDAO' of type [com.justdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:23:17 -Bean 'sessionDAO' of type [com.justdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:23:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:23:17 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:23:17 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:23:17 -Tomcat initialized with port(s): 8088 (http)
2018-07-12 16:23:17 -Starting service [Tomcat]
2018-07-12 16:23:17 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-07-12 16:23:17 -Initializing Spring embedded WebApplicationContext
2018-07-12 16:23:17 -Root WebApplicationContext: initialization completed in 2538 ms
2018-07-12 16:23:18 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-12 16:23:18 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-12 16:23:18 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-12 16:23:18 -Mapping filter: 'requestContextFilter' to: [/*]
2018-07-12 16:23:18 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-12 16:23:18 -Filter xssFilter was not registered (disabled)
2018-07-12 16:23:18 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-07-12 16:23:18 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-07-12 16:23:18 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-07-12 16:23:18 -Mapping servlet: 'dispatcherServlet' to [/]
2018-07-12 16:23:18 -{dataSource-1} inited
2018-07-12 16:23:19 -ProcessEngine default created
2018-07-12 16:23:20 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:23:15 CST 2018]; root of context hierarchy
2018-07-12 16:23:20 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-07-12 16:23:20 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-07-12 16:23:20 -Using default implementation for ThreadExecutor
2018-07-12 16:23:20 -Job execution threads will use class loader of thread: main
2018-07-12 16:23:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-12 16:23:20 -Quartz Scheduler v.2.2.1 created.
2018-07-12 16:23:20 -RAMJobStore initialized.
2018-07-12 16:23:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-07-12 16:23:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-07-12 16:23:20 -Quartz scheduler version: 2.2.1
2018-07-12 16:23:20 -JobFactory set to: com.justdo.common.quartz.factory.JobFactory@4c9d833
2018-07-12 16:23:21 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.remove(java.lang.String)
2018-07-12 16:23:21 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.ModelController.list(int,int)
2018-07-12 16:23:21 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ModelController.model()
2018-07-12 16:23:21 -Mapped "{[/activiti/model/add]}" onto public void com.justdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-07-12 16:23:21 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.justdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-07-12 16:23:21 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.justdo.activiti.controller.ModelController.getStencilset()
2018-07-12 16:23:21 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.justdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-12 16:23:21 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-07-12 16:23:21 -Mapped "{[/activiti/model/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.batchDel(java.lang.String[])
2018-07-12 16:23:21 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.justdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-12 16:23:21 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.justdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-07-12 16:23:21 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ProcessController.add()
2018-07-12 16:23:21 -Mapped "{[/activiti/process/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-07-12 16:23:21 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.ProcessController.list(int,int)
2018-07-12 16:23:21 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ProcessController.process()
2018-07-12 16:23:21 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-07-12 16:23:21 -Mapped "{[/activiti/process/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.batchDel(java.lang.String[])
2018-07-12 16:23:21 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-07-12 16:23:21 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.justdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-12 16:23:21 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.add()
2018-07-12 16:23:21 -Mapped "{[/act/salary/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-07-12 16:23:21 -Mapped "{[/act/salary/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-07-12 16:23:21 -Mapped "{[/act/salary/update]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.update(com.justdo.activiti.domain.SalaryDO)
2018-07-12 16:23:21 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:21 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.Salary()
2018-07-12 16:23:22 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.saveOrUpdate(com.justdo.activiti.domain.SalaryDO)
2018-07-12 16:23:22 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.justdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-12 16:23:22 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.TaskController.list(int,int)
2018-07-12 16:23:22 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.TaskController.gotoTask()
2018-07-12 16:23:22 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.justdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-12 16:23:22 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.TaskController.todo()
2018-07-12 16:23:22 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.justdo.activiti.vo.TaskVO> com.justdo.activiti.controller.TaskController.todoList()
2018-07-12 16:23:22 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.justdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-12 16:23:22 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:22 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.blog()
2018-07-12 16:23:22 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.add()
2018-07-12 16:23:22 -Mapped "{[/blog/bContent/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.remove(java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/blog/bContent/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-07-12 16:23:22 -Mapped "{[/blog/bContent/update]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.update(com.justdo.blog.domain.ContentDO)
2018-07-12 16:23:22 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:22 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.save(com.justdo.blog.domain.ContentDO)
2018-07-12 16:23:22 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.bContent()
2018-07-12 16:23:22 -Mapped "{[/error]}" onto public com.justdo.common.utils.R com.justdo.common.exception.HandleErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-12 16:23:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.common.exception.HandleErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-12 16:23:22 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/dept/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/system/dept/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-07-12 16:23:22 -Mapped "{[/system/dept/update]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.update(com.justdo.system.dept.domain.DeptDO)
2018-07-12 16:23:22 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.justdo.system.dept.domain.DeptDO> com.justdo.system.dept.controller.DeptController.list()
2018-07-12 16:23:22 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.save(com.justdo.system.dept.domain.DeptDO)
2018-07-12 16:23:22 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.justdo.common.domain.Tree<com.justdo.system.dept.domain.DeptDO> com.justdo.system.dept.controller.DeptController.tree()
2018-07-12 16:23:22 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.dept()
2018-07-12 16:23:22 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.treeView()
2018-07-12 16:23:22 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.add()
2018-07-12 16:23:22 -Mapped "{[/system/dict/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-07-12 16:23:22 -Mapped "{[/system/dict/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/system/dict/update]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.update(com.justdo.system.dict.domain.DictDO)
2018-07-12 16:23:22 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:22 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.save(com.justdo.system.dict.domain.DictDO)
2018-07-12 16:23:22 -Mapped "{[/system/dict/view/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.view(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.justdo.system.dict.domain.DictDO> com.justdo.system.dict.controller.DictController.listType()
2018-07-12 16:23:22 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.dict(org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-07-12 16:23:22 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.justdo.system.dict.domain.DictDO> com.justdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-07-12 16:23:22 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.justdo.system.dicttype.domain.DictTypeDO> com.justdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-07-12 16:23:22 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.adddict()
2018-07-12 16:23:22 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.savetype(com.justdo.system.dicttype.domain.DictTypeDO)
2018-07-12 16:23:22 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.add()
2018-07-12 16:23:22 -Mapped "{[/system/file/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-07-12 16:23:22 -Mapped "{[/system/file/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-07-12 16:23:22 -Mapped "{[/system/file/update]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.update(com.justdo.system.file.domain.FileDO)
2018-07-12 16:23:22 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:22 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.save(com.justdo.system.file.domain.FileDO)
2018-07-12 16:23:22 -Mapped "{[/system/file/info/{id}]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.info(java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-07-12 16:23:22 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:22 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.justdo.system.generator.controller.GeneratorController.list()
2018-07-12 16:23:22 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.justdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-07-12 16:23:22 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.justdo.system.generator.controller.GeneratorController.generator()
2018-07-12 16:23:22 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.justdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/generator/batchCode]}" onto public void com.justdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-07-12 16:23:22 -Mapped "{[/system/log/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.log.controller.LogController.remove(java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.justdo.system.log.controller.LogController.log()
2018-07-12 16:23:22 -Mapped "{[/system/log/list],methods=[GET]}" onto com.justdo.common.domain.PageDO<com.justdo.system.log.domain.LogDO> com.justdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:22 -Mapped "{[/system/log/batchDel],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.log.controller.LogController.batchDel(java.lang.Long[])
2018-07-12 16:23:22 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/system/menu/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.update(com.justdo.system.menu.domain.MenuDO)
2018-07-12 16:23:22 -Mapped "{[/system/menu/list]}" onto java.util.List<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:22 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.save(com.justdo.system.menu.domain.MenuDO)
2018-07-12 16:23:22 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.justdo.common.domain.Tree<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.justdo.common.domain.Tree<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.tree()
2018-07-12 16:23:22 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/notice/add],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.add()
2018-07-12 16:23:22 -Mapped "{[/system/notice/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.remove(java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/system/notice/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.remove(java.lang.Long[])
2018-07-12 16:23:22 -Mapped "{[/system/notice/update]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.update(com.justdo.system.notice.domain.NoticeDO)
2018-07-12 16:23:22 -Mapped "{[/system/notice/read/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.read(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/notice/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:22 -Mapped "{[/system/notice/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.save(com.justdo.system.notice.domain.NoticeDO)
2018-07-12 16:23:22 -Mapped "{[/system/notice/message],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.message()
2018-07-12 16:23:22 -Mapped "{[/system/notice/selflist],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:22 -Mapped "{[/system/notice/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/notice],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.Notice()
2018-07-12 16:23:22 -Mapped "{[/system/notice/selfnotice],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.selefNotice()
2018-07-12 16:23:22 -Mapped "{[/system/organ/add],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.add()
2018-07-12 16:23:22 -Mapped "{[/system/organ/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.remove(java.lang.String)
2018-07-12 16:23:22 -Mapped "{[/system/organ/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.remove(java.lang.String[])
2018-07-12 16:23:22 -Mapped "{[/system/organ/update]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.update(com.justdo.system.organ.domain.OrganDO)
2018-07-12 16:23:22 -Mapped "{[/system/organ/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.organ.controller.OrganController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:22 -Mapped "{[/system/organ/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.save(com.justdo.system.organ.domain.OrganDO)
2018-07-12 16:23:22 -Mapped "{[/system/organ/edit/{organid}],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/organ],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.Organ()
2018-07-12 16:23:22 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.add()
2018-07-12 16:23:22 -Mapped "{[/system/quartzjob/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/system/quartzjob/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-07-12 16:23:22 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.update(com.justdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-07-12 16:23:22 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:22 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.save(com.justdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-07-12 16:23:22 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-07-12 16:23:22 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-07-12 16:23:22 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.add()
2018-07-12 16:23:22 -Mapped "{[/system/regexp/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-07-12 16:23:22 -Mapped "{[/system/regexp/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-07-12 16:23:22 -Mapped "{[/system/regexp/update]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.update(com.justdo.system.regexp.domain.RegexpDO)
2018-07-12 16:23:22 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:22 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.save(com.justdo.system.regexp.domain.RegexpDO)
2018-07-12 16:23:22 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.Regexp()
2018-07-12 16:23:22 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.add()
2018-07-12 16:23:22 -Mapped "{[/system/role/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.update(com.justdo.system.role.domain.RoleDO)
2018-07-12 16:23:22 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.justdo.system.role.domain.RoleDO> com.justdo.system.role.controller.RoleController.list()
2018-07-12 16:23:22 -Mapped "{[/system/role/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.save(com.justdo.system.role.domain.RoleDO)
2018-07-12 16:23:22 -Mapped "{[/system/role/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.save(java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.role()
2018-07-12 16:23:22 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/role/batchDel],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.batchDel(java.lang.Long[])
2018-07-12 16:23:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.main()
2018-07-12 16:23:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.login(org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.logout()
2018-07-12 16:23:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/login],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-07-12 16:23:22 -Mapped "{[/system/online/list]}" onto public java.util.List<com.justdo.system.user.domain.UserOnline> com.justdo.system.user.controller.SessionController.list()
2018-07-12 16:23:22 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.justdo.system.user.controller.SessionController.online()
2018-07-12 16:23:22 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.justdo.common.utils.R com.justdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-07-12 16:23:22 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.justdo.system.user.controller.SessionController.sessionList()
2018-07-12 16:23:22 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.justdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:22 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/user/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.remove(java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/system/user/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.update(com.justdo.system.user.domain.UserDO)
2018-07-12 16:23:22 -Mapped "{[/system/user/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:23:22 -Mapped "{[/system/user/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.save(com.justdo.system.user.domain.UserDO)
2018-07-12 16:23:22 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.justdo.common.domain.Tree<com.justdo.system.dept.domain.DeptDO> com.justdo.system.user.controller.UserController.tree()
2018-07-12 16:23:22 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:23:22 -Mapped "{[/system/user/batchDel],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.batchDel(java.lang.Long[])
2018-07-12 16:23:22 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.resetPwd(com.justdo.system.user.domain.UserVO)
2018-07-12 16:23:22 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:23:22 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.updatePeronal(com.justdo.system.user.domain.UserDO)
2018-07-12 16:23:22 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.adminResetPwd(com.justdo.system.user.domain.UserVO)
2018-07-12 16:23:22 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-07-12 16:23:22 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.treeView()
2018-07-12 16:23:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-07-12 16:23:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-07-12 16:23:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-07-12 16:23:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-07-12 16:23:22 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-07-12 16:23:22 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-07-12 16:23:22 -Initializing ExecutorService  'brokerChannelExecutor'
2018-07-12 16:23:23 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:23:15 CST 2018]; root of context hierarchy
2018-07-12 16:23:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:23:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:23:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:23:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-07-12 16:23:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:23:24 -

Using default security password: 64944d9f-8ff9-42dc-86fe-720eb9135a41

2018-07-12 16:23:24 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-07-12 16:23:24 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@3b7b099b, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5abc488d, org.springframework.security.web.context.SecurityContextPersistenceFilter@30b29f55, org.springframework.security.web.header.HeaderWriterFilter@524418a2, org.springframework.security.web.csrf.CsrfFilter@4e93d23e, org.springframework.security.web.authentication.logout.LogoutFilter@401d83ce, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@550e7ef6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@73072745, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30d944d8, org.springframework.security.web.session.SessionManagementFilter@399a5a52, org.springframework.security.web.access.ExceptionTranslationFilter@3b7dd173]
2018-07-12 16:23:25 -Registering beans for JMX exposure on startup
2018-07-12 16:23:25 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-12 16:23:25 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-12 16:23:25 -Starting beans in phase 2147483647
2018-07-12 16:23:25 -Context refreshed
2018-07-12 16:23:25 -Found 1 custom documentation plugin(s)
2018-07-12 16:23:25 -Scanning for api listing references
2018-07-12 16:23:25 -Generating unique operation named: removeUsingPOST_1
2018-07-12 16:23:25 -Generating unique operation named: addUsingGET_1
2018-07-12 16:23:25 -Generating unique operation named: editUsingGET_1
2018-07-12 16:23:25 -Generating unique operation named: listUsingGET_1
2018-07-12 16:23:25 -Generating unique operation named: removeUsingPOST_2
2018-07-12 16:23:25 -Generating unique operation named: removeUsingPOST_3
2018-07-12 16:23:25 -Generating unique operation named: saveUsingPOST_1
2018-07-12 16:23:25 -Generating unique operation named: updateUsingGET_1
2018-07-12 16:23:25 -Generating unique operation named: updateUsingHEAD_1
2018-07-12 16:23:25 -Generating unique operation named: updateUsingPOST_1
2018-07-12 16:23:25 -Generating unique operation named: updateUsingPUT_1
2018-07-12 16:23:25 -Generating unique operation named: updateUsingPATCH_1
2018-07-12 16:23:25 -Generating unique operation named: updateUsingDELETE_1
2018-07-12 16:23:25 -Generating unique operation named: updateUsingOPTIONS_1
2018-07-12 16:23:25 -Generating unique operation named: updateUsingTRACE_1
2018-07-12 16:23:25 -Generating unique operation named: addUsingGET_2
2018-07-12 16:23:25 -Generating unique operation named: editUsingGET_2
2018-07-12 16:23:25 -Generating unique operation named: listUsingGET_2
2018-07-12 16:23:25 -Generating unique operation named: removeUsingPOST_4
2018-07-12 16:23:25 -Generating unique operation named: removeUsingPOST_5
2018-07-12 16:23:25 -Generating unique operation named: saveUsingPOST_2
2018-07-12 16:23:25 -Generating unique operation named: updateUsingGET_2
2018-07-12 16:23:25 -Generating unique operation named: updateUsingHEAD_2
2018-07-12 16:23:25 -Generating unique operation named: updateUsingPOST_2
2018-07-12 16:23:25 -Generating unique operation named: updateUsingPUT_2
2018-07-12 16:23:25 -Generating unique operation named: updateUsingPATCH_2
2018-07-12 16:23:25 -Generating unique operation named: updateUsingDELETE_2
2018-07-12 16:23:25 -Generating unique operation named: updateUsingOPTIONS_2
2018-07-12 16:23:25 -Generating unique operation named: updateUsingTRACE_2
2018-07-12 16:23:25 -Generating unique operation named: addUsingGET_3
2018-07-12 16:23:25 -Generating unique operation named: editUsingGET_3
2018-07-12 16:23:25 -Generating unique operation named: listUsingGET_3
2018-07-12 16:23:25 -Generating unique operation named: removeUsingPOST_6
2018-07-12 16:23:25 -Generating unique operation named: removeUsingPOST_7
2018-07-12 16:23:25 -Generating unique operation named: saveUsingPOST_3
2018-07-12 16:23:25 -Generating unique operation named: updateUsingGET_3
2018-07-12 16:23:25 -Generating unique operation named: updateUsingHEAD_3
2018-07-12 16:23:25 -Generating unique operation named: updateUsingPOST_3
2018-07-12 16:23:25 -Generating unique operation named: updateUsingPUT_3
2018-07-12 16:23:25 -Generating unique operation named: updateUsingPATCH_3
2018-07-12 16:23:25 -Generating unique operation named: updateUsingDELETE_3
2018-07-12 16:23:25 -Generating unique operation named: updateUsingOPTIONS_3
2018-07-12 16:23:25 -Generating unique operation named: updateUsingTRACE_3
2018-07-12 16:23:25 -Generating unique operation named: editUsingGET_4
2018-07-12 16:23:25 -Generating unique operation named: listUsingGET_4
2018-07-12 16:23:25 -Generating unique operation named: updateUsingPOST_4
2018-07-12 16:23:26 -Generating unique operation named: listUsingGET_5
2018-07-12 16:23:26 -Generating unique operation named: removeUsingPOST_8
2018-07-12 16:23:26 -Generating unique operation named: welcomeUsingGET_1
2018-07-12 16:23:26 -Generating unique operation named: addUsingGET_4
2018-07-12 16:23:26 -Generating unique operation named: editUsingGET_5
2018-07-12 16:23:26 -Generating unique operation named: listUsingGET_6
2018-07-12 16:23:26 -Generating unique operation named: removeUsingPOST_9
2018-07-12 16:23:26 -Generating unique operation named: saveUsingPOST_4
2018-07-12 16:23:26 -Generating unique operation named: treeUsingGET_1
2018-07-12 16:23:26 -Generating unique operation named: treeUsingGET_2
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPOST_5
2018-07-12 16:23:26 -Generating unique operation named: batchDelUsingPOST_1
2018-07-12 16:23:26 -Generating unique operation named: editUsingGET_6
2018-07-12 16:23:26 -Generating unique operation named: listUsingGET_7
2018-07-12 16:23:26 -Generating unique operation named: addUsingGET_5
2018-07-12 16:23:26 -Generating unique operation named: editUsingGET_7
2018-07-12 16:23:26 -Generating unique operation named: listUsingGET_8
2018-07-12 16:23:26 -Generating unique operation named: removeUsingPOST_10
2018-07-12 16:23:26 -Generating unique operation named: removeUsingPOST_11
2018-07-12 16:23:26 -Generating unique operation named: saveUsingPOST_5
2018-07-12 16:23:26 -Generating unique operation named: updateUsingGET_4
2018-07-12 16:23:26 -Generating unique operation named: updateUsingHEAD_4
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPOST_6
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPUT_4
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPATCH_4
2018-07-12 16:23:26 -Generating unique operation named: updateUsingDELETE_4
2018-07-12 16:23:26 -Generating unique operation named: updateUsingOPTIONS_4
2018-07-12 16:23:26 -Generating unique operation named: updateUsingTRACE_4
2018-07-12 16:23:26 -Generating unique operation named: addUsingGET_6
2018-07-12 16:23:26 -Generating unique operation named: editUsingGET_8
2018-07-12 16:23:26 -Generating unique operation named: listUsingGET_9
2018-07-12 16:23:26 -Generating unique operation named: removeUsingPOST_12
2018-07-12 16:23:26 -Generating unique operation named: removeUsingPOST_13
2018-07-12 16:23:26 -Generating unique operation named: saveUsingPOST_6
2018-07-12 16:23:26 -Generating unique operation named: updateUsingGET_5
2018-07-12 16:23:26 -Generating unique operation named: updateUsingHEAD_5
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPOST_7
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPUT_5
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPATCH_5
2018-07-12 16:23:26 -Generating unique operation named: updateUsingDELETE_5
2018-07-12 16:23:26 -Generating unique operation named: updateUsingOPTIONS_5
2018-07-12 16:23:26 -Generating unique operation named: updateUsingTRACE_5
2018-07-12 16:23:26 -Generating unique operation named: addUsingGET_7
2018-07-12 16:23:26 -Generating unique operation named: batchDelUsingPOST_2
2018-07-12 16:23:26 -Generating unique operation named: deployUsingPOST_1
2018-07-12 16:23:26 -Generating unique operation named: listUsingGET_10
2018-07-12 16:23:26 -Generating unique operation named: removeUsingPOST_14
2018-07-12 16:23:26 -Generating unique operation named: addUsingGET_8
2018-07-12 16:23:26 -Generating unique operation named: editUsingGET_9
2018-07-12 16:23:26 -Generating unique operation named: infoUsingGET_1
2018-07-12 16:23:26 -Generating unique operation named: infoUsingHEAD_1
2018-07-12 16:23:26 -Generating unique operation named: infoUsingPOST_1
2018-07-12 16:23:26 -Generating unique operation named: infoUsingPUT_1
2018-07-12 16:23:26 -Generating unique operation named: infoUsingPATCH_1
2018-07-12 16:23:26 -Generating unique operation named: infoUsingDELETE_1
2018-07-12 16:23:26 -Generating unique operation named: infoUsingOPTIONS_1
2018-07-12 16:23:26 -Generating unique operation named: infoUsingTRACE_1
2018-07-12 16:23:26 -Generating unique operation named: listUsingGET_11
2018-07-12 16:23:26 -Generating unique operation named: removeUsingPOST_15
2018-07-12 16:23:26 -Generating unique operation named: removeUsingPOST_16
2018-07-12 16:23:26 -Generating unique operation named: saveUsingPOST_7
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPOST_8
2018-07-12 16:23:26 -Generating unique operation named: addUsingGET_9
2018-07-12 16:23:26 -Generating unique operation named: editUsingGET_10
2018-07-12 16:23:26 -Generating unique operation named: listUsingGET_12
2018-07-12 16:23:26 -Generating unique operation named: removeUsingPOST_17
2018-07-12 16:23:26 -Generating unique operation named: removeUsingPOST_18
2018-07-12 16:23:26 -Generating unique operation named: saveUsingPOST_8
2018-07-12 16:23:26 -Generating unique operation named: updateUsingGET_6
2018-07-12 16:23:26 -Generating unique operation named: updateUsingHEAD_6
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPOST_9
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPUT_6
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPATCH_6
2018-07-12 16:23:26 -Generating unique operation named: updateUsingDELETE_6
2018-07-12 16:23:26 -Generating unique operation named: updateUsingOPTIONS_6
2018-07-12 16:23:26 -Generating unique operation named: updateUsingTRACE_6
2018-07-12 16:23:26 -Generating unique operation named: addUsingGET_10
2018-07-12 16:23:26 -Generating unique operation named: batchDelUsingPOST_3
2018-07-12 16:23:26 -Generating unique operation named: editUsingGET_11
2018-07-12 16:23:26 -Generating unique operation named: listUsingGET_13
2018-07-12 16:23:26 -Generating unique operation named: saveUsingPOST_9
2018-07-12 16:23:26 -Generating unique operation named: saveUsingPOST_10
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPOST_10
2018-07-12 16:23:26 -Generating unique operation named: addUsingGET_11
2018-07-12 16:23:26 -Generating unique operation named: editUsingGET_12
2018-07-12 16:23:26 -Generating unique operation named: listUsingGET_14
2018-07-12 16:23:26 -Generating unique operation named: removeUsingPOST_19
2018-07-12 16:23:26 -Generating unique operation named: removeUsingPOST_20
2018-07-12 16:23:26 -Generating unique operation named: updateUsingGET_7
2018-07-12 16:23:26 -Generating unique operation named: updateUsingHEAD_7
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPOST_11
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPUT_7
2018-07-12 16:23:26 -Generating unique operation named: updateUsingPATCH_7
2018-07-12 16:23:26 -Generating unique operation named: updateUsingDELETE_7
2018-07-12 16:23:26 -Generating unique operation named: updateUsingOPTIONS_7
2018-07-12 16:23:26 -Generating unique operation named: updateUsingTRACE_7
2018-07-12 16:23:26 -Generating unique operation named: listUsingGET_15
2018-07-12 16:23:26 -Generating unique operation named: listUsingHEAD_1
2018-07-12 16:23:26 -Generating unique operation named: listUsingPOST_1
2018-07-12 16:23:26 -Generating unique operation named: listUsingPUT_1
2018-07-12 16:23:26 -Generating unique operation named: listUsingPATCH_1
2018-07-12 16:23:26 -Generating unique operation named: listUsingDELETE_1
2018-07-12 16:23:26 -Generating unique operation named: listUsingOPTIONS_1
2018-07-12 16:23:26 -Generating unique operation named: listUsingTRACE_1
2018-07-12 16:23:26 -Generating unique operation named: listUsingGET_16
2018-07-12 16:23:26 -Generating unique operation named: addUsingGET_12
2018-07-12 16:23:26 -Generating unique operation named: batchDelUsingPOST_4
2018-07-12 16:23:26 -Generating unique operation named: editUsingGET_13
2018-07-12 16:23:26 -Generating unique operation named: listUsingGET_17
2018-07-12 16:23:26 -Generating unique operation named: removeUsingPOST_21
2018-07-12 16:23:27 -Generating unique operation named: saveUsingPOST_11
2018-07-12 16:23:27 -Generating unique operation named: treeUsingGET_3
2018-07-12 16:23:27 -Generating unique operation named: treeViewUsingGET_1
2018-07-12 16:23:27 -Generating unique operation named: updateUsingPOST_12
2018-07-12 16:23:27 -Starting Quartz Scheduler now
2018-07-12 16:23:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-07-12 16:23:27 -Starting...
2018-07-12 16:23:27 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-07-12 16:23:27 -Started.
2018-07-12 16:23:27 -Initializing ProtocolHandler ["http-nio-8088"]
2018-07-12 16:23:27 -Starting ProtocolHandler ["http-nio-8088"]
2018-07-12 16:23:27 -Using a shared selector for servlet write/read
2018-07-12 16:23:27 -Tomcat started on port(s): 8088 (http)
2018-07-12 16:23:27 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-07-12 16:23:27 -==> Parameters: 
2018-07-12 16:23:27 -<==      Total: 1
2018-07-12 16:23:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-07-12 16:23:27 -Started JustdoApplication in 13.013 seconds (JVM running for 13.537)
2018-07-12 16:23:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-12 16:23:57 -FrameworkServlet 'dispatcherServlet': initialization started
2018-07-12 16:23:57 -FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2018-07-12 16:23:57 -Enabling session validation scheduler...
2018-07-12 16:23:57 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 16:23:57 -HTTP METHOD : GET
2018-07-12 16:23:57 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 16:23:57 -参数 : []
2018-07-12 16:23:57 -请求地址 : http://127.0.0.1:8088/index
2018-07-12 16:23:57 -HTTP METHOD : GET
2018-07-12 16:23:57 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.index
2018-07-12 16:23:57 -参数 : [{}]
2018-07-12 16:23:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 16:23:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 16:23:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-07-12 16:23:57 -<==      Total: 0
2018-07-12 16:23:57 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 16:23:57 -==> Parameters: 1(Long)
2018-07-12 16:23:57 -==> Parameters: 1(Long), 0(String)
2018-07-12 16:23:57 -<==      Total: 1
2018-07-12 16:23:57 -耗时 : 23
2018-07-12 16:23:57 -返回值 : com.justdo.common.utils.PageUtils@553f13ac
2018-07-12 16:23:57 -<==      Total: 30
2018-07-12 16:23:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-07-12 16:23:57 -==> Parameters: 150(Long)
2018-07-12 16:23:57 -<==      Total: 0
2018-07-12 16:23:57 -耗时 : 35
2018-07-12 16:23:57 -返回值 : index
2018-07-12 16:23:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:23:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.justdo.system.user.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p(String), 127.0.0.1(String), 2018-07-12 16:23:57.398(Timestamp)
2018-07-12 16:23:57 -<==    Updates: 1
2018-07-12 16:23:57 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-12 16:23:57 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-12 16:23:57 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-12 16:23:57 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-12 16:23:57 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-12 16:23:57 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-12 16:23:57 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-12 16:23:57 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:23:57 -HTTP METHOD : GET
2018-07-12 16:23:57 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:23:57 -参数 : []
2018-07-12 16:23:57 -耗时 : 0
2018-07-12 16:23:57 -返回值 : main
2018-07-12 16:23:57 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 16:23:57 -HTTP METHOD : GET
2018-07-12 16:23:57 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 16:23:57 -参数 : []
2018-07-12 16:23:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 16:23:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 16:23:57 -<==      Total: 0
2018-07-12 16:23:57 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 16:23:57 -==> Parameters: 1(Long), 0(String)
2018-07-12 16:23:57 -<==      Total: 1
2018-07-12 16:23:57 -耗时 : 5
2018-07-12 16:23:57 -返回值 : com.justdo.common.utils.PageUtils@163467b9
2018-07-12 16:23:57 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:23:57 -HTTP METHOD : GET
2018-07-12 16:23:57 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:23:57 -参数 : []
2018-07-12 16:23:57 -耗时 : 0
2018-07-12 16:23:57 -返回值 : main
2018-07-12 16:23:59 -请求地址 : http://127.0.0.1:8088/system/dict/type
2018-07-12 16:23:59 -HTTP METHOD : GET
2018-07-12 16:23:59 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.listType
2018-07-12 16:23:59 -参数 : []
2018-07-12 16:23:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:23:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:23:59 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-07-12 16:23:59 -==> Parameters: 
2018-07-12 16:23:59 -请求地址 : http://127.0.0.1:8088/system/dict
2018-07-12 16:23:59 -请求地址 : http://127.0.0.1:8088/system/dict/list
2018-07-12 16:23:59 -HTTP METHOD : GET
2018-07-12 16:23:59 -HTTP METHOD : GET
2018-07-12 16:23:59 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.dict
2018-07-12 16:23:59 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.list
2018-07-12 16:23:59 -参数 : [{}]
2018-07-12 16:23:59 -参数 : [{limit=10, offset=0}]
2018-07-12 16:23:59 -耗时 : 1
2018-07-12 16:23:59 -返回值 : system/dict/dict
2018-07-12 16:23:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-07-12 16:23:59 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:23:59 -<==      Total: 31
2018-07-12 16:23:59 -耗时 : 10
2018-07-12 16:23:59 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-07-12 16:23:59 -<==      Total: 10
2018-07-12 16:23:59 -==>  Preparing: select count(*) from sys_dict3 
2018-07-12 16:23:59 -==> Parameters: 
2018-07-12 16:23:59 -<==      Total: 1
2018-07-12 16:23:59 -耗时 : 9
2018-07-12 16:23:59 -返回值 : com.justdo.common.utils.PageUtils@42feef33
2018-07-12 16:23:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:23:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:23:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:23:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:23:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:00 -请求地址 : http://127.0.0.1:8088/system/regexp
2018-07-12 16:24:00 -HTTP METHOD : GET
2018-07-12 16:24:00 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.Regexp
2018-07-12 16:24:00 -参数 : []
2018-07-12 16:24:00 -请求地址 : http://127.0.0.1:8088/system/regexp/list
2018-07-12 16:24:00 -HTTP METHOD : GET
2018-07-12 16:24:00 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.list
2018-07-12 16:24:00 -参数 : [{limit=10, offset=0, rname=}]
2018-07-12 16:24:00 -耗时 : 0
2018-07-12 16:24:00 -返回值 : system/regexp/regexp
2018-07-12 16:24:00 -==>  Preparing: select RID,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from SYS_REGEXP order by RID desc 
2018-07-12 16:24:00 -==> Parameters: 
2018-07-12 16:24:00 -<==      Total: 9
2018-07-12 16:24:00 -==>  Preparing: select count(*) from sys_regexp 
2018-07-12 16:24:00 -==> Parameters: 
2018-07-12 16:24:00 -<==      Total: 1
2018-07-12 16:24:00 -耗时 : 11
2018-07-12 16:24:00 -返回值 : com.justdo.common.utils.PageUtils@5fe088fc
2018-07-12 16:24:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:03 -请求地址 : http://127.0.0.1:8088/system/file/list
2018-07-12 16:24:03 -HTTP METHOD : GET
2018-07-12 16:24:03 -CLASS_METHOD : com.justdo.system.file.controller.FileController.list
2018-07-12 16:24:03 -参数 : [{limit=12, offset=0, type=}]
2018-07-12 16:24:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-07-12 16:24:03 -==> Parameters: 0(Integer), 12(Integer)
2018-07-12 16:24:03 -<==      Total: 10
2018-07-12 16:24:03 -==>  Preparing: select count(*) from sys_file 
2018-07-12 16:24:03 -==> Parameters: 
2018-07-12 16:24:03 -<==      Total: 1
2018-07-12 16:24:03 -耗时 : 14
2018-07-12 16:24:03 -返回值 : com.justdo.common.utils.PageUtils@b414974
2018-07-12 16:24:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:03 -请求地址 : http://127.0.0.1:8088/system/file
2018-07-12 16:24:03 -HTTP METHOD : GET
2018-07-12 16:24:03 -CLASS_METHOD : com.justdo.system.file.controller.FileController.sysFile
2018-07-12 16:24:03 -参数 : [{}]
2018-07-12 16:24:03 -耗时 : 0
2018-07-12 16:24:03 -返回值 : system/file/file
2018-07-12 16:24:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:05 -请求地址 : http://127.0.0.1:8088/system/user/
2018-07-12 16:24:05 -HTTP METHOD : GET
2018-07-12 16:24:05 -CLASS_METHOD : com.justdo.system.user.controller.UserController.user
2018-07-12 16:24:05 -参数 : [{}]
2018-07-12 16:24:05 -耗时 : 1
2018-07-12 16:24:05 -返回值 : system/user/user
2018-07-12 16:24:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:05 -请求地址 : http://127.0.0.1:8088/system/dept/tree
2018-07-12 16:24:05 -HTTP METHOD : GET
2018-07-12 16:24:05 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.tree
2018-07-12 16:24:05 -参数 : []
2018-07-12 16:24:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-07-12 16:24:05 -==> Parameters: 
2018-07-12 16:24:05 -<==      Total: 10
2018-07-12 16:24:05 -耗时 : 10
2018-07-12 16:24:05 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"测试二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"测试一部"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"测试部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"销售一部"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"研发二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"研發一部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-07-12 16:24:05 -请求地址 : http://127.0.0.1:8088/system/user/list
2018-07-12 16:24:05 -HTTP METHOD : GET
2018-07-12 16:24:05 -CLASS_METHOD : com.justdo.system.user.controller.UserController.list
2018-07-12 16:24:05 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-07-12 16:24:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-07-12 16:24:05 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:24:05 -<==      Total: 10
2018-07-12 16:24:05 -==>  Preparing: select count(*) from sys_user 
2018-07-12 16:24:05 -==> Parameters: 
2018-07-12 16:24:05 -<==      Total: 1
2018-07-12 16:24:05 -耗时 : 16
2018-07-12 16:24:05 -返回值 : com.justdo.common.utils.PageUtils@689de75f
2018-07-12 16:24:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:06 -请求地址 : http://127.0.0.1:8088/system/role
2018-07-12 16:24:06 -HTTP METHOD : GET
2018-07-12 16:24:06 -CLASS_METHOD : com.justdo.system.role.controller.RoleController.role
2018-07-12 16:24:06 -参数 : []
2018-07-12 16:24:06 -耗时 : 0
2018-07-12 16:24:06 -返回值 : system/role/role
2018-07-12 16:24:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:06 -请求地址 : http://127.0.0.1:8088/system/role/list
2018-07-12 16:24:06 -HTTP METHOD : GET
2018-07-12 16:24:06 -CLASS_METHOD : com.justdo.system.role.controller.RoleController.list
2018-07-12 16:24:06 -参数 : []
2018-07-12 16:24:06 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-07-12 16:24:06 -==> Parameters: 
2018-07-12 16:24:06 -<==      Total: 2
2018-07-12 16:24:06 -耗时 : 4
2018-07-12 16:24:06 -返回值 : [RoleDO{roleId=59, roleName='普通用户', roleSign='null', remark='基本用户权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-07-12 16:24:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:07 -请求地址 : http://127.0.0.1:8088/system/organ
2018-07-12 16:24:07 -HTTP METHOD : GET
2018-07-12 16:24:07 -CLASS_METHOD : com.justdo.system.organ.controller.OrganController.Organ
2018-07-12 16:24:07 -请求地址 : http://127.0.0.1:8088/system/organ/list
2018-07-12 16:24:07 -HTTP METHOD : GET
2018-07-12 16:24:07 -CLASS_METHOD : com.justdo.system.organ.controller.OrganController.list
2018-07-12 16:24:07 -参数 : []
2018-07-12 16:24:07 -耗时 : 1
2018-07-12 16:24:07 -返回值 : system/organ/organ
2018-07-12 16:24:07 -参数 : [{limit=10, offset=0}]
2018-07-12 16:24:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:24:07 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8088/system/organ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list(String), null, 2018-07-12 16:24:07.423(Timestamp)
2018-07-12 16:24:07 -<==    Updates: 1
2018-07-12 16:24:07 -Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy126.list(Unknown Source)
	at com.justdo.system.organ.service.impl.OrganServiceImpl.list(OrganServiceImpl.java:27)
	at com.justdo.system.organ.controller.OrganController.list(OrganController.java:49)
	at com.justdo.system.organ.controller.OrganController$$FastClassBySpringCGLIB$$ade438d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.justdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.justdo.system.organ.controller.OrganController$$EnhancerBySpringCGLIB$$2ac09431.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-12 16:24:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:09 -请求地址 : http://127.0.0.1:8088/system/menu/
2018-07-12 16:24:09 -HTTP METHOD : GET
2018-07-12 16:24:09 -请求地址 : http://127.0.0.1:8088/system/menu/list
2018-07-12 16:24:09 -CLASS_METHOD : com.justdo.system.menu.controller.MenuController.menu
2018-07-12 16:24:09 -参数 : [{}]
2018-07-12 16:24:09 -HTTP METHOD : GET
2018-07-12 16:24:09 -耗时 : 0
2018-07-12 16:24:09 -返回值 : system/menu/menu
2018-07-12 16:24:09 -CLASS_METHOD : com.justdo.system.menu.controller.MenuController.list
2018-07-12 16:24:09 -参数 : [{sort=order_num}]
2018-07-12 16:24:09 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-07-12 16:24:09 -==> Parameters: 
2018-07-12 16:24:09 -<==      Total: 72
2018-07-12 16:24:09 -耗时 : 17
2018-07-12 16:24:09 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:del', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:del', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='system/notice', perms='system:notice:notice', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='system/notice/del', perms='system:notice:del', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='system/notice/batchDel', perms='system:notice:batchDel', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='system/notice/selfnotice', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:del', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='system:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:del', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchDel', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:del', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='system/notice/add', perms='system:notice:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=3, name='机构管理', url='system/organ', perms='system:organ:organ', type=1, icon='fa fa-sitemap', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/del', perms='system:dept:del', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='system/notice/edit', perms='system:notice:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=109, name='添加', url='system/organ/add', perms='system:organ:add', type=2, icon='fa fa-plus', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=109, name='修改', url='system/organ/edit', perms='system:organ:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/del', perms='system:dict:del', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/del', perms='system:regexp:del', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=109, name='删除', url='system/organ/del', perms='system:organ:del', type=2, icon='fa fa-trash-o', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchDel', perms='system:dict:batchDel', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=109, name='批量删除', url='system/organ/batchDel', perms='system:organ:batchDel', type=2, icon='fa fa-close', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=105, name='批量删除', url='system/regexp/batchDel', perms='system:regexp:batchDel', type=2, icon='fa fa-close', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-07-12 16:24:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:11 -请求地址 : http://127.0.0.1:8088/system/dept
2018-07-12 16:24:11 -HTTP METHOD : GET
2018-07-12 16:24:11 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.dept
2018-07-12 16:24:11 -参数 : []
2018-07-12 16:24:11 -耗时 : 1
2018-07-12 16:24:11 -返回值 : system/dept/dept
2018-07-12 16:24:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:11 -请求地址 : http://127.0.0.1:8088/system/dept/list
2018-07-12 16:24:11 -HTTP METHOD : GET
2018-07-12 16:24:11 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.list
2018-07-12 16:24:11 -参数 : []
2018-07-12 16:24:11 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-07-12 16:24:11 -==> Parameters: 
2018-07-12 16:24:11 -<==      Total: 10
2018-07-12 16:24:11 -耗时 : 3
2018-07-12 16:24:11 -返回值 : [DeptDO{deptId=15, parentId=13, name='测试二部', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='测试一部', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='测试部', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='产品部', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='销售一部', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='销售部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='研发二部', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='研發一部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='研发部', orderNum=1, delFlag=1}]
2018-07-12 16:24:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:16 -请求地址 : http://127.0.0.1:8088/blog/bContent/add
2018-07-12 16:24:16 -HTTP METHOD : GET
2018-07-12 16:24:16 -CLASS_METHOD : com.justdo.blog.controller.ContentController.add
2018-07-12 16:24:16 -参数 : []
2018-07-12 16:24:16 -耗时 : 0
2018-07-12 16:24:16 -返回值 : blog/bContent/add
2018-07-12 16:24:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:16 -请求地址 : http://127.0.0.1:8088/blog/bContent
2018-07-12 16:24:16 -HTTP METHOD : GET
2018-07-12 16:24:16 -CLASS_METHOD : com.justdo.blog.controller.ContentController.bContent
2018-07-12 16:24:16 -参数 : []
2018-07-12 16:24:16 -耗时 : 0
2018-07-12 16:24:16 -返回值 : blog/bContent/bContent
2018-07-12 16:24:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:16 -请求地址 : http://127.0.0.1:8088/blog/bContent/list
2018-07-12 16:24:16 -HTTP METHOD : GET
2018-07-12 16:24:16 -CLASS_METHOD : com.justdo.blog.controller.ContentController.list
2018-07-12 16:24:16 -参数 : [{limit=10, offset=0}]
2018-07-12 16:24:16 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content order by cid desc limit 0, 10 
2018-07-12 16:24:16 -==> Parameters: 
2018-07-12 16:24:16 -<==      Total: 10
2018-07-12 16:24:16 -==>  Preparing: select count(*) from blog_content 
2018-07-12 16:24:16 -==> Parameters: 
2018-07-12 16:24:16 -<==      Total: 1
2018-07-12 16:24:16 -耗时 : 18
2018-07-12 16:24:16 -返回值 : com.justdo.common.utils.PageUtils@166a365
2018-07-12 16:24:20 -请求地址 : http://127.0.0.1:8088/activiti/process
2018-07-12 16:24:20 -HTTP METHOD : GET
2018-07-12 16:24:20 -CLASS_METHOD : com.justdo.activiti.controller.ProcessController.process
2018-07-12 16:24:20 -参数 : []
2018-07-12 16:24:20 -耗时 : 0
2018-07-12 16:24:20 -返回值 : ModelAndView: reference to view with name 'act/process/process'; model is null
2018-07-12 16:24:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:20 -请求地址 : http://127.0.0.1:8088/activiti/process/list
2018-07-12 16:24:20 -HTTP METHOD : GET
2018-07-12 16:24:20 -CLASS_METHOD : com.justdo.activiti.controller.ProcessController.list
2018-07-12 16:24:20 -参数 : [0, 10]
2018-07-12 16:24:20 -耗时 : 16
2018-07-12 16:24:20 -返回值 : com.justdo.common.utils.PageUtils@7667071f
2018-07-12 16:24:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 4, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 5]
2018-07-12 16:24:24 -请求地址 : http://127.0.0.1:8088/activiti/task/todo
2018-07-12 16:24:24 -HTTP METHOD : GET
2018-07-12 16:24:24 -CLASS_METHOD : com.justdo.activiti.controller.TaskController.todo
2018-07-12 16:24:24 -参数 : []
2018-07-12 16:24:24 -耗时 : 0
2018-07-12 16:24:24 -返回值 : ModelAndView: reference to view with name 'act/task/todoTask'; model is null
2018-07-12 16:24:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:24 -请求地址 : http://127.0.0.1:8088/activiti/task/todoList
2018-07-12 16:24:24 -HTTP METHOD : GET
2018-07-12 16:24:24 -CLASS_METHOD : com.justdo.activiti.controller.TaskController.todoList
2018-07-12 16:24:24 -参数 : []
2018-07-12 16:24:24 -请求地址 : http://127.0.0.1:8088/activiti/task/gotoList
2018-07-12 16:24:24 -HTTP METHOD : GET
2018-07-12 16:24:24 -CLASS_METHOD : com.justdo.activiti.controller.TaskController.list
2018-07-12 16:24:24 -参数 : [0, 10]
2018-07-12 16:24:24 -耗时 : 5
2018-07-12 16:24:24 -返回值 : com.justdo.common.utils.PageUtils@789fb861
2018-07-12 16:24:24 -耗时 : 20
2018-07-12 16:24:24 -返回值 : []
2018-07-12 16:24:26 -请求地址 : http://127.0.0.1:8088/activiti/model
2018-07-12 16:24:26 -HTTP METHOD : GET
2018-07-12 16:24:26 -CLASS_METHOD : com.justdo.activiti.controller.ModelController.model
2018-07-12 16:24:26 -参数 : []
2018-07-12 16:24:26 -耗时 : 0
2018-07-12 16:24:26 -返回值 : ModelAndView: reference to view with name 'act/model/model'; model is null
2018-07-12 16:24:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:24:26 -请求地址 : http://127.0.0.1:8088/activiti/model/list
2018-07-12 16:24:26 -HTTP METHOD : GET
2018-07-12 16:24:26 -CLASS_METHOD : com.justdo.activiti.controller.ModelController.list
2018-07-12 16:24:26 -参数 : [0, 10]
2018-07-12 16:24:26 -耗时 : 8
2018-07-12 16:24:26 -返回值 : com.justdo.common.utils.PageUtils@b4c5b5d
2018-07-12 16:28:48 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:23:15 CST 2018]; root of context hierarchy
2018-07-12 16:28:48 -Stopping beans in phase 2147483647
2018-07-12 16:28:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-07-12 16:28:48 -Stopping...
2018-07-12 16:28:48 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-07-12 16:28:48 -Stopped.
2018-07-12 16:28:48 -Unregistering JMX-exposed beans on shutdown
2018-07-12 16:28:48 -Unregistering JMX-exposed beans
2018-07-12 16:28:48 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-07-12 16:28:48 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-07-12 16:28:48 -清除SpringContextHolder中的ApplicationContext:org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:23:15 CST 2018]; root of context hierarchy
2018-07-12 16:28:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-07-12 16:28:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-07-12 16:28:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-07-12 16:28:48 -Shutting down Quartz Scheduler
2018-07-12 16:28:48 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-07-12 16:28:48 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-07-12 16:28:48 -{dataSource-1} closed
2018-07-12 16:28:48 -Disabled session validation scheduler.
2018-07-12 16:29:06 -Starting JustdoApplication on localhost with PID 1208 (/Users/chenlin/Documents/GitHub/JustDo-boot/target/classes started by chenlin in /Users/chenlin/Documents/GitHub/JustDo-boot)
2018-07-12 16:29:06 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-07-12 16:29:06 -The following profiles are active: dev
2018-07-12 16:29:07 -HV000001: Hibernate Validator 5.3.6.Final
2018-07-12 16:29:07 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:29:07 CST 2018]; root of context hierarchy
2018-07-12 16:29:08 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-12 16:29:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4f84bdba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:29:08 -Bean 'shiroConfig' of type [com.justdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1be0589b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:29:09 -Bean 'userRealm' of type [com.justdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:29:09 -Bean 'redisManager' of type [com.justdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:29:09 -获取名称为: com.justdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-07-12 16:29:09 -Bean 'redisSessionDAO' of type [com.justdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:29:09 -Bean 'sessionDAO' of type [com.justdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:29:09 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:29:09 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:29:09 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:29:09 -Tomcat initialized with port(s): 8088 (http)
2018-07-12 16:29:09 -Starting service [Tomcat]
2018-07-12 16:29:09 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-07-12 16:29:09 -Initializing Spring embedded WebApplicationContext
2018-07-12 16:29:09 -Root WebApplicationContext: initialization completed in 2527 ms
2018-07-12 16:29:10 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-12 16:29:10 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-12 16:29:10 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-12 16:29:10 -Mapping filter: 'requestContextFilter' to: [/*]
2018-07-12 16:29:10 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-12 16:29:10 -Filter xssFilter was not registered (disabled)
2018-07-12 16:29:10 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-07-12 16:29:10 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-07-12 16:29:10 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-07-12 16:29:10 -Mapping servlet: 'dispatcherServlet' to [/]
2018-07-12 16:29:10 -{dataSource-1} inited
2018-07-12 16:29:11 -ProcessEngine default created
2018-07-12 16:29:12 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:29:07 CST 2018]; root of context hierarchy
2018-07-12 16:29:12 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-07-12 16:29:12 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-07-12 16:29:12 -Using default implementation for ThreadExecutor
2018-07-12 16:29:12 -Job execution threads will use class loader of thread: main
2018-07-12 16:29:12 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-12 16:29:12 -Quartz Scheduler v.2.2.1 created.
2018-07-12 16:29:12 -RAMJobStore initialized.
2018-07-12 16:29:12 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-07-12 16:29:12 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-07-12 16:29:12 -Quartz scheduler version: 2.2.1
2018-07-12 16:29:12 -JobFactory set to: com.justdo.common.quartz.factory.JobFactory@5cba890e
2018-07-12 16:29:14 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.remove(java.lang.String)
2018-07-12 16:29:14 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.ModelController.list(int,int)
2018-07-12 16:29:14 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ModelController.model()
2018-07-12 16:29:14 -Mapped "{[/activiti/model/add]}" onto public void com.justdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-07-12 16:29:14 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.justdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-07-12 16:29:14 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.justdo.activiti.controller.ModelController.getStencilset()
2018-07-12 16:29:14 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.justdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-12 16:29:14 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-07-12 16:29:14 -Mapped "{[/activiti/model/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.batchDel(java.lang.String[])
2018-07-12 16:29:14 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.justdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-12 16:29:14 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.justdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-07-12 16:29:14 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ProcessController.add()
2018-07-12 16:29:14 -Mapped "{[/activiti/process/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-07-12 16:29:14 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.ProcessController.list(int,int)
2018-07-12 16:29:14 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-07-12 16:29:14 -Mapped "{[/activiti/process/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.batchDel(java.lang.String[])
2018-07-12 16:29:14 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-07-12 16:29:14 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.justdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-12 16:29:14 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ProcessController.process()
2018-07-12 16:29:14 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.add()
2018-07-12 16:29:14 -Mapped "{[/act/salary/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-07-12 16:29:14 -Mapped "{[/act/salary/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-07-12 16:29:14 -Mapped "{[/act/salary/update]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.update(com.justdo.activiti.domain.SalaryDO)
2018-07-12 16:29:14 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.Salary()
2018-07-12 16:29:14 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.saveOrUpdate(com.justdo.activiti.domain.SalaryDO)
2018-07-12 16:29:14 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.justdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-12 16:29:14 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.TaskController.list(int,int)
2018-07-12 16:29:14 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.TaskController.gotoTask()
2018-07-12 16:29:14 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.justdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-12 16:29:14 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.TaskController.todo()
2018-07-12 16:29:14 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.justdo.activiti.vo.TaskVO> com.justdo.activiti.controller.TaskController.todoList()
2018-07-12 16:29:14 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.justdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-12 16:29:14 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.blog()
2018-07-12 16:29:14 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.add()
2018-07-12 16:29:14 -Mapped "{[/blog/bContent/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.remove(java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/blog/bContent/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-07-12 16:29:14 -Mapped "{[/blog/bContent/update]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.update(com.justdo.blog.domain.ContentDO)
2018-07-12 16:29:14 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.save(com.justdo.blog.domain.ContentDO)
2018-07-12 16:29:14 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.bContent()
2018-07-12 16:29:14 -Mapped "{[/error]}" onto public com.justdo.common.utils.R com.justdo.common.exception.HandleErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-12 16:29:14 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.common.exception.HandleErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-12 16:29:14 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/dept/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/system/dept/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-07-12 16:29:14 -Mapped "{[/system/dept/update]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.update(com.justdo.system.dept.domain.DeptDO)
2018-07-12 16:29:14 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.justdo.system.dept.domain.DeptDO> com.justdo.system.dept.controller.DeptController.list()
2018-07-12 16:29:14 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.save(com.justdo.system.dept.domain.DeptDO)
2018-07-12 16:29:14 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.justdo.common.domain.Tree<com.justdo.system.dept.domain.DeptDO> com.justdo.system.dept.controller.DeptController.tree()
2018-07-12 16:29:14 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.dept()
2018-07-12 16:29:14 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.treeView()
2018-07-12 16:29:14 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.add()
2018-07-12 16:29:14 -Mapped "{[/system/dict/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-07-12 16:29:14 -Mapped "{[/system/dict/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/system/dict/update]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.update(com.justdo.system.dict.domain.DictDO)
2018-07-12 16:29:14 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.save(com.justdo.system.dict.domain.DictDO)
2018-07-12 16:29:14 -Mapped "{[/system/dict/view/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.view(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.justdo.system.dict.domain.DictDO> com.justdo.system.dict.controller.DictController.listType()
2018-07-12 16:29:14 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.dict(org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-07-12 16:29:14 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.justdo.system.dict.domain.DictDO> com.justdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-07-12 16:29:14 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.justdo.system.dicttype.domain.DictTypeDO> com.justdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-07-12 16:29:14 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.adddict()
2018-07-12 16:29:14 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.savetype(com.justdo.system.dicttype.domain.DictTypeDO)
2018-07-12 16:29:14 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.add()
2018-07-12 16:29:14 -Mapped "{[/system/file/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-07-12 16:29:14 -Mapped "{[/system/file/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-07-12 16:29:14 -Mapped "{[/system/file/update]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.update(com.justdo.system.file.domain.FileDO)
2018-07-12 16:29:14 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.save(com.justdo.system.file.domain.FileDO)
2018-07-12 16:29:14 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-07-12 16:29:14 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/file/info/{id}]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.info(java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.justdo.system.generator.controller.GeneratorController.list()
2018-07-12 16:29:14 -Mapped "{[/system/generator/batchCode]}" onto public void com.justdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-07-12 16:29:14 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.justdo.system.generator.controller.GeneratorController.generator()
2018-07-12 16:29:14 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.justdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-07-12 16:29:14 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.justdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/log/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.log.controller.LogController.remove(java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.justdo.system.log.controller.LogController.log()
2018-07-12 16:29:14 -Mapped "{[/system/log/list],methods=[GET]}" onto com.justdo.common.domain.PageDO<com.justdo.system.log.domain.LogDO> com.justdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/system/log/batchDel],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.log.controller.LogController.batchDel(java.lang.Long[])
2018-07-12 16:29:14 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/system/menu/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.update(com.justdo.system.menu.domain.MenuDO)
2018-07-12 16:29:14 -Mapped "{[/system/menu/list]}" onto java.util.List<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.save(com.justdo.system.menu.domain.MenuDO)
2018-07-12 16:29:14 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.justdo.common.domain.Tree<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.justdo.common.domain.Tree<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.tree()
2018-07-12 16:29:14 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/notice/add],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.add()
2018-07-12 16:29:14 -Mapped "{[/system/notice/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.remove(java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/system/notice/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.remove(java.lang.Long[])
2018-07-12 16:29:14 -Mapped "{[/system/notice/update]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.update(com.justdo.system.notice.domain.NoticeDO)
2018-07-12 16:29:14 -Mapped "{[/system/notice/read/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.read(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/notice/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/system/notice/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.save(com.justdo.system.notice.domain.NoticeDO)
2018-07-12 16:29:14 -Mapped "{[/system/notice/message],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.message()
2018-07-12 16:29:14 -Mapped "{[/system/notice/selflist],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/system/notice/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/notice],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.Notice()
2018-07-12 16:29:14 -Mapped "{[/system/notice/selfnotice],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.selefNotice()
2018-07-12 16:29:14 -Mapped "{[/system/organ/add],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.add()
2018-07-12 16:29:14 -Mapped "{[/system/organ/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.remove(java.lang.String)
2018-07-12 16:29:14 -Mapped "{[/system/organ/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.remove(java.lang.String[])
2018-07-12 16:29:14 -Mapped "{[/system/organ/update]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.update(com.justdo.system.organ.domain.OrganDO)
2018-07-12 16:29:14 -Mapped "{[/system/organ/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.organ.controller.OrganController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/system/organ/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.save(com.justdo.system.organ.domain.OrganDO)
2018-07-12 16:29:14 -Mapped "{[/system/organ/edit/{organid}],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/organ],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.Organ()
2018-07-12 16:29:14 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.add()
2018-07-12 16:29:14 -Mapped "{[/system/quartzjob/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/system/quartzjob/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-07-12 16:29:14 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.update(com.justdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-07-12 16:29:14 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.save(com.justdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-07-12 16:29:14 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-07-12 16:29:14 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-07-12 16:29:14 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.add()
2018-07-12 16:29:14 -Mapped "{[/system/regexp/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-07-12 16:29:14 -Mapped "{[/system/regexp/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-07-12 16:29:14 -Mapped "{[/system/regexp/update]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.update(com.justdo.system.regexp.domain.RegexpDO)
2018-07-12 16:29:14 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.save(com.justdo.system.regexp.domain.RegexpDO)
2018-07-12 16:29:14 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.Regexp()
2018-07-12 16:29:14 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.add()
2018-07-12 16:29:14 -Mapped "{[/system/role/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.update(com.justdo.system.role.domain.RoleDO)
2018-07-12 16:29:14 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.justdo.system.role.domain.RoleDO> com.justdo.system.role.controller.RoleController.list()
2018-07-12 16:29:14 -Mapped "{[/system/role/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.save(com.justdo.system.role.domain.RoleDO)
2018-07-12 16:29:14 -Mapped "{[/system/role/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.save(java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.role()
2018-07-12 16:29:14 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/role/batchDel],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.batchDel(java.lang.Long[])
2018-07-12 16:29:14 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.main()
2018-07-12 16:29:14 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.login(org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.logout()
2018-07-12 16:29:14 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/login],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-07-12 16:29:14 -Mapped "{[/system/online/list]}" onto public java.util.List<com.justdo.system.user.domain.UserOnline> com.justdo.system.user.controller.SessionController.list()
2018-07-12 16:29:14 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.justdo.system.user.controller.SessionController.online()
2018-07-12 16:29:14 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.justdo.common.utils.R com.justdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-07-12 16:29:14 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.justdo.system.user.controller.SessionController.sessionList()
2018-07-12 16:29:14 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.justdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/user/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.remove(java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/system/user/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.update(com.justdo.system.user.domain.UserDO)
2018-07-12 16:29:14 -Mapped "{[/system/user/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:29:14 -Mapped "{[/system/user/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.save(com.justdo.system.user.domain.UserDO)
2018-07-12 16:29:14 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.justdo.common.domain.Tree<com.justdo.system.dept.domain.DeptDO> com.justdo.system.user.controller.UserController.tree()
2018-07-12 16:29:14 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:29:14 -Mapped "{[/system/user/batchDel],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.batchDel(java.lang.Long[])
2018-07-12 16:29:14 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.treeView()
2018-07-12 16:29:14 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:29:14 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.resetPwd(com.justdo.system.user.domain.UserVO)
2018-07-12 16:29:14 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.updatePeronal(com.justdo.system.user.domain.UserDO)
2018-07-12 16:29:14 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.adminResetPwd(com.justdo.system.user.domain.UserVO)
2018-07-12 16:29:14 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-07-12 16:29:14 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-07-12 16:29:14 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-07-12 16:29:14 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-07-12 16:29:14 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-07-12 16:29:14 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-07-12 16:29:14 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-07-12 16:29:14 -Initializing ExecutorService  'brokerChannelExecutor'
2018-07-12 16:29:15 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:29:07 CST 2018]; root of context hierarchy
2018-07-12 16:29:15 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:29:15 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:29:15 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:29:15 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-07-12 16:29:15 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:29:16 -

Using default security password: 5ee459f9-4d4b-470f-865d-dcbddbf97284

2018-07-12 16:29:16 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-07-12 16:29:16 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@5f596a1a, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@62977afb, org.springframework.security.web.context.SecurityContextPersistenceFilter@3006aef5, org.springframework.security.web.header.HeaderWriterFilter@22ba30b0, org.springframework.security.web.csrf.CsrfFilter@38f3dbbf, org.springframework.security.web.authentication.logout.LogoutFilter@22a8c837, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@62158618, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@61d9dd15, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13edc1bc, org.springframework.security.web.session.SessionManagementFilter@a7fd77f, org.springframework.security.web.access.ExceptionTranslationFilter@733e3c19]
2018-07-12 16:29:17 -Registering beans for JMX exposure on startup
2018-07-12 16:29:17 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-12 16:29:17 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-12 16:29:17 -Starting beans in phase 2147483647
2018-07-12 16:29:17 -Context refreshed
2018-07-12 16:29:17 -Found 1 custom documentation plugin(s)
2018-07-12 16:29:17 -Scanning for api listing references
2018-07-12 16:29:17 -Generating unique operation named: removeUsingPOST_1
2018-07-12 16:29:17 -Generating unique operation named: addUsingGET_1
2018-07-12 16:29:17 -Generating unique operation named: editUsingGET_1
2018-07-12 16:29:17 -Generating unique operation named: listUsingGET_1
2018-07-12 16:29:17 -Generating unique operation named: removeUsingPOST_2
2018-07-12 16:29:17 -Generating unique operation named: removeUsingPOST_3
2018-07-12 16:29:17 -Generating unique operation named: saveUsingPOST_1
2018-07-12 16:29:17 -Generating unique operation named: updateUsingGET_1
2018-07-12 16:29:17 -Generating unique operation named: updateUsingHEAD_1
2018-07-12 16:29:17 -Generating unique operation named: updateUsingPOST_1
2018-07-12 16:29:17 -Generating unique operation named: updateUsingPUT_1
2018-07-12 16:29:17 -Generating unique operation named: updateUsingPATCH_1
2018-07-12 16:29:17 -Generating unique operation named: updateUsingDELETE_1
2018-07-12 16:29:17 -Generating unique operation named: updateUsingOPTIONS_1
2018-07-12 16:29:17 -Generating unique operation named: updateUsingTRACE_1
2018-07-12 16:29:17 -Generating unique operation named: addUsingGET_2
2018-07-12 16:29:17 -Generating unique operation named: editUsingGET_2
2018-07-12 16:29:17 -Generating unique operation named: listUsingGET_2
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_4
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_5
2018-07-12 16:29:18 -Generating unique operation named: saveUsingPOST_2
2018-07-12 16:29:18 -Generating unique operation named: updateUsingGET_2
2018-07-12 16:29:18 -Generating unique operation named: updateUsingHEAD_2
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPOST_2
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPUT_2
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPATCH_2
2018-07-12 16:29:18 -Generating unique operation named: updateUsingDELETE_2
2018-07-12 16:29:18 -Generating unique operation named: updateUsingOPTIONS_2
2018-07-12 16:29:18 -Generating unique operation named: updateUsingTRACE_2
2018-07-12 16:29:18 -Generating unique operation named: addUsingGET_3
2018-07-12 16:29:18 -Generating unique operation named: editUsingGET_3
2018-07-12 16:29:18 -Generating unique operation named: listUsingGET_3
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_6
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_7
2018-07-12 16:29:18 -Generating unique operation named: saveUsingPOST_3
2018-07-12 16:29:18 -Generating unique operation named: updateUsingGET_3
2018-07-12 16:29:18 -Generating unique operation named: updateUsingHEAD_3
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPOST_3
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPUT_3
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPATCH_3
2018-07-12 16:29:18 -Generating unique operation named: updateUsingDELETE_3
2018-07-12 16:29:18 -Generating unique operation named: updateUsingOPTIONS_3
2018-07-12 16:29:18 -Generating unique operation named: updateUsingTRACE_3
2018-07-12 16:29:18 -Generating unique operation named: editUsingGET_4
2018-07-12 16:29:18 -Generating unique operation named: listUsingGET_4
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPOST_4
2018-07-12 16:29:18 -Generating unique operation named: listUsingGET_5
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_8
2018-07-12 16:29:18 -Generating unique operation named: welcomeUsingGET_1
2018-07-12 16:29:18 -Generating unique operation named: addUsingGET_4
2018-07-12 16:29:18 -Generating unique operation named: editUsingGET_5
2018-07-12 16:29:18 -Generating unique operation named: listUsingGET_6
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_9
2018-07-12 16:29:18 -Generating unique operation named: saveUsingPOST_4
2018-07-12 16:29:18 -Generating unique operation named: treeUsingGET_1
2018-07-12 16:29:18 -Generating unique operation named: treeUsingGET_2
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPOST_5
2018-07-12 16:29:18 -Generating unique operation named: batchDelUsingPOST_1
2018-07-12 16:29:18 -Generating unique operation named: editUsingGET_6
2018-07-12 16:29:18 -Generating unique operation named: listUsingGET_7
2018-07-12 16:29:18 -Generating unique operation named: addUsingGET_5
2018-07-12 16:29:18 -Generating unique operation named: editUsingGET_7
2018-07-12 16:29:18 -Generating unique operation named: listUsingGET_8
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_10
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_11
2018-07-12 16:29:18 -Generating unique operation named: saveUsingPOST_5
2018-07-12 16:29:18 -Generating unique operation named: updateUsingGET_4
2018-07-12 16:29:18 -Generating unique operation named: updateUsingHEAD_4
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPOST_6
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPUT_4
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPATCH_4
2018-07-12 16:29:18 -Generating unique operation named: updateUsingDELETE_4
2018-07-12 16:29:18 -Generating unique operation named: updateUsingOPTIONS_4
2018-07-12 16:29:18 -Generating unique operation named: updateUsingTRACE_4
2018-07-12 16:29:18 -Generating unique operation named: addUsingGET_6
2018-07-12 16:29:18 -Generating unique operation named: editUsingGET_8
2018-07-12 16:29:18 -Generating unique operation named: listUsingGET_9
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_12
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_13
2018-07-12 16:29:18 -Generating unique operation named: saveUsingPOST_6
2018-07-12 16:29:18 -Generating unique operation named: updateUsingGET_5
2018-07-12 16:29:18 -Generating unique operation named: updateUsingHEAD_5
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPOST_7
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPUT_5
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPATCH_5
2018-07-12 16:29:18 -Generating unique operation named: updateUsingDELETE_5
2018-07-12 16:29:18 -Generating unique operation named: updateUsingOPTIONS_5
2018-07-12 16:29:18 -Generating unique operation named: updateUsingTRACE_5
2018-07-12 16:29:18 -Generating unique operation named: addUsingGET_7
2018-07-12 16:29:18 -Generating unique operation named: batchDelUsingPOST_2
2018-07-12 16:29:18 -Generating unique operation named: deployUsingPOST_1
2018-07-12 16:29:18 -Generating unique operation named: listUsingGET_10
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_14
2018-07-12 16:29:18 -Generating unique operation named: addUsingGET_8
2018-07-12 16:29:18 -Generating unique operation named: editUsingGET_9
2018-07-12 16:29:18 -Generating unique operation named: infoUsingGET_1
2018-07-12 16:29:18 -Generating unique operation named: infoUsingHEAD_1
2018-07-12 16:29:18 -Generating unique operation named: infoUsingPOST_1
2018-07-12 16:29:18 -Generating unique operation named: infoUsingPUT_1
2018-07-12 16:29:18 -Generating unique operation named: infoUsingPATCH_1
2018-07-12 16:29:18 -Generating unique operation named: infoUsingDELETE_1
2018-07-12 16:29:18 -Generating unique operation named: infoUsingOPTIONS_1
2018-07-12 16:29:18 -Generating unique operation named: infoUsingTRACE_1
2018-07-12 16:29:18 -Generating unique operation named: listUsingGET_11
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_15
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_16
2018-07-12 16:29:18 -Generating unique operation named: saveUsingPOST_7
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPOST_8
2018-07-12 16:29:18 -Generating unique operation named: addUsingGET_9
2018-07-12 16:29:18 -Generating unique operation named: editUsingGET_10
2018-07-12 16:29:18 -Generating unique operation named: listUsingGET_12
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_17
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_18
2018-07-12 16:29:18 -Generating unique operation named: saveUsingPOST_8
2018-07-12 16:29:18 -Generating unique operation named: updateUsingGET_6
2018-07-12 16:29:18 -Generating unique operation named: updateUsingHEAD_6
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPOST_9
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPUT_6
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPATCH_6
2018-07-12 16:29:18 -Generating unique operation named: updateUsingDELETE_6
2018-07-12 16:29:18 -Generating unique operation named: updateUsingOPTIONS_6
2018-07-12 16:29:18 -Generating unique operation named: updateUsingTRACE_6
2018-07-12 16:29:18 -Generating unique operation named: addUsingGET_10
2018-07-12 16:29:18 -Generating unique operation named: batchDelUsingPOST_3
2018-07-12 16:29:18 -Generating unique operation named: editUsingGET_11
2018-07-12 16:29:18 -Generating unique operation named: listUsingGET_13
2018-07-12 16:29:18 -Generating unique operation named: saveUsingPOST_9
2018-07-12 16:29:18 -Generating unique operation named: saveUsingPOST_10
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPOST_10
2018-07-12 16:29:18 -Generating unique operation named: addUsingGET_11
2018-07-12 16:29:18 -Generating unique operation named: editUsingGET_12
2018-07-12 16:29:18 -Generating unique operation named: listUsingGET_14
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_19
2018-07-12 16:29:18 -Generating unique operation named: removeUsingPOST_20
2018-07-12 16:29:18 -Generating unique operation named: updateUsingGET_7
2018-07-12 16:29:18 -Generating unique operation named: updateUsingHEAD_7
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPOST_11
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPUT_7
2018-07-12 16:29:18 -Generating unique operation named: updateUsingPATCH_7
2018-07-12 16:29:18 -Generating unique operation named: updateUsingDELETE_7
2018-07-12 16:29:18 -Generating unique operation named: updateUsingOPTIONS_7
2018-07-12 16:29:18 -Generating unique operation named: updateUsingTRACE_7
2018-07-12 16:29:18 -Generating unique operation named: listUsingGET_15
2018-07-12 16:29:18 -Generating unique operation named: listUsingHEAD_1
2018-07-12 16:29:18 -Generating unique operation named: listUsingPOST_1
2018-07-12 16:29:18 -Generating unique operation named: listUsingPUT_1
2018-07-12 16:29:18 -Generating unique operation named: listUsingPATCH_1
2018-07-12 16:29:18 -Generating unique operation named: listUsingDELETE_1
2018-07-12 16:29:18 -Generating unique operation named: listUsingOPTIONS_1
2018-07-12 16:29:18 -Generating unique operation named: listUsingTRACE_1
2018-07-12 16:29:19 -Generating unique operation named: listUsingGET_16
2018-07-12 16:29:19 -Generating unique operation named: addUsingGET_12
2018-07-12 16:29:19 -Generating unique operation named: batchDelUsingPOST_4
2018-07-12 16:29:19 -Generating unique operation named: editUsingGET_13
2018-07-12 16:29:19 -Generating unique operation named: listUsingGET_17
2018-07-12 16:29:19 -Generating unique operation named: removeUsingPOST_21
2018-07-12 16:29:19 -Generating unique operation named: saveUsingPOST_11
2018-07-12 16:29:19 -Generating unique operation named: treeUsingGET_3
2018-07-12 16:29:19 -Generating unique operation named: treeViewUsingGET_1
2018-07-12 16:29:19 -Generating unique operation named: updateUsingPOST_12
2018-07-12 16:29:19 -Starting Quartz Scheduler now
2018-07-12 16:29:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-07-12 16:29:19 -Starting...
2018-07-12 16:29:19 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-07-12 16:29:19 -Started.
2018-07-12 16:29:19 -Initializing ProtocolHandler ["http-nio-8088"]
2018-07-12 16:29:19 -Starting ProtocolHandler ["http-nio-8088"]
2018-07-12 16:29:19 -Using a shared selector for servlet write/read
2018-07-12 16:29:19 -Tomcat started on port(s): 8088 (http)
2018-07-12 16:29:19 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-07-12 16:29:19 -==> Parameters: 
2018-07-12 16:29:19 -<==      Total: 1
2018-07-12 16:29:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-07-12 16:29:19 -Started JustdoApplication in 13.186 seconds (JVM running for 13.769)
2018-07-12 16:30:09 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-12 16:30:09 -FrameworkServlet 'dispatcherServlet': initialization started
2018-07-12 16:30:09 -FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2018-07-12 16:30:09 -Enabling session validation scheduler...
2018-07-12 16:30:09 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 16:30:09 -HTTP METHOD : GET
2018-07-12 16:30:09 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 16:30:09 -参数 : []
2018-07-12 16:30:09 -请求地址 : http://127.0.0.1:8088/index
2018-07-12 16:30:09 -HTTP METHOD : GET
2018-07-12 16:30:09 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.index
2018-07-12 16:30:09 -参数 : [{}]
2018-07-12 16:30:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 16:30:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 16:30:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-07-12 16:30:09 -<==      Total: 0
2018-07-12 16:30:09 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 16:30:09 -==> Parameters: 1(Long)
2018-07-12 16:30:09 -==> Parameters: 1(Long), 0(String)
2018-07-12 16:30:09 -<==      Total: 1
2018-07-12 16:30:09 -耗时 : 21
2018-07-12 16:30:09 -返回值 : com.justdo.common.utils.PageUtils@770b83bd
2018-07-12 16:30:09 -<==      Total: 30
2018-07-12 16:30:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-07-12 16:30:09 -==> Parameters: 150(Long)
2018-07-12 16:30:09 -<==      Total: 0
2018-07-12 16:30:09 -耗时 : 34
2018-07-12 16:30:09 -返回值 : index
2018-07-12 16:30:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:30:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.justdo.system.user.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p(String), 127.0.0.1(String), 2018-07-12 16:30:09.829(Timestamp)
2018-07-12 16:30:09 -<==    Updates: 1
2018-07-12 16:30:09 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-12 16:30:09 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-12 16:30:09 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-12 16:30:09 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-12 16:30:09 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-12 16:30:09 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-12 16:30:09 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-12 16:30:10 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:30:10 -HTTP METHOD : GET
2018-07-12 16:30:10 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:30:10 -参数 : []
2018-07-12 16:30:10 -耗时 : 1
2018-07-12 16:30:10 -返回值 : main
2018-07-12 16:30:10 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 16:30:10 -HTTP METHOD : GET
2018-07-12 16:30:10 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 16:30:10 -参数 : []
2018-07-12 16:30:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 16:30:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 16:30:10 -<==      Total: 0
2018-07-12 16:30:10 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 16:30:10 -==> Parameters: 1(Long), 0(String)
2018-07-12 16:30:10 -<==      Total: 1
2018-07-12 16:30:10 -耗时 : 5
2018-07-12 16:30:10 -返回值 : com.justdo.common.utils.PageUtils@2ba87fc2
2018-07-12 16:30:10 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:30:10 -HTTP METHOD : GET
2018-07-12 16:30:10 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:30:10 -参数 : []
2018-07-12 16:30:10 -耗时 : 1
2018-07-12 16:30:10 -返回值 : main
2018-07-12 16:30:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:30:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:30:12 -请求地址 : http://127.0.0.1:8088/system/regexp
2018-07-12 16:30:12 -HTTP METHOD : GET
2018-07-12 16:30:12 -请求地址 : http://127.0.0.1:8088/system/regexp/list
2018-07-12 16:30:12 -HTTP METHOD : GET
2018-07-12 16:30:12 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.Regexp
2018-07-12 16:30:12 -参数 : []
2018-07-12 16:30:12 -耗时 : 1
2018-07-12 16:30:12 -返回值 : system/regexp/regexp
2018-07-12 16:30:12 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.list
2018-07-12 16:30:12 -参数 : [{limit=10, offset=0, rname=}]
2018-07-12 16:30:12 -==>  Preparing: select RID,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from SYS_REGEXP order by RID desc 
2018-07-12 16:30:12 -==> Parameters: 
2018-07-12 16:30:12 -<==      Total: 9
2018-07-12 16:30:12 -==>  Preparing: select count(*) from sys_regexp 
2018-07-12 16:30:12 -==> Parameters: 
2018-07-12 16:30:12 -<==      Total: 1
2018-07-12 16:30:12 -耗时 : 11
2018-07-12 16:30:12 -返回值 : com.justdo.common.utils.PageUtils@1df7c0a8
2018-07-12 16:30:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:30:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:30:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:30:14 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 5, active threads = 1, queued tasks = 2, completed tasks = 1]
2018-07-12 16:31:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:06 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-07-12 16:31:06 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-07-12 16:31:06 -==> Parameters: 1(Long)
2018-07-12 16:31:06 -==> Parameters: 1(Long)
2018-07-12 16:31:06 -<==      Total: 57
2018-07-12 16:31:06 -<==      Total: 57
2018-07-12 16:31:06 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:06 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:06 -请求地址 : http://127.0.0.1:8088/system/file
2018-07-12 16:31:06 -HTTP METHOD : GET
2018-07-12 16:31:06 -请求地址 : http://127.0.0.1:8088/system/file/list
2018-07-12 16:31:06 -HTTP METHOD : GET
2018-07-12 16:31:06 -CLASS_METHOD : com.justdo.system.file.controller.FileController.sysFile
2018-07-12 16:31:06 -CLASS_METHOD : com.justdo.system.file.controller.FileController.list
2018-07-12 16:31:06 -参数 : [{limit=12, offset=0, type=}]
2018-07-12 16:31:06 -参数 : [{}]
2018-07-12 16:31:06 -耗时 : 0
2018-07-12 16:31:06 -返回值 : system/file/file
2018-07-12 16:31:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-07-12 16:31:06 -==> Parameters: 0(Integer), 12(Integer)
2018-07-12 16:31:06 -<==      Total: 10
2018-07-12 16:31:06 -==>  Preparing: select count(*) from sys_file 
2018-07-12 16:31:06 -==> Parameters: 
2018-07-12 16:31:06 -<==      Total: 1
2018-07-12 16:31:06 -耗时 : 13
2018-07-12 16:31:06 -返回值 : com.justdo.common.utils.PageUtils@701d3e5e
2018-07-12 16:31:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:08 -请求地址 : http://127.0.0.1:8088/system/role
2018-07-12 16:31:08 -HTTP METHOD : GET
2018-07-12 16:31:08 -CLASS_METHOD : com.justdo.system.role.controller.RoleController.role
2018-07-12 16:31:08 -参数 : []
2018-07-12 16:31:08 -耗时 : 1
2018-07-12 16:31:08 -返回值 : system/role/role
2018-07-12 16:31:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:08 -请求地址 : http://127.0.0.1:8088/system/role/list
2018-07-12 16:31:08 -HTTP METHOD : GET
2018-07-12 16:31:08 -CLASS_METHOD : com.justdo.system.role.controller.RoleController.list
2018-07-12 16:31:08 -参数 : []
2018-07-12 16:31:08 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-07-12 16:31:08 -==> Parameters: 
2018-07-12 16:31:08 -<==      Total: 2
2018-07-12 16:31:08 -耗时 : 4
2018-07-12 16:31:08 -返回值 : [RoleDO{roleId=59, roleName='普通用户', roleSign='null', remark='基本用户权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-07-12 16:31:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:09 -请求地址 : http://127.0.0.1:8088/system/organ
2018-07-12 16:31:09 -HTTP METHOD : GET
2018-07-12 16:31:09 -请求地址 : http://127.0.0.1:8088/system/organ/list
2018-07-12 16:31:09 -CLASS_METHOD : com.justdo.system.organ.controller.OrganController.Organ
2018-07-12 16:31:09 -参数 : []
2018-07-12 16:31:09 -HTTP METHOD : GET
2018-07-12 16:31:09 -CLASS_METHOD : com.justdo.system.organ.controller.OrganController.list
2018-07-12 16:31:09 -耗时 : 0
2018-07-12 16:31:09 -参数 : [{limit=10, offset=0}]
2018-07-12 16:31:09 -返回值 : system/organ/organ
2018-07-12 16:31:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:31:09 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8088/system/organ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list(String), null, 2018-07-12 16:31:09.451(Timestamp)
2018-07-12 16:31:09 -<==    Updates: 1
2018-07-12 16:31:09 -Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.justdo.system.organ.dao.OrganDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy126.list(Unknown Source)
	at com.justdo.system.organ.service.impl.OrganServiceImpl.list(OrganServiceImpl.java:27)
	at com.justdo.system.organ.controller.OrganController.list(OrganController.java:49)
	at com.justdo.system.organ.controller.OrganController$$FastClassBySpringCGLIB$$ade438d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.justdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.justdo.system.organ.controller.OrganController$$EnhancerBySpringCGLIB$$f8491758.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-12 16:31:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:31:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:32:41 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:29:07 CST 2018]; root of context hierarchy
2018-07-12 16:32:41 -Stopping beans in phase 2147483647
2018-07-12 16:32:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-07-12 16:32:41 -Stopping...
2018-07-12 16:32:41 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-07-12 16:32:41 -Stopped.
2018-07-12 16:32:41 -Unregistering JMX-exposed beans on shutdown
2018-07-12 16:32:41 -Unregistering JMX-exposed beans
2018-07-12 16:32:41 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-07-12 16:32:41 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-07-12 16:32:41 -清除SpringContextHolder中的ApplicationContext:org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:29:07 CST 2018]; root of context hierarchy
2018-07-12 16:32:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-07-12 16:32:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-07-12 16:32:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-07-12 16:32:41 -Shutting down Quartz Scheduler
2018-07-12 16:32:41 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-07-12 16:32:41 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-07-12 16:32:41 -{dataSource-1} closed
2018-07-12 16:32:41 -Disabled session validation scheduler.
2018-07-12 16:32:47 -Starting JustdoApplication on localhost with PID 1223 (/Users/chenlin/Documents/GitHub/JustDo-boot/target/classes started by chenlin in /Users/chenlin/Documents/GitHub/JustDo-boot)
2018-07-12 16:32:47 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-07-12 16:32:47 -The following profiles are active: dev
2018-07-12 16:32:48 -HV000001: Hibernate Validator 5.3.6.Final
2018-07-12 16:32:48 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:32:48 CST 2018]; root of context hierarchy
2018-07-12 16:32:49 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-12 16:32:49 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a1bad005] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:32:49 -Bean 'shiroConfig' of type [com.justdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6e166ae6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:32:50 -Bean 'userRealm' of type [com.justdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:32:50 -Bean 'redisManager' of type [com.justdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:32:50 -获取名称为: com.justdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-07-12 16:32:50 -Bean 'redisSessionDAO' of type [com.justdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:32:50 -Bean 'sessionDAO' of type [com.justdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:32:50 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:32:50 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:32:50 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-12 16:32:50 -Tomcat initialized with port(s): 8088 (http)
2018-07-12 16:32:50 -Starting service [Tomcat]
2018-07-12 16:32:50 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-07-12 16:32:50 -Initializing Spring embedded WebApplicationContext
2018-07-12 16:32:50 -Root WebApplicationContext: initialization completed in 2698 ms
2018-07-12 16:32:51 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-12 16:32:51 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-12 16:32:51 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-12 16:32:51 -Mapping filter: 'requestContextFilter' to: [/*]
2018-07-12 16:32:51 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-12 16:32:51 -Filter xssFilter was not registered (disabled)
2018-07-12 16:32:51 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-07-12 16:32:51 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-07-12 16:32:51 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-07-12 16:32:51 -Mapping servlet: 'dispatcherServlet' to [/]
2018-07-12 16:32:51 -{dataSource-1} inited
2018-07-12 16:32:52 -ProcessEngine default created
2018-07-12 16:32:53 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:32:48 CST 2018]; root of context hierarchy
2018-07-12 16:32:53 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-07-12 16:32:53 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-07-12 16:32:53 -Using default implementation for ThreadExecutor
2018-07-12 16:32:53 -Job execution threads will use class loader of thread: main
2018-07-12 16:32:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-12 16:32:53 -Quartz Scheduler v.2.2.1 created.
2018-07-12 16:32:53 -RAMJobStore initialized.
2018-07-12 16:32:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-07-12 16:32:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-07-12 16:32:53 -Quartz scheduler version: 2.2.1
2018-07-12 16:32:53 -JobFactory set to: com.justdo.common.quartz.factory.JobFactory@5d94ac8a
2018-07-12 16:32:55 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.remove(java.lang.String)
2018-07-12 16:32:55 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.ModelController.list(int,int)
2018-07-12 16:32:55 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ModelController.model()
2018-07-12 16:32:55 -Mapped "{[/activiti/model/add]}" onto public void com.justdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-07-12 16:32:55 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.justdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-07-12 16:32:55 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.justdo.activiti.controller.ModelController.getStencilset()
2018-07-12 16:32:55 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.justdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-12 16:32:55 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-07-12 16:32:55 -Mapped "{[/activiti/model/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ModelController.batchDel(java.lang.String[])
2018-07-12 16:32:55 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.justdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-12 16:32:55 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.justdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-07-12 16:32:55 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ProcessController.add()
2018-07-12 16:32:55 -Mapped "{[/activiti/process/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-07-12 16:32:55 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.ProcessController.list(int,int)
2018-07-12 16:32:55 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-07-12 16:32:55 -Mapped "{[/activiti/process/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.batchDel(java.lang.String[])
2018-07-12 16:32:55 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-07-12 16:32:55 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.justdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-12 16:32:55 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.ProcessController.process()
2018-07-12 16:32:55 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.add()
2018-07-12 16:32:55 -Mapped "{[/act/salary/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-07-12 16:32:55 -Mapped "{[/act/salary/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-07-12 16:32:55 -Mapped "{[/act/salary/update]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.update(com.justdo.activiti.domain.SalaryDO)
2018-07-12 16:32:55 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.Salary()
2018-07-12 16:32:55 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.justdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.activiti.controller.SalaryController.saveOrUpdate(com.justdo.activiti.domain.SalaryDO)
2018-07-12 16:32:55 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.justdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-12 16:32:55 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.activiti.controller.TaskController.list(int,int)
2018-07-12 16:32:55 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.TaskController.gotoTask()
2018-07-12 16:32:55 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.justdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-12 16:32:55 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.justdo.activiti.controller.TaskController.todo()
2018-07-12 16:32:55 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.justdo.activiti.vo.TaskVO> com.justdo.activiti.controller.TaskController.todoList()
2018-07-12 16:32:55 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.justdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-12 16:32:55 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.BlogController.blog()
2018-07-12 16:32:55 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.add()
2018-07-12 16:32:55 -Mapped "{[/blog/bContent/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.remove(java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/blog/bContent/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-07-12 16:32:55 -Mapped "{[/blog/bContent/update]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.update(com.justdo.blog.domain.ContentDO)
2018-07-12 16:32:55 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.blog.controller.ContentController.save(com.justdo.blog.domain.ContentDO)
2018-07-12 16:32:55 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.justdo.blog.controller.ContentController.bContent()
2018-07-12 16:32:55 -Mapped "{[/error]}" onto public com.justdo.common.utils.R com.justdo.common.exception.HandleErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-12 16:32:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.justdo.common.exception.HandleErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-12 16:32:55 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/dept/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/system/dept/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-07-12 16:32:55 -Mapped "{[/system/dept/update]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.update(com.justdo.system.dept.domain.DeptDO)
2018-07-12 16:32:55 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.justdo.system.dept.domain.DeptDO> com.justdo.system.dept.controller.DeptController.list()
2018-07-12 16:32:55 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dept.controller.DeptController.save(com.justdo.system.dept.domain.DeptDO)
2018-07-12 16:32:55 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.justdo.common.domain.Tree<com.justdo.system.dept.domain.DeptDO> com.justdo.system.dept.controller.DeptController.tree()
2018-07-12 16:32:55 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.dept()
2018-07-12 16:32:55 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.justdo.system.dept.controller.DeptController.treeView()
2018-07-12 16:32:55 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.add()
2018-07-12 16:32:55 -Mapped "{[/system/dict/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-07-12 16:32:55 -Mapped "{[/system/dict/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/system/dict/update]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.update(com.justdo.system.dict.domain.DictDO)
2018-07-12 16:32:55 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.save(com.justdo.system.dict.domain.DictDO)
2018-07-12 16:32:55 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.justdo.system.dict.domain.DictDO> com.justdo.system.dict.controller.DictController.listType()
2018-07-12 16:32:55 -Mapped "{[/system/dict/view/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.view(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.dict(org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-07-12 16:32:55 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.justdo.system.dict.domain.DictDO> com.justdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-07-12 16:32:55 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.justdo.system.dicttype.domain.DictTypeDO> com.justdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-07-12 16:32:55 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.justdo.system.dict.controller.DictController.adddict()
2018-07-12 16:32:55 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.dict.controller.DictController.savetype(com.justdo.system.dicttype.domain.DictTypeDO)
2018-07-12 16:32:55 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.add()
2018-07-12 16:32:55 -Mapped "{[/system/file/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-07-12 16:32:55 -Mapped "{[/system/file/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-07-12 16:32:55 -Mapped "{[/system/file/update]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.update(com.justdo.system.file.domain.FileDO)
2018-07-12 16:32:55 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.save(com.justdo.system.file.domain.FileDO)
2018-07-12 16:32:55 -Mapped "{[/system/file/info/{id}]}" onto public com.justdo.common.utils.R com.justdo.system.file.controller.FileController.info(java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.justdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-07-12 16:32:55 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.justdo.system.generator.controller.GeneratorController.list()
2018-07-12 16:32:55 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.justdo.system.generator.controller.GeneratorController.generator()
2018-07-12 16:32:55 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.justdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-07-12 16:32:55 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.justdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/generator/batchCode]}" onto public void com.justdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-07-12 16:32:55 -Mapped "{[/system/log/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.log.controller.LogController.remove(java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.justdo.system.log.controller.LogController.log()
2018-07-12 16:32:55 -Mapped "{[/system/log/list],methods=[GET]}" onto com.justdo.common.domain.PageDO<com.justdo.system.log.domain.LogDO> com.justdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/system/log/batchDel],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.log.controller.LogController.batchDel(java.lang.Long[])
2018-07-12 16:32:55 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/system/menu/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.update(com.justdo.system.menu.domain.MenuDO)
2018-07-12 16:32:55 -Mapped "{[/system/menu/list]}" onto java.util.List<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.menu.controller.MenuController.save(com.justdo.system.menu.domain.MenuDO)
2018-07-12 16:32:55 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.justdo.common.domain.Tree<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.justdo.common.domain.Tree<com.justdo.system.menu.domain.MenuDO> com.justdo.system.menu.controller.MenuController.tree()
2018-07-12 16:32:55 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/system/notice/add],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.add()
2018-07-12 16:32:55 -Mapped "{[/system/notice/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.remove(java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/system/notice/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.remove(java.lang.Long[])
2018-07-12 16:32:55 -Mapped "{[/system/notice/update]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.update(com.justdo.system.notice.domain.NoticeDO)
2018-07-12 16:32:55 -Mapped "{[/system/notice/read/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.read(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/notice/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/system/notice/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.notice.controller.NoticeController.save(com.justdo.system.notice.domain.NoticeDO)
2018-07-12 16:32:55 -Mapped "{[/system/notice/message],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.message()
2018-07-12 16:32:55 -Mapped "{[/system/notice],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.Notice()
2018-07-12 16:32:55 -Mapped "{[/system/notice/selfnotice],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.selefNotice()
2018-07-12 16:32:55 -Mapped "{[/system/notice/selflist],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.notice.controller.NoticeController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/system/notice/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.notice.controller.NoticeController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/organ/add],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.add()
2018-07-12 16:32:55 -Mapped "{[/system/organ/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.remove(java.lang.String)
2018-07-12 16:32:55 -Mapped "{[/system/organ/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.remove(java.lang.String[])
2018-07-12 16:32:55 -Mapped "{[/system/organ/update]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.update(com.justdo.system.organ.domain.OrganDO)
2018-07-12 16:32:55 -Mapped "{[/system/organ/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.organ.controller.OrganController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/system/organ/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.organ.controller.OrganController.save(com.justdo.system.organ.domain.OrganDO)
2018-07-12 16:32:55 -Mapped "{[/system/organ],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.Organ()
2018-07-12 16:32:55 -Mapped "{[/system/organ/edit/{organid}],methods=[GET]}" onto java.lang.String com.justdo.system.organ.controller.OrganController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.add()
2018-07-12 16:32:55 -Mapped "{[/system/quartzjob/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/system/quartzjob/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-07-12 16:32:55 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.update(com.justdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-07-12 16:32:55 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.save(com.justdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-07-12 16:32:55 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-07-12 16:32:55 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-07-12 16:32:55 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.add()
2018-07-12 16:32:55 -Mapped "{[/system/regexp/del],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-07-12 16:32:55 -Mapped "{[/system/regexp/batchDel],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-07-12 16:32:55 -Mapped "{[/system/regexp/update]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.update(com.justdo.system.regexp.domain.RegexpDO)
2018-07-12 16:32:55 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.justdo.common.utils.PageUtils com.justdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.justdo.common.utils.R com.justdo.system.regexp.controller.RegexpController.save(com.justdo.system.regexp.domain.RegexpDO)
2018-07-12 16:32:55 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.Regexp()
2018-07-12 16:32:55 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.justdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.add()
2018-07-12 16:32:55 -Mapped "{[/system/role/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.update(com.justdo.system.role.domain.RoleDO)
2018-07-12 16:32:55 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.justdo.system.role.domain.RoleDO> com.justdo.system.role.controller.RoleController.list()
2018-07-12 16:32:55 -Mapped "{[/system/role/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.save(com.justdo.system.role.domain.RoleDO)
2018-07-12 16:32:55 -Mapped "{[/system/role/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.save(java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.role()
2018-07-12 16:32:55 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/role/batchDel],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.role.controller.RoleController.batchDel(java.lang.Long[])
2018-07-12 16:32:55 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.main()
2018-07-12 16:32:55 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/login],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-07-12 16:32:55 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.login(org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.LoginController.logout()
2018-07-12 16:32:55 -Mapped "{[/system/online/list]}" onto public java.util.List<com.justdo.system.user.domain.UserOnline> com.justdo.system.user.controller.SessionController.list()
2018-07-12 16:32:55 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.justdo.system.user.controller.SessionController.online()
2018-07-12 16:32:55 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.justdo.common.utils.R com.justdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-07-12 16:32:55 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.justdo.system.user.controller.SessionController.sessionList()
2018-07-12 16:32:55 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.justdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/user/del],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.remove(java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/system/user/update],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.update(com.justdo.system.user.domain.UserDO)
2018-07-12 16:32:55 -Mapped "{[/system/user/list],methods=[GET]}" onto com.justdo.common.utils.PageUtils com.justdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-12 16:32:55 -Mapped "{[/system/user/save],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.save(com.justdo.system.user.domain.UserDO)
2018-07-12 16:32:55 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.justdo.common.domain.Tree<com.justdo.system.dept.domain.DeptDO> com.justdo.system.user.controller.UserController.tree()
2018-07-12 16:32:55 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-07-12 16:32:55 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.resetPwd(com.justdo.system.user.domain.UserVO)
2018-07-12 16:32:55 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.updatePeronal(com.justdo.system.user.domain.UserDO)
2018-07-12 16:32:55 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.adminResetPwd(com.justdo.system.user.domain.UserVO)
2018-07-12 16:32:55 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-07-12 16:32:55 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-07-12 16:32:55 -Mapped "{[/system/user/batchDel],methods=[POST]}" onto com.justdo.common.utils.R com.justdo.system.user.controller.UserController.batchDel(java.lang.Long[])
2018-07-12 16:32:55 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.justdo.system.user.controller.UserController.treeView()
2018-07-12 16:32:55 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-07-12 16:32:55 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-07-12 16:32:55 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-07-12 16:32:55 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-07-12 16:32:55 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-07-12 16:32:55 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-07-12 16:32:55 -Initializing ExecutorService  'brokerChannelExecutor'
2018-07-12 16:32:56 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jul 12 16:32:48 CST 2018]; root of context hierarchy
2018-07-12 16:32:56 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:32:56 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:32:56 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:32:56 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-07-12 16:32:56 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-12 16:32:57 -

Using default security password: f6cf72c2-87bf-40ba-ba24-c7d04b1d9fe1

2018-07-12 16:32:57 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-07-12 16:32:57 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@7bdddfa4, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e12fdcf, org.springframework.security.web.context.SecurityContextPersistenceFilter@356ab368, org.springframework.security.web.header.HeaderWriterFilter@2e564c78, org.springframework.security.web.csrf.CsrfFilter@68ea1eb5, org.springframework.security.web.authentication.logout.LogoutFilter@53b9952f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c555e1e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33986be7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d0fc0bc, org.springframework.security.web.session.SessionManagementFilter@43cf97a8, org.springframework.security.web.access.ExceptionTranslationFilter@22fe90df]
2018-07-12 16:32:58 -Registering beans for JMX exposure on startup
2018-07-12 16:32:58 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-12 16:32:58 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-12 16:32:58 -Starting beans in phase 2147483647
2018-07-12 16:32:58 -Context refreshed
2018-07-12 16:32:58 -Found 1 custom documentation plugin(s)
2018-07-12 16:32:58 -Scanning for api listing references
2018-07-12 16:32:58 -Generating unique operation named: removeUsingPOST_1
2018-07-12 16:32:58 -Generating unique operation named: addUsingGET_1
2018-07-12 16:32:58 -Generating unique operation named: editUsingGET_1
2018-07-12 16:32:58 -Generating unique operation named: listUsingGET_1
2018-07-12 16:32:58 -Generating unique operation named: removeUsingPOST_2
2018-07-12 16:32:58 -Generating unique operation named: removeUsingPOST_3
2018-07-12 16:32:58 -Generating unique operation named: saveUsingPOST_1
2018-07-12 16:32:58 -Generating unique operation named: updateUsingGET_1
2018-07-12 16:32:58 -Generating unique operation named: updateUsingHEAD_1
2018-07-12 16:32:58 -Generating unique operation named: updateUsingPOST_1
2018-07-12 16:32:58 -Generating unique operation named: updateUsingPUT_1
2018-07-12 16:32:58 -Generating unique operation named: updateUsingPATCH_1
2018-07-12 16:32:58 -Generating unique operation named: updateUsingDELETE_1
2018-07-12 16:32:58 -Generating unique operation named: updateUsingOPTIONS_1
2018-07-12 16:32:58 -Generating unique operation named: updateUsingTRACE_1
2018-07-12 16:32:58 -Generating unique operation named: addUsingGET_2
2018-07-12 16:32:58 -Generating unique operation named: editUsingGET_2
2018-07-12 16:32:58 -Generating unique operation named: listUsingGET_2
2018-07-12 16:32:58 -Generating unique operation named: removeUsingPOST_4
2018-07-12 16:32:58 -Generating unique operation named: removeUsingPOST_5
2018-07-12 16:32:58 -Generating unique operation named: saveUsingPOST_2
2018-07-12 16:32:58 -Generating unique operation named: updateUsingGET_2
2018-07-12 16:32:58 -Generating unique operation named: updateUsingHEAD_2
2018-07-12 16:32:58 -Generating unique operation named: updateUsingPOST_2
2018-07-12 16:32:58 -Generating unique operation named: updateUsingPUT_2
2018-07-12 16:32:58 -Generating unique operation named: updateUsingPATCH_2
2018-07-12 16:32:58 -Generating unique operation named: updateUsingDELETE_2
2018-07-12 16:32:58 -Generating unique operation named: updateUsingOPTIONS_2
2018-07-12 16:32:58 -Generating unique operation named: updateUsingTRACE_2
2018-07-12 16:32:58 -Generating unique operation named: addUsingGET_3
2018-07-12 16:32:58 -Generating unique operation named: editUsingGET_3
2018-07-12 16:32:58 -Generating unique operation named: listUsingGET_3
2018-07-12 16:32:58 -Generating unique operation named: removeUsingPOST_6
2018-07-12 16:32:58 -Generating unique operation named: removeUsingPOST_7
2018-07-12 16:32:58 -Generating unique operation named: saveUsingPOST_3
2018-07-12 16:32:58 -Generating unique operation named: updateUsingGET_3
2018-07-12 16:32:58 -Generating unique operation named: updateUsingHEAD_3
2018-07-12 16:32:58 -Generating unique operation named: updateUsingPOST_3
2018-07-12 16:32:58 -Generating unique operation named: updateUsingPUT_3
2018-07-12 16:32:58 -Generating unique operation named: updateUsingPATCH_3
2018-07-12 16:32:58 -Generating unique operation named: updateUsingDELETE_3
2018-07-12 16:32:58 -Generating unique operation named: updateUsingOPTIONS_3
2018-07-12 16:32:58 -Generating unique operation named: updateUsingTRACE_3
2018-07-12 16:32:59 -Generating unique operation named: editUsingGET_4
2018-07-12 16:32:59 -Generating unique operation named: listUsingGET_4
2018-07-12 16:32:59 -Generating unique operation named: updateUsingPOST_4
2018-07-12 16:32:59 -Generating unique operation named: listUsingGET_5
2018-07-12 16:32:59 -Generating unique operation named: removeUsingPOST_8
2018-07-12 16:32:59 -Generating unique operation named: welcomeUsingGET_1
2018-07-12 16:32:59 -Generating unique operation named: addUsingGET_4
2018-07-12 16:32:59 -Generating unique operation named: editUsingGET_5
2018-07-12 16:32:59 -Generating unique operation named: listUsingGET_6
2018-07-12 16:32:59 -Generating unique operation named: removeUsingPOST_9
2018-07-12 16:32:59 -Generating unique operation named: saveUsingPOST_4
2018-07-12 16:32:59 -Generating unique operation named: treeUsingGET_1
2018-07-12 16:32:59 -Generating unique operation named: treeUsingGET_2
2018-07-12 16:32:59 -Generating unique operation named: updateUsingPOST_5
2018-07-12 16:32:59 -Generating unique operation named: batchDelUsingPOST_1
2018-07-12 16:32:59 -Generating unique operation named: editUsingGET_6
2018-07-12 16:32:59 -Generating unique operation named: listUsingGET_7
2018-07-12 16:32:59 -Generating unique operation named: addUsingGET_5
2018-07-12 16:32:59 -Generating unique operation named: editUsingGET_7
2018-07-12 16:32:59 -Generating unique operation named: listUsingGET_8
2018-07-12 16:32:59 -Generating unique operation named: removeUsingPOST_10
2018-07-12 16:32:59 -Generating unique operation named: removeUsingPOST_11
2018-07-12 16:32:59 -Generating unique operation named: saveUsingPOST_5
2018-07-12 16:32:59 -Generating unique operation named: updateUsingGET_4
2018-07-12 16:32:59 -Generating unique operation named: updateUsingHEAD_4
2018-07-12 16:32:59 -Generating unique operation named: updateUsingPOST_6
2018-07-12 16:32:59 -Generating unique operation named: updateUsingPUT_4
2018-07-12 16:32:59 -Generating unique operation named: updateUsingPATCH_4
2018-07-12 16:32:59 -Generating unique operation named: updateUsingDELETE_4
2018-07-12 16:32:59 -Generating unique operation named: updateUsingOPTIONS_4
2018-07-12 16:32:59 -Generating unique operation named: updateUsingTRACE_4
2018-07-12 16:32:59 -Generating unique operation named: addUsingGET_6
2018-07-12 16:32:59 -Generating unique operation named: editUsingGET_8
2018-07-12 16:32:59 -Generating unique operation named: listUsingGET_9
2018-07-12 16:32:59 -Generating unique operation named: removeUsingPOST_12
2018-07-12 16:32:59 -Generating unique operation named: removeUsingPOST_13
2018-07-12 16:32:59 -Generating unique operation named: saveUsingPOST_6
2018-07-12 16:32:59 -Generating unique operation named: updateUsingGET_5
2018-07-12 16:32:59 -Generating unique operation named: updateUsingHEAD_5
2018-07-12 16:32:59 -Generating unique operation named: updateUsingPOST_7
2018-07-12 16:32:59 -Generating unique operation named: updateUsingPUT_5
2018-07-12 16:32:59 -Generating unique operation named: updateUsingPATCH_5
2018-07-12 16:32:59 -Generating unique operation named: updateUsingDELETE_5
2018-07-12 16:32:59 -Generating unique operation named: updateUsingOPTIONS_5
2018-07-12 16:32:59 -Generating unique operation named: updateUsingTRACE_5
2018-07-12 16:32:59 -Generating unique operation named: addUsingGET_7
2018-07-12 16:32:59 -Generating unique operation named: batchDelUsingPOST_2
2018-07-12 16:32:59 -Generating unique operation named: deployUsingPOST_1
2018-07-12 16:32:59 -Generating unique operation named: listUsingGET_10
2018-07-12 16:32:59 -Generating unique operation named: removeUsingPOST_14
2018-07-12 16:32:59 -Generating unique operation named: addUsingGET_8
2018-07-12 16:32:59 -Generating unique operation named: editUsingGET_9
2018-07-12 16:32:59 -Generating unique operation named: infoUsingGET_1
2018-07-12 16:32:59 -Generating unique operation named: infoUsingHEAD_1
2018-07-12 16:32:59 -Generating unique operation named: infoUsingPOST_1
2018-07-12 16:32:59 -Generating unique operation named: infoUsingPUT_1
2018-07-12 16:32:59 -Generating unique operation named: infoUsingPATCH_1
2018-07-12 16:32:59 -Generating unique operation named: infoUsingDELETE_1
2018-07-12 16:32:59 -Generating unique operation named: infoUsingOPTIONS_1
2018-07-12 16:32:59 -Generating unique operation named: infoUsingTRACE_1
2018-07-12 16:32:59 -Generating unique operation named: listUsingGET_11
2018-07-12 16:32:59 -Generating unique operation named: removeUsingPOST_15
2018-07-12 16:32:59 -Generating unique operation named: removeUsingPOST_16
2018-07-12 16:32:59 -Generating unique operation named: saveUsingPOST_7
2018-07-12 16:32:59 -Generating unique operation named: updateUsingPOST_8
2018-07-12 16:32:59 -Generating unique operation named: addUsingGET_9
2018-07-12 16:32:59 -Generating unique operation named: editUsingGET_10
2018-07-12 16:32:59 -Generating unique operation named: listUsingGET_12
2018-07-12 16:32:59 -Generating unique operation named: removeUsingPOST_17
2018-07-12 16:32:59 -Generating unique operation named: removeUsingPOST_18
2018-07-12 16:32:59 -Generating unique operation named: saveUsingPOST_8
2018-07-12 16:32:59 -Generating unique operation named: updateUsingGET_6
2018-07-12 16:32:59 -Generating unique operation named: updateUsingHEAD_6
2018-07-12 16:32:59 -Generating unique operation named: updateUsingPOST_9
2018-07-12 16:32:59 -Generating unique operation named: updateUsingPUT_6
2018-07-12 16:32:59 -Generating unique operation named: updateUsingPATCH_6
2018-07-12 16:32:59 -Generating unique operation named: updateUsingDELETE_6
2018-07-12 16:32:59 -Generating unique operation named: updateUsingOPTIONS_6
2018-07-12 16:32:59 -Generating unique operation named: updateUsingTRACE_6
2018-07-12 16:32:59 -Generating unique operation named: addUsingGET_10
2018-07-12 16:32:59 -Generating unique operation named: batchDelUsingPOST_3
2018-07-12 16:32:59 -Generating unique operation named: editUsingGET_11
2018-07-12 16:32:59 -Generating unique operation named: listUsingGET_13
2018-07-12 16:32:59 -Generating unique operation named: saveUsingPOST_9
2018-07-12 16:32:59 -Generating unique operation named: saveUsingPOST_10
2018-07-12 16:32:59 -Generating unique operation named: updateUsingPOST_10
2018-07-12 16:32:59 -Generating unique operation named: addUsingGET_11
2018-07-12 16:32:59 -Generating unique operation named: editUsingGET_12
2018-07-12 16:32:59 -Generating unique operation named: listUsingGET_14
2018-07-12 16:32:59 -Generating unique operation named: removeUsingPOST_19
2018-07-12 16:33:00 -Generating unique operation named: removeUsingPOST_20
2018-07-12 16:33:00 -Generating unique operation named: updateUsingGET_7
2018-07-12 16:33:00 -Generating unique operation named: updateUsingHEAD_7
2018-07-12 16:33:00 -Generating unique operation named: updateUsingPOST_11
2018-07-12 16:33:00 -Generating unique operation named: updateUsingPUT_7
2018-07-12 16:33:00 -Generating unique operation named: updateUsingPATCH_7
2018-07-12 16:33:00 -Generating unique operation named: updateUsingDELETE_7
2018-07-12 16:33:00 -Generating unique operation named: updateUsingOPTIONS_7
2018-07-12 16:33:00 -Generating unique operation named: updateUsingTRACE_7
2018-07-12 16:33:00 -Generating unique operation named: listUsingGET_15
2018-07-12 16:33:00 -Generating unique operation named: listUsingHEAD_1
2018-07-12 16:33:00 -Generating unique operation named: listUsingPOST_1
2018-07-12 16:33:00 -Generating unique operation named: listUsingPUT_1
2018-07-12 16:33:00 -Generating unique operation named: listUsingPATCH_1
2018-07-12 16:33:00 -Generating unique operation named: listUsingDELETE_1
2018-07-12 16:33:00 -Generating unique operation named: listUsingOPTIONS_1
2018-07-12 16:33:00 -Generating unique operation named: listUsingTRACE_1
2018-07-12 16:33:00 -Generating unique operation named: listUsingGET_16
2018-07-12 16:33:00 -Generating unique operation named: addUsingGET_12
2018-07-12 16:33:00 -Generating unique operation named: batchDelUsingPOST_4
2018-07-12 16:33:00 -Generating unique operation named: editUsingGET_13
2018-07-12 16:33:00 -Generating unique operation named: listUsingGET_17
2018-07-12 16:33:00 -Generating unique operation named: removeUsingPOST_21
2018-07-12 16:33:00 -Generating unique operation named: saveUsingPOST_11
2018-07-12 16:33:00 -Generating unique operation named: treeUsingGET_3
2018-07-12 16:33:00 -Generating unique operation named: treeViewUsingGET_1
2018-07-12 16:33:00 -Generating unique operation named: updateUsingPOST_12
2018-07-12 16:33:00 -Starting Quartz Scheduler now
2018-07-12 16:33:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-07-12 16:33:00 -Starting...
2018-07-12 16:33:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-07-12 16:33:00 -Started.
2018-07-12 16:33:00 -Initializing ProtocolHandler ["http-nio-8088"]
2018-07-12 16:33:00 -Starting ProtocolHandler ["http-nio-8088"]
2018-07-12 16:33:00 -Using a shared selector for servlet write/read
2018-07-12 16:33:00 -Tomcat started on port(s): 8088 (http)
2018-07-12 16:33:00 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-07-12 16:33:00 -==> Parameters: 
2018-07-12 16:33:00 -<==      Total: 1
2018-07-12 16:33:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-07-12 16:33:00 -Started JustdoApplication in 13.26 seconds (JVM running for 13.871)
2018-07-12 16:33:55 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2018-07-12 16:37:01 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-12 16:37:01 -FrameworkServlet 'dispatcherServlet': initialization started
2018-07-12 16:37:01 -FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2018-07-12 16:37:01 -Enabling session validation scheduler...
2018-07-12 16:37:02 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 16:37:02 -HTTP METHOD : GET
2018-07-12 16:37:02 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 16:37:02 -参数 : []
2018-07-12 16:37:02 -请求地址 : http://127.0.0.1:8088/index
2018-07-12 16:37:02 -HTTP METHOD : GET
2018-07-12 16:37:02 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.index
2018-07-12 16:37:02 -参数 : [{}]
2018-07-12 16:37:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 16:37:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 16:37:02 -<==      Total: 0
2018-07-12 16:37:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-07-12 16:37:02 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 16:37:02 -==> Parameters: 1(Long), 0(String)
2018-07-12 16:37:02 -==> Parameters: 1(Long)
2018-07-12 16:37:02 -<==      Total: 1
2018-07-12 16:37:02 -耗时 : 20
2018-07-12 16:37:02 -返回值 : com.justdo.common.utils.PageUtils@172eb7f
2018-07-12 16:37:02 -<==      Total: 30
2018-07-12 16:37:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-07-12 16:37:02 -==> Parameters: 150(Long)
2018-07-12 16:37:02 -<==      Total: 0
2018-07-12 16:37:02 -耗时 : 29
2018-07-12 16:37:02 -返回值 : index
2018-07-12 16:37:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:37:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.justdo.system.user.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p(String), 127.0.0.1(String), 2018-07-12 16:37:02.125(Timestamp)
2018-07-12 16:37:02 -<==    Updates: 1
2018-07-12 16:37:02 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-12 16:37:02 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-12 16:37:02 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-12 16:37:02 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-12 16:37:02 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-12 16:37:02 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-12 16:37:02 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-12 16:37:02 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:37:02 -HTTP METHOD : GET
2018-07-12 16:37:02 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:37:02 -参数 : []
2018-07-12 16:37:02 -耗时 : 0
2018-07-12 16:37:02 -返回值 : main
2018-07-12 16:37:02 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 16:37:02 -HTTP METHOD : GET
2018-07-12 16:37:02 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 16:37:02 -参数 : []
2018-07-12 16:37:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 16:37:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 16:37:02 -<==      Total: 0
2018-07-12 16:37:02 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 16:37:02 -==> Parameters: 1(Long), 0(String)
2018-07-12 16:37:02 -<==      Total: 1
2018-07-12 16:37:02 -耗时 : 10
2018-07-12 16:37:02 -返回值 : com.justdo.common.utils.PageUtils@11dfa3fb
2018-07-12 16:37:02 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:37:02 -HTTP METHOD : GET
2018-07-12 16:37:02 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:37:02 -参数 : []
2018-07-12 16:37:02 -耗时 : 1
2018-07-12 16:37:02 -返回值 : main
2018-07-12 16:37:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:07 -请求地址 : http://127.0.0.1:8088/system/organ/list
2018-07-12 16:37:07 -HTTP METHOD : GET
2018-07-12 16:37:07 -CLASS_METHOD : com.justdo.system.organ.controller.OrganController.list
2018-07-12 16:37:07 -参数 : [{limit=10, offset=0}]
2018-07-12 16:37:07 -请求地址 : http://127.0.0.1:8088/system/organ
2018-07-12 16:37:07 -HTTP METHOD : GET
2018-07-12 16:37:07 -CLASS_METHOD : com.justdo.system.organ.controller.OrganController.Organ
2018-07-12 16:37:07 -参数 : []
2018-07-12 16:37:07 -耗时 : 0
2018-07-12 16:37:07 -返回值 : system/organ/organ
2018-07-12 16:37:07 -==>  Preparing: select `ORGANID`,`ORGANPID`,`ORGANNAME`,`AREAID`,`ORGANCODE`,`ORGANALIAS`,`POSTCODE`,`ADDRESS`,`TELEPHONE`,`FAX`,`ISVALIDATION`,`ORGANMAN`,`ORGANMANID`,`REMARK` from sys_organ order by ORGANID desc limit ?, ? 
2018-07-12 16:37:07 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:37:07 -<==      Total: 1
2018-07-12 16:37:07 -==>  Preparing: select count(*) from sys_organ 
2018-07-12 16:37:07 -==> Parameters: 
2018-07-12 16:37:07 -<==      Total: 1
2018-07-12 16:37:07 -耗时 : 10
2018-07-12 16:37:07 -返回值 : com.justdo.common.utils.PageUtils@a96037c
2018-07-12 16:37:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:13 -请求地址 : http://127.0.0.1:8088/system/organ/edit/79a9ac14832c11e8b4111cd3cf927078
2018-07-12 16:37:13 -HTTP METHOD : GET
2018-07-12 16:37:13 -CLASS_METHOD : com.justdo.system.organ.controller.OrganController.edit
2018-07-12 16:37:13 -参数 : [79a9ac14832c11e8b4111cd3cf927078, {}]
2018-07-12 16:37:13 -==>  Preparing: select `ORGANID`,`ORGANPID`,`ORGANNAME`,`AREAID`,`ORGANCODE`,`ORGANALIAS`,`POSTCODE`,`ADDRESS`,`TELEPHONE`,`FAX`,`ISVALIDATION`,`ORGANMAN`,`ORGANMANID`,`REMARK` from sys_organ where ORGANID = ? 
2018-07-12 16:37:13 -==> Parameters: 79a9ac14832c11e8b4111cd3cf927078(String)
2018-07-12 16:37:13 -<==      Total: 1
2018-07-12 16:37:13 -耗时 : 3
2018-07-12 16:37:13 -返回值 : system/organ/edit
2018-07-12 16:37:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:34 -请求地址 : http://127.0.0.1:8088/system/menu/
2018-07-12 16:37:34 -HTTP METHOD : GET
2018-07-12 16:37:34 -CLASS_METHOD : com.justdo.system.menu.controller.MenuController.menu
2018-07-12 16:37:34 -参数 : [{}]
2018-07-12 16:37:34 -耗时 : 0
2018-07-12 16:37:34 -返回值 : system/menu/menu
2018-07-12 16:37:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:34 -请求地址 : http://127.0.0.1:8088/system/menu/list
2018-07-12 16:37:34 -HTTP METHOD : GET
2018-07-12 16:37:34 -CLASS_METHOD : com.justdo.system.menu.controller.MenuController.list
2018-07-12 16:37:34 -参数 : [{sort=order_num}]
2018-07-12 16:37:34 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-07-12 16:37:34 -==> Parameters: 
2018-07-12 16:37:34 -<==      Total: 72
2018-07-12 16:37:34 -耗时 : 18
2018-07-12 16:37:34 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:del', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:del', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchDel', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='system/notice', perms='system:notice:notice', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='system/notice/del', perms='system:notice:del', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='system/notice/batchDel', perms='system:notice:batchDel', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='system/notice/selfnotice', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:del', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='system:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:del', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchDel', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:del', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='system/notice/add', perms='system:notice:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=3, name='机构管理', url='system/organ', perms='system:organ:organ', type=1, icon='fa fa-sitemap', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/del', perms='system:dept:del', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='system/notice/edit', perms='system:notice:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=109, name='添加', url='system/organ/add', perms='system:organ:add', type=2, icon='fa fa-plus', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=109, name='修改', url='system/organ/edit', perms='system:organ:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/del', perms='system:dict:del', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/del', perms='system:regexp:del', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=109, name='删除', url='system/organ/del', perms='system:organ:del', type=2, icon='fa fa-trash-o', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchDel', perms='system:dict:batchDel', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=109, name='批量删除', url='system/organ/batchDel', perms='system:organ:batchDel', type=2, icon='fa fa-close', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=105, name='批量删除', url='system/regexp/batchDel', perms='system:regexp:batchDel', type=2, icon='fa fa-close', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-07-12 16:37:37 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:37 -请求地址 : http://127.0.0.1:8088/system/dept
2018-07-12 16:37:37 -HTTP METHOD : GET
2018-07-12 16:37:37 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.dept
2018-07-12 16:37:37 -参数 : []
2018-07-12 16:37:37 -耗时 : 1
2018-07-12 16:37:37 -返回值 : system/dept/dept
2018-07-12 16:37:38 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:38 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:38 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:38 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:38 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:38 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:38 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:37:38 -请求地址 : http://127.0.0.1:8088/system/dept/list
2018-07-12 16:37:38 -HTTP METHOD : GET
2018-07-12 16:37:38 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.list
2018-07-12 16:37:38 -参数 : []
2018-07-12 16:37:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-07-12 16:37:38 -==> Parameters: 
2018-07-12 16:37:38 -<==      Total: 10
2018-07-12 16:37:38 -耗时 : 6
2018-07-12 16:37:38 -返回值 : [DeptDO{deptId=15, parentId=13, name='测试二部', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='测试一部', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='测试部', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='产品部', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='销售一部', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='销售部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='研发二部', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='研發一部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='研发部', orderNum=1, delFlag=1}]
2018-07-12 16:38:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:38:32 -请求地址 : http://127.0.0.1:8088/system/user/
2018-07-12 16:38:32 -HTTP METHOD : GET
2018-07-12 16:38:32 -CLASS_METHOD : com.justdo.system.user.controller.UserController.user
2018-07-12 16:38:32 -参数 : [{}]
2018-07-12 16:38:32 -耗时 : 1
2018-07-12 16:38:32 -返回值 : system/user/user
2018-07-12 16:38:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:38:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:38:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:38:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:38:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:38:32 -请求地址 : http://127.0.0.1:8088/system/dept/tree
2018-07-12 16:38:32 -HTTP METHOD : GET
2018-07-12 16:38:32 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.tree
2018-07-12 16:38:32 -参数 : []
2018-07-12 16:38:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-07-12 16:38:32 -==> Parameters: 
2018-07-12 16:38:32 -<==      Total: 10
2018-07-12 16:38:32 -耗时 : 5
2018-07-12 16:38:32 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"测试二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"测试一部"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"测试部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"销售一部"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"研发二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"研發一部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-07-12 16:38:32 -请求地址 : http://127.0.0.1:8088/system/user/list
2018-07-12 16:38:32 -HTTP METHOD : GET
2018-07-12 16:38:32 -CLASS_METHOD : com.justdo.system.user.controller.UserController.list
2018-07-12 16:38:32 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-07-12 16:38:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-07-12 16:38:32 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:38:32 -<==      Total: 10
2018-07-12 16:38:32 -==>  Preparing: select count(*) from sys_user 
2018-07-12 16:38:32 -==> Parameters: 
2018-07-12 16:38:32 -<==      Total: 1
2018-07-12 16:38:32 -耗时 : 14
2018-07-12 16:38:32 -返回值 : com.justdo.common.utils.PageUtils@4d5bb226
2018-07-12 16:38:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:38:34 -请求地址 : http://127.0.0.1:8088/system/user/add
2018-07-12 16:38:34 -HTTP METHOD : GET
2018-07-12 16:38:34 -CLASS_METHOD : com.justdo.system.user.controller.UserController.add
2018-07-12 16:38:34 -参数 : [{}]
2018-07-12 16:38:34 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-07-12 16:38:34 -==> Parameters: 
2018-07-12 16:38:34 -<==      Total: 2
2018-07-12 16:38:34 -耗时 : 7
2018-07-12 16:38:34 -返回值 : system/user/add
2018-07-12 16:38:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:38:34 -==> Parameters: 1(Long), admin(String), 添加用户(String), 7(Integer), com.justdo.system.user.controller.UserController.add()(String), null, 127.0.0.1(String), 2018-07-12 16:38:34.6(Timestamp)
2018-07-12 16:38:34 -<==    Updates: 1
2018-07-12 16:38:36 -请求地址 : http://127.0.0.1:8088/system/dept/treeView
2018-07-12 16:38:36 -HTTP METHOD : GET
2018-07-12 16:38:36 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.treeView
2018-07-12 16:38:36 -参数 : []
2018-07-12 16:38:36 -耗时 : 0
2018-07-12 16:38:36 -返回值 : system/dept/deptTree
2018-07-12 16:38:36 -请求地址 : http://127.0.0.1:8088/system/dept/tree
2018-07-12 16:38:36 -HTTP METHOD : GET
2018-07-12 16:38:36 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.tree
2018-07-12 16:38:36 -参数 : []
2018-07-12 16:38:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-07-12 16:38:36 -==> Parameters: 
2018-07-12 16:38:36 -<==      Total: 10
2018-07-12 16:38:36 -耗时 : 2
2018-07-12 16:38:36 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"测试二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"测试一部"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"测试部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"销售一部"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"研发二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"研發一部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-07-12 16:38:42 -请求地址 : http://127.0.0.1:8088/system/dept/treeView
2018-07-12 16:38:42 -HTTP METHOD : GET
2018-07-12 16:38:42 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.treeView
2018-07-12 16:38:42 -参数 : []
2018-07-12 16:38:42 -耗时 : 0
2018-07-12 16:38:42 -返回值 : system/dept/deptTree
2018-07-12 16:38:42 -请求地址 : http://127.0.0.1:8088/system/dept/tree
2018-07-12 16:38:42 -HTTP METHOD : GET
2018-07-12 16:38:42 -CLASS_METHOD : com.justdo.system.dept.controller.DeptController.tree
2018-07-12 16:38:42 -参数 : []
2018-07-12 16:38:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-07-12 16:38:42 -==> Parameters: 
2018-07-12 16:38:42 -<==      Total: 10
2018-07-12 16:38:42 -耗时 : 2
2018-07-12 16:38:42 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"测试二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"测试一部"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"测试部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"销售一部"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"研发二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"研發一部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-07-12 16:43:55 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 16:43:55 -HTTP METHOD : GET
2018-07-12 16:43:55 -请求地址 : http://127.0.0.1:8088/index
2018-07-12 16:43:55 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 16:43:55 -HTTP METHOD : GET
2018-07-12 16:43:55 -参数 : []
2018-07-12 16:43:55 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.index
2018-07-12 16:43:55 -参数 : [{}]
2018-07-12 16:43:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 16:43:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 16:43:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-07-12 16:43:55 -==> Parameters: 1(Long)
2018-07-12 16:43:55 -<==      Total: 0
2018-07-12 16:43:55 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 16:43:55 -==> Parameters: 1(Long), 0(String)
2018-07-12 16:43:55 -<==      Total: 1
2018-07-12 16:43:55 -耗时 : 6
2018-07-12 16:43:55 -返回值 : com.justdo.common.utils.PageUtils@1beed0f3
2018-07-12 16:43:55 -<==      Total: 30
2018-07-12 16:43:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-07-12 16:43:55 -==> Parameters: 150(Long)
2018-07-12 16:43:55 -<==      Total: 0
2018-07-12 16:43:55 -耗时 : 9
2018-07-12 16:43:55 -返回值 : index
2018-07-12 16:43:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-07-12 16:43:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 9(Integer), com.justdo.system.user.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/system/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-map-o","url":"/system/regexp"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"105","parentId":"1","text":"正则管理"},{"attributes":{"icon":"fa fa-folder-open","url":"/system/file"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"system/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-sitemap","url":"system/organ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"3","text":"机构管理"},{"attributes":{"icon":"fa fa-th-list","url":"system/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/dept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"system/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"system/quartzjob"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"system/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"system/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"system/notice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"system/notice/selfnotice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"图表管理"}],"name":"超级管理员","p(String), 127.0.0.1(String), 2018-07-12 16:43:55.791(Timestamp)
2018-07-12 16:43:55 -<==    Updates: 1
2018-07-12 16:43:55 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:43:55 -HTTP METHOD : GET
2018-07-12 16:43:55 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:43:55 -参数 : []
2018-07-12 16:43:55 -耗时 : 0
2018-07-12 16:43:55 -返回值 : main
2018-07-12 16:43:55 -请求地址 : http://127.0.0.1:8088/system/notice/message
2018-07-12 16:43:55 -HTTP METHOD : GET
2018-07-12 16:43:55 -CLASS_METHOD : com.justdo.system.notice.controller.NoticeController.message
2018-07-12 16:43:55 -参数 : []
2018-07-12 16:43:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-07-12 16:43:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-07-12 16:43:55 -<==      Total: 0
2018-07-12 16:43:55 -==>  Preparing: select count(*) from oa_notice_record r right JOIN oa_notice n on r.notice_id = n.id where r.user_id =? and r.is_read = ? 
2018-07-12 16:43:55 -==> Parameters: 1(Long), 0(String)
2018-07-12 16:43:55 -<==      Total: 1
2018-07-12 16:43:55 -耗时 : 4
2018-07-12 16:43:55 -返回值 : com.justdo.common.utils.PageUtils@7488632c
2018-07-12 16:43:55 -请求地址 : http://127.0.0.1:8088/main
2018-07-12 16:43:55 -HTTP METHOD : GET
2018-07-12 16:43:55 -CLASS_METHOD : com.justdo.system.user.controller.LoginController.main
2018-07-12 16:43:55 -参数 : []
2018-07-12 16:43:55 -耗时 : 0
2018-07-12 16:43:55 -返回值 : main
2018-07-12 16:43:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:43:57 -请求地址 : http://127.0.0.1:8088/system/dict
2018-07-12 16:43:57 -HTTP METHOD : GET
2018-07-12 16:43:57 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.dict
2018-07-12 16:43:57 -参数 : [{}]
2018-07-12 16:43:57 -耗时 : 0
2018-07-12 16:43:57 -返回值 : system/dict/dict
2018-07-12 16:43:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:43:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:43:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:43:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:43:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:43:57 -请求地址 : http://127.0.0.1:8088/system/dict/type
2018-07-12 16:43:57 -HTTP METHOD : GET
2018-07-12 16:43:57 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.listType
2018-07-12 16:43:57 -参数 : []
2018-07-12 16:43:57 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-07-12 16:43:57 -==> Parameters: 
2018-07-12 16:43:57 -<==      Total: 31
2018-07-12 16:43:57 -耗时 : 7
2018-07-12 16:43:57 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='notice_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-07-12 16:43:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:43:57 -请求地址 : http://127.0.0.1:8088/system/dict/list
2018-07-12 16:43:57 -HTTP METHOD : GET
2018-07-12 16:43:57 -CLASS_METHOD : com.justdo.system.dict.controller.DictController.list
2018-07-12 16:43:57 -参数 : [{limit=10, offset=0}]
2018-07-12 16:43:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-07-12 16:43:57 -==> Parameters: 0(Integer), 10(Integer)
2018-07-12 16:43:57 -<==      Total: 10
2018-07-12 16:43:57 -==>  Preparing: select count(*) from sys_dict3 
2018-07-12 16:43:57 -==> Parameters: 
2018-07-12 16:43:57 -<==      Total: 1
2018-07-12 16:43:57 -耗时 : 7
2018-07-12 16:43:57 -返回值 : com.justdo.common.utils.PageUtils@50976852
2018-07-12 16:43:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:43:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:43:58 -请求地址 : http://127.0.0.1:8088/system/regexp
2018-07-12 16:43:58 -HTTP METHOD : GET
2018-07-12 16:43:58 -请求地址 : http://127.0.0.1:8088/system/regexp/list
2018-07-12 16:43:58 -HTTP METHOD : GET
2018-07-12 16:43:58 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.Regexp
2018-07-12 16:43:58 -参数 : []
2018-07-12 16:43:58 -CLASS_METHOD : com.justdo.system.regexp.controller.RegexpController.list
2018-07-12 16:43:58 -参数 : [{limit=10, offset=0, rname=}]
2018-07-12 16:43:58 -耗时 : 0
2018-07-12 16:43:58 -返回值 : system/regexp/regexp
2018-07-12 16:43:58 -==>  Preparing: select RID,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from SYS_REGEXP order by RID desc 
2018-07-12 16:43:58 -==> Parameters: 
2018-07-12 16:43:58 -<==      Total: 9
2018-07-12 16:43:58 -==>  Preparing: select count(*) from sys_regexp 
2018-07-12 16:43:58 -==> Parameters: 
2018-07-12 16:43:58 -<==      Total: 1
2018-07-12 16:43:58 -耗时 : 7
2018-07-12 16:43:58 -返回值 : com.justdo.common.utils.PageUtils@26c52240
2018-07-12 16:43:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:43:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-07-12 16:43:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='9c638dc9b22d78a5694a444384256e36', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
